{"version":3,"sources":["components/colorPanel/colorPanel.js","config/config.js","Auth/firebase.js","redux/reducers/reducers.js","redux/reducers/uiReducers.js","redux/store/store.js","redux/store/types.js","components/userPanel/userpanel.js","redux/actions/actions.js","components/channels/Channels.js","components/directMessages/directMessages.js","components/sidePanel/sidePanel.js","components/messages/messageHeader.js","components/messages/fileModal.js","components/messages/ProgressBar.js","components/messages/messageForm.js","components/messages/Message.js","components/spinner/spinner.js","components/messages/Messages.js","components/metaPanel/metaPanel.js","components/landingPage/landingPage.js","App.js","components/signInMethods/googleAuth.js","components/signInMethods/githubAuth.js","theme/theme.js","pages/login/login.js","pages/signup/signup.js","serviceWorker.js","index.js"],"names":["colorPanel","Sidebar","as","Menu","inverted","vertical","visible","width","Divider","Button","icon","size","color","Component","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","Config","initialState","authenticated","authenticatedUser","initialChannelState","currentChannel","isPrivateChannel","initialUi","loading","errors","middleware","thunk","reducers","combineReducers","user","state","action","type","payload","channel","UI","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","userpanel","props","currentUser","dropDownOptions","key","text","displayName","toLowerCase","disabled","onClick","handleSignout","variant","className","auth","signOut","then","dispatch","this","Grid","Column","Row","style","padding","margin","Header","floated","Icon","name","Content","fontSize","Dropdown","trigger","Image","src","photoURL","spaced","avatar","CircularProgress","disableShrink","options","login","email","password","next","signInWithEmailAndPassword","data","registerUser","catch","err","multiAuth","provider","scope","addScope","signInWithPopup","result","credential","token","xa","jwt_decode","picture","user_id","googleSignup","username","profileImage","createdUser","userId","uid","regUser","database","ref","once","snapshot","val","child","set","coverImage","config","userData","axios","post","res","setCurrentChannel","setPrivateChannel","Channels","channels","channelName","channelDetails","modal","channelsRef","firstLoad","activeChannel","removeListeners","off","closeModal","setState","openModal","handleChange","event","preventDefault","target","value","addListeners","loadedChannels","on","snap","push","setFirstChannel","firstChannel","length","setActiveChannel","id","addChannel","newChannel","details","createdBy","update","console","log","error","displayChannels","map","Item","changeChannel","opacity","textAlign","active","handleSubmit","isformValid","Modal","basic","open","onClose","Form","onSubmit","Field","backGroundColor","Input","fluid","label","onChange","Actions","Dimmer","Loader","content","connect","directMessages","users","userRef","connectedRef","presenceRef","currentUserUid","loadedUsers","onDisconnect","remove","addStatusToUser","connected","updatedUsers","reduce","acc","concat","getChannelId","isUserOnline","status","channelData","fontStyle","sidePanel","fixed","background","messageHeader","numUniqueUsers","handleSearch","searchLoading","privateChannel","userPhoto","Segment","clearing","marginBottom","height","Subheader","parseInt","substring","placeholder","fileModal","file","authorized","addFile","files","sendFile","uploadFile","isAuthorized","contentType","mime","lookup","clearFile","filename","includes","ProgressBar","uploadState","percentUploaded","Progress","percent","progress","indicating","messageForm","storageRef","storage","uploadTask","message","messagesRef","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","getPath","metadata","pathToUpload","getMessagesRef","filePath","uuidv4","put","Math","round","bytesTransferred","totalBytes","getDownloadURL","downloadUrl","sendFileMessage","sendMessage","obj","labelPosition","some","Object","keys","Group","widths","isOwnMessage","Message","Comment","Avatar","Author","Metadata","moment","fromNow","hasOwnProperty","isImage","image","Text","messages","Messages","privateMessagesRef","searchTerm","searchResults","channelId","addMessageListener","loadedMessages","countUniqueUsers","uniqueUsers","displayMessages","displayChannelName","getUserPhoto","handleSearchMessages","channelMessages","regex","RegExp","match","setTimeout","metaPanel","landingPage","container","columns","marginLeft","googleAuth","handleLogin","authenticateGoogle","history","nxtProps","viewBox","xmlns","d","fill","mapActionsToProps","GoogleAuthProvider","githubAuth","authenticateGithub","GithubAuthProvider","palette","primary","light","main","dark","contrastText","secondary","theme","createMuiTheme","themeObject","loginUser","nextProps","marginTop","Typography","noValidate","TextField","helperText","InputProps","fullWidth","general","to","response","signUp","confirmPassword","signupUser","newUserData","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","defaults","baseURL","Root","headers","common","setAuthenticatedUser","onAuthStateChanged","setToken","Date","now","exact","path","component","App","Login","Signup","RootWithAuth","withRouter","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.21fd04f7.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Sidebar,Menu,Divider,Button} from \"semantic-ui-react\"\n\n class colorPanel extends Component {\n    render() {\n        return (\n            <Sidebar\n             as={Menu}  inverted vertical visible width=\"very thin\"\n             >\n                 <Divider/>\n                 <Button icon=\"add\" size=\"small\" color=\"blue\" />\n            </Sidebar>\n        )\n    }\n}\n\nexport default colorPanel\n","export default {\n    apiKey: \"AIzaSyBlji1huTUq206tJcg0r7IAX76STFh-xns\",\n    authDomain: \"portfolio-alex-eb3ef.firebaseapp.com\",\n    databaseURL: \"https://portfolio-alex-eb3ef.firebaseio.com\",\n    projectId: \"portfolio-alex-eb3ef\",\n    storageBucket: \"portfolio-alex-eb3ef.appspot.com\",\n    messagingSenderId: \"776158175345\",\n    appId: \"1:776158175345:web:2140b8f94fedf1103bbbd0\",\n    measurementId: \"G-5VBPTVC7PQ\"\n  };","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\nimport Config from \"../config/config\"\nfirebase.initializeApp(Config)\n\nexport default firebase","import {\n  SET_GOOGLE_USER,\n  SET_AUTHENTICATED,\n  SET_UNAUTHENTICATED,\n  SET_PRIVATE_CHANNEL,\n  SET_CURRENT_CHANNEL,\n} from \"../store/types\";\nconst initialState = {\n  authenticated: false,\n  authenticatedUser: null,\n};\n\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return {\n        ...state,\n        authenticated: true,\n        authenticatedUser: action.payload,\n      };\n    case SET_UNAUTHENTICATED:\n      return { ...initialState };\n    case SET_GOOGLE_USER:\n      return { ...state, authenticated: true, ...action.payload };\n    default:\n      return state;\n  }\n};\n\nconst initialChannelState = {\n  currentChannel: null,\n  isPrivateChannel: false,\n};\n\nexport const currentChannelReducer = (state = initialChannelState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_CHANNEL:\n      return { ...state, currentChannel: action.payload.currentChannel };\n    case SET_PRIVATE_CHANNEL:\n      return {\n        ...state,\n        isPrivateChannel: action.payload.isPrivateChannel,\n      };\n    default:\n      return state;\n  }\n};\n\n\n\n","import {SET_ERRORS,CLEAR_ERRORS,LOADING_UI,STOP_LOADING_UI} from \"../store/types\"\n\nconst initialUi = {\n    loading: false,\n    errors: null\n}\n\nexport default function(state=initialUi,action)  {\n    switch(action.type){\n        case SET_ERRORS: return {...state, loading:false,errors: action.payload}\n        case CLEAR_ERRORS: return {...state, loading:false,errors: null}\n        case LOADING_UI: return {...state, loading:true}\n        case STOP_LOADING_UI: return {...state, loading:false}\n        default: return state\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport {userReducer,currentChannelReducer} from '../reducers/reducers';\nimport uiReducer from '../reducers/uiReducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst reducers = combineReducers({\n  user: userReducer,\n  channel: currentChannelReducer,\n  UI: uiReducer\n});\n\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\nconst store = createStore(reducers, initialState, enhancer);\n\nexport default store;","// User reducer types\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\nexport const SET_GOOGLE_USER = 'SET_GOOGLE_USER';\nexport const SET_USER ='SET_USER'\n// UI reducer types\nexport const SET_ERRORS = 'SET_ERRORS';\nexport const LOADING_UI = 'LOADING_UI';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const LOADING_DATA = 'LOADING_DATA';\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\n// Data reducer types\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL'  \nexport const SET_PRIVATE_CHANNEL = 'SET_PRIVATE_CHANNEL'","import React, { Component, Fragment } from 'react'\nimport { Grid, Header, Icon, Dropdown,Image } from \"semantic-ui-react\"\nimport firebase from \"../../Auth/firebase\"\nimport store from \"../../redux/store/store\"\nimport {SET_UNAUTHENTICATED} from \"../../redux/store/types\"\nimport Button from \"@material-ui/core/Button\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n\n\nclass userpanel extends Component {\n    state = {\n        user: this.props.currentUser\n    }\n    \n    dropDownOptions = () => [\n        { key:\"user\",text: <span >Signed as <strong>\n            \n    {this.state.user ?(<Fragment>{this.state.user.displayName.toLowerCase()}</Fragment>):(<Fragment/>)}\n            \n            </strong></span>,disabled: true},\n        {key: \"avatar\",text: <span>Change Avatar</span> },\n        { key: \"signout\",text: <span><Button onClick={this.handleSignout } type=\"submit\" variant=\"contained\" className=\"button\">SignOut</Button></span>}\n    ]\n    handleSignout =()=> {\n        firebase.auth().signOut().then(()=> {\n            store.dispatch({type: SET_UNAUTHENTICATED\n            })\n            \n        })\n    }\n    \n    render() {\n    \n        const {user}= this.state\n        // console.log(user)\n        \n        return (\n            <Grid >\n                <Grid.Column>\n                    <Grid.Row style={{ padding: '1.2em', margin: 0 }} className=\"menu_item\">\n                        <Header inverted floated=\"left\" as=\"h2\"  className=\"animated slideInLeft delay-1s\">\n                            <Icon name=\"meetup\" />\n                            <Header.Content style={{ fontSize: 20 }} >Meet-Friends</Header.Content>\n                        </Header>\n                    </Grid.Row>\n                    <Header style={{ padding: '0.25em' }} as=\"h4\" inverted>\n                        <Dropdown \n                        className=\"dropdown\"\n                        trigger={\n\n                               <Fragment>\n                                {user ? (\n                                <span>\n                                <Image src={user.photoURL} spaced=\"right\" avatar />\n\n                                {user.displayName}\n                                </span> \n                                ):(\n                                    <CircularProgress size={20} disableShrink />\n                                )}\n                               </Fragment>\n                           \n                        }\n                            options={this.dropDownOptions()}\n                        />\n                    </Header>\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\n// const mapStateToProps =(state) => ({\n//     user: state.user\n// })\n\nexport default  userpanel\n","import {\n  LOADING_UI,\n  SET_ERRORS,\n  SET_AUTHENTICATED,\n  SET_PRIVATE_CHANNEL,\n  SET_CURRENT_CHANNEL,\n} from \"../store/types\";\nimport firebase from \"../../Auth/firebase\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport config from \"../../config/config\";\n\nexport const login = (email, password) => (dispatch, next) => {\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .then((data) => {\n      if (data) {\n        const { email } = data.user;\n        dispatch(registerUser(data))\n        \n      }\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err,\n      });\n    });\n};\n\n\nexport const multiAuth = (provider, scope) => (dispatch) => {\n  provider.addScope(`${scope[0]}`);\n  if (scope[1]) provider.addScope(`${scope[1]}`);\n  firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then((result) => {\n      if (result.credential) {\n        const { user } = result;\n        let token;\n        const { displayName, email, xa } = user;\n        token = xa;\n        const { picture, user_id } = jwt_decode(token);\n\n        const userData = {\n          email: email,\n          username: displayName,\n          profileImage: picture,\n        };\n        dispatch(googleSignup(userData, user_id));\n        dispatch(registerUser(result))\n      }\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err,\n      });\n    });\n};\n\nexport const authenticateGoogle = () => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  const provider = new firebase.auth.GoogleAuthProvider();\n  let scope = [\"profile\", \"email\"];\n  dispatch(multiAuth(provider, scope));\n};\n\nexport const registerUser = (createdUser) => {\n  const defaultProfileImage = \"profile.png\";\n  const defaultCoverImage = \"download.png\";\n  const userId = firebase.auth().currentUser.uid;\n  // console.log(userId)\n  const regUser = firebase.database().ref(\"users\");\n  const userRef = firebase\n    .database()\n    .ref(\"/users/\" + userId)\n    .once(\"value\")\n    .then((snapshot) => {\n      // console.log(snapshot.val())\n      if (snapshot.val() !== null) {\n\n        return {\n          type: SET_ERRORS,\n          payload: { email: `${snapshot.val().email} exists` },\n        };\n      } else {\n        // console.log(createdUser)\n        return regUser.child(createdUser.user.uid).set({\n          email: createdUser.user.email,\n          username: createdUser.user.displayName,\n          profileImage: createdUser.user.photoURL,\n          coverImage: `https://firebasestorage.googleapis.com/v0/b/${config.storageBucket}/o/${defaultCoverImage}?alt=media`,\n          userId: userId\n        });\n      }\n    });\n};\n\n// export const authenticateFaceBook = () => (dispatch) => {\n//   dispatch({type: LOADING_UI})\n//   const provider = new firebase.auth.FacebookAuthProvider()\n//   let scope = [\"user_birthday\"]\n//   dispatch(multiAuth(provider,scope))\n\n// }\n\nexport const authenticateGithub = () => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  const provider = new firebase.auth.GithubAuthProvider();\n  let scope = [\"repo\"];\n  // let email = \"email\"\n  dispatch(multiAuth(provider, scope));\n};\n\nexport const googleSignup = (userData, userId) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(`/google/${userId}`, userData)\n    .then((res) => {\n      if (res.data) {\n        return;\n      }\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err,\n      });\n    });\n};\n\nexport const loginUser = (userData) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/login\", userData)\n    .then(() => {\n      dispatch(login(userData.email, userData.password));\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\nexport const signupUser = (newUserData) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/signup\", newUserData)\n    .then(() => {\n      dispatch(login(newUserData.email, newUserData.password));\n      \n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\nexport const setAuthenticatedUser = (user) => {\n  return {\n    type: SET_AUTHENTICATED,\n    payload: user,\n  };\n};\n\n\n\nexport const setCurrentChannel = (channel) => (dispatch) => {\n  dispatch({\n    type: SET_CURRENT_CHANNEL,\n    payload: {\n      currentChannel: channel,\n    },\n  });\n};\n\nexport const setPrivateChannel = isPrivateChannel => {\n  return {\n      type: SET_PRIVATE_CHANNEL,\n      payload: {\n          isPrivateChannel\n      }\n  }\n}","import React, { Component, Fragment } from 'react'\nimport { Menu, Icon, Modal, Form, Input, Button } from \"semantic-ui-react\"\nimport firebase from \"../../Auth/firebase\"\nimport { Loader, Dimmer } from \"semantic-ui-react\";\nimport {setCurrentChannel,setPrivateChannel} from \"../../redux/actions/actions\"\nimport {connect} from \"react-redux\"\n\n\nclass Channels extends Component {\n\n    state = {\n        channels: [],\n        channelName: \"\",\n        channelDetails: \"\",\n        modal: false,\n        channelsRef: firebase.database().ref('channels'),\n        firstLoad: true ,\n        activeChannel:'',\n        loading: true\n\n    }\n\n    componentDidMount() {this.addListeners()}\n    UNSAFE_componentWillMount(){this.removeListeners()}\n    removeListeners = () => {this.state.channelsRef.off() }\n\n    closeModal = () => { this.setState({ modal: false }) }\n\n    openModal = () => { this.setState({ modal: true }) }\n\n    handleChange = (event) => { event.preventDefault();this.setState({ [event.target.name]: event.target.value })}\n    \n\n    addListeners = () => {\n        let loadedChannels = []\n        this.state.channelsRef.on(\"child_added\", snap => {\n            loadedChannels.push(snap.val())\n            this.setState({ channels: loadedChannels }, ()=> this.setFirstChannel())\n        })\n    }\n\n    setFirstChannel =() => {\n        const firstChannel = this.state.channels[0]\n        if(this.state.firstLoad && this.state.channels.length > 0){\n            this.setActiveChannel(firstChannel)\n            this.props.setCurrentChannel(firstChannel)\n        }\n        this.setState({firstLoad: false})   \n    }\n    setActiveChannel = channel => {\n        this.setState({activeChannel: channel.id,loading: false})\n    }\n\n    addChannel = () => {\n        const { channelsRef, channelName, channelDetails } = this.state\n        const { username, email, userId, profileImage } = this.props.authenticatedUser\n        const key = channelsRef.push().key\n        const newChannel = {\n            id: key,\n            name: channelName,\n            details: channelDetails,\n            createdBy: {\n                name: username,\n                email: email,\n                avatar: profileImage,\n                userId: userId\n            }\n        }\n        channelsRef.child(key).update(newChannel).then(() => {\n            this.setState({ channelName: \"\", channelDetails: \"\" })\n            this.closeModal()\n            console.log(\"Channel added\")\n        }).catch((error) => {\n            console.error(error)\n        })\n    }\n\n    displayChannels = (channels) => (\n        channels.length > 0 && channels.map(channel => (\n            <Menu.Item \n            key={channel.id}\n            onClick={() => this.changeChannel(channel)}\n            name={channel.name}\n            style={{opacity: 0.8,textAlign:'left'}}\n            active={channel.id === this.state.activeChannel}\n            >\n                # {channel.name}\n            </Menu.Item>\n        ))\n    )\n\n    handleSubmit = (event) => {\n        if (this.isformValid(this.state)) {\n            this.addChannel()\n        }\n    }\n\n    isformValid = ({ channelName, channelDetails }) => channelName && channelDetails;\n\n    changeChannel = channel => {\n        this.setActiveChannel(channel)\n        this.props.setCurrentChannel(channel)\n        this.props.setPrivateChannel(false)\n\n    }\n\n\n    render() {\n        const { modal, channels } = this.state\n        return (\n            <Fragment>\n                <Menu.Menu className=\"menu_item2\">\n                    <Menu.Item style={{textAlign:'left'}}>\n                        <span><Icon name=\"exchange\" /> CHANNELS </span> {\" \"}\n               ({channels.length}) <Icon name=\"add\" className=\"add\" onClick={this.openModal} />\n\n                    </Menu.Item>\n                    {this.displayChannels(channels)}\n                </Menu.Menu>\n\n                <Modal basic open={modal} onClose={this.closeModal}>\n                    {this.props.authenticatedUser ? (\n                        <Fragment>\n                            <Modal.Header>Add a Channel </Modal.Header>\n                            <Modal.Content>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Field className=\"form-control\" style={{backGroundColor: '#607d8b'}}>\n                                        <Input fluid label=\"Name of channel\" name=\"channelName\" onChange={this.handleChange}\n\n\n                                        />\n                                    </Form.Field>\n                                    <Form.Field className=\"form-control\">\n                                        <Input fluid label=\"About the channel\" name=\"channelDetails\" onChange={this.handleChange} />\n                                    </Form.Field>\n                                </Form>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button inverted color=\"green\" onClick={this.handleSubmit}>\n                                    <Icon name=\"checkmark\" /> Add\n                        </Button>\n                                <Button inverted color=\"red\" onClick={this.closeModal}>\n                                    <Icon name=\"remove\" /> Cancel\n                        </Button>\n                            </Modal.Actions>\n                        </Fragment>\n                    ) : (\n                            <Dimmer active>\n                                <Loader size=\"huge\" content=\"Please Wait authenticating...\" />\n                            </Dimmer>\n                        )}\n\n                </Modal>\n            </Fragment>\n\n        )\n    }\n}\n\n\n\n\nexport default connect(null,{setCurrentChannel,setPrivateChannel})(Channels)\n","import React, { Component, Fragment } from \"react\";\nimport { Menu, Icon, Image } from \"semantic-ui-react\";\nimport firebase from \"../../Auth/firebase\";\nimport { setCurrentChannel,setPrivateChannel } from \"../../redux/actions/actions\";\nimport { connect } from \"react-redux\";\n\nclass directMessages extends Component {\n  state = {\n    activeChannel: '',\n    user: this.props.user,\n    users: [],\n    userRef: firebase.database().ref(\"users\"),\n    connectedRef: firebase.database().ref(\".info/connected\"),\n    presenceRef: firebase.database().ref(\"presence\"),\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListeners(this.state.user.uid);\n    }\n    // console.log(this.state.connectedRef)\n  }\n  addListeners = (currentUserUid) => {\n    const { userRef, connectedRef, presenceRef } = this.state;\n    let loadedUsers = [];\n    userRef.on(\"child_added\", (snap) => {\n      let user = snap.val();\n      user[\"uid\"] = snap.key;\n      user[\"status\"] = \"offline\";\n      if (this.state.user && this.state.user.uid !== user[\"userId\"]) {\n        loadedUsers.push(user);\n      }\n\n      this.setState({ users: loadedUsers });\n    });\n    // console.log(loadedUsers)\n    connectedRef.on(\"value\", (snap) => {\n      if (snap.val() === true) {\n        const ref = presenceRef.child(currentUserUid);\n        ref.set(true);\n        ref.onDisconnect().remove((err) => {\n          if (err !== null) {\n            console.error(err);\n          }\n        });\n      }\n    });\n\n    presenceRef.on(\"child_added\", (snap) => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key);\n      }\n    });\n\n    presenceRef.on(\"child_removed\", (snap) => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key, false);\n      }\n    });\n  };\n\n  addStatusToUser = (userId, connected = true) => {\n    const updatedUsers = this.state.users.reduce((acc, user) => {\n      if (user.uid === userId) {\n        user[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\n      }\n      return acc.concat(user);\n    }, []);\n    this.setState({ users: updatedUsers });\n  };\n\n  getChannelId = (userId) => {\n    const currentUserUid = this.state.user.uid;\n    return userId < currentUserUid\n      ? `${userId}/${currentUserUid}`\n      : `${currentUserUid}/${userId}`;\n  };\n\n  isUserOnline = (user) => user.status === \"online\";\n  \n  changeChannel = (user) => {\n    const channelId = this.getChannelId(user.userId);\n    const channelData = {\n      id: channelId,\n      name: user.username,\n      photoURL: user.profileImage\n    };\n    this.props.setCurrentChannel(channelData);\n    this.props.setPrivateChannel(true)\n    this.setActiveChannel(user.userId)\n  };\n\n  setActiveChannel = (userId) => this.setState({activeChannel: userId})\n\n  render() {\n    const { users,activeChannel } = this.state;\n\n    return (\n      <Menu.Menu className=\"menu_item_direct\">\n        <Menu.Item>\n          <span>\n            <Icon name=\"mail\" />\n            DIRECT MESSAGES\n          </span>{\" \"}\n          ({users.length})\n        </Menu.Item>\n      \n          {users.map((user) => (\n            <Menu.Item\n              key={user.userId}\n              active={user.userId === activeChannel}\n              onClick={() => this.changeChannel(user)}\n              style={{ opacity: 0.8, fontStyle: \"italic\",textAlign:'left' }}\n            >\n              <Icon\n                name=\"circle\"\n                color={this.isUserOnline(user) ? \"green\" : \"red\"}\n              />\n              <span>\n                {\" \"}\n                <Image src={user.profileImage} spaced=\"right\" avatar />\n              </span>\n              {(user.username).toLowerCase()}\n            </Menu.Item>\n          ))}\n       \n      </Menu.Menu>\n    );\n  }\n}\n\nexport default connect(null, { setCurrentChannel,setPrivateChannel })(directMessages);\n","import React, { Component } from 'react'\nimport {Menu} from \"semantic-ui-react\"\nimport UserPanel from \"../userPanel/userpanel\"\nimport \"../landingPage/index.css\"\nimport Channels from \"../channels/Channels\"\nimport DirectMessages from \"../directMessages/directMessages\"\n\n class sidePanel extends Component {\n\n    render() {\n        return (\n\n           \n        \n            <Menu  fixed=\"left\" inverted vertical style={{background: '#607d8b', fontSize: '1.2rem'}} >\n                \n            <UserPanel currentUser={this.props.authenticatedUser} />\n            <br/>\n            <Channels authenticatedUser={this.props.authenticatedUser}/>\n            <DirectMessages \n            key={this.props.authenticatedUser && this.props.authenticatedUser.uid}\n            user={this.props.authenticatedUser}/>\n           \n         </Menu>\n         \n        )\n    }\n}\n\n\n\nexport default sidePanel\n","import React, { Component } from \"react\";\nimport { Header, Segment, Input, Icon,Image } from \"semantic-ui-react\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nclass messageHeader extends Component {\n  render() {\n    const {\n      channelName,\n      numUniqueUsers,\n      handleSearch,\n      searchLoading,\n      privateChannel,\n      userPhoto,\n    } = this.props;\n\n    return (\n      <Segment clearing>\n        <Header fluid=\"true\" as=\"h2\" floated=\"left\" style={{ marginBottom: 0 }}>\n          <span>\n            {userPhoto ?  <Image src={userPhoto} spaced=\"right\" style={{height: '2em'}} avatar />:\"\"}\n            {(channelName).toLowerCase()}\n           {!privateChannel &&  <Icon name={\"star outline\"} color=\"black\" /> }\n          </span>\n          <Header.Subheader>\n            {parseInt(numUniqueUsers.substring(0,1)) > 0 ? (\n              numUniqueUsers\n            ) : (\n              <CircularProgress size={10} disableShrink />\n            )}\n          </Header.Subheader>\n        </Header>\n        <Header floated=\"right\">\n          <Input\n            loading={searchLoading}\n            onChange={handleSearch}\n            size=\"mini\"\n            icon=\"search\"\n            name=\"searchTerm\"\n            placeholder=\"Search Messages\"\n          />\n        </Header>\n      </Segment>\n    );\n  }\n}\n\nexport default messageHeader;\n","import React, { Component } from \"react\";\nimport { Modal, Input, Icon, Button } from \"semantic-ui-react\";\nimport mime from \"mime-types\";\n\nclass fileModal extends Component {\n  state = {\n    file: null,\n    authorized: [\"image/jpeg\",\"image/png\"],\n  };\n\n  addFile = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      this.setState({ file });\n    }\n  };\n  sendFile = () => {\n    const { file } = this.state;\n    const { uploadFile, closeModal } = this.props;\n\n    if (file !== null) {\n      if (this.isAuthorized(file.name)) {\n        const metadata = { contentType: mime.lookup(file.name) };\n        uploadFile(file, metadata);\n        closeModal();\n        this.clearFile();\n      }\n    }\n  };\n  isAuthorized = (filename) =>\n    this.state.authorized.includes(mime.lookup(filename));\n\n    clearFile = () => this.setState({ file: null });\n\n  render() {\n    const { modal, closeModal } = this.props;\n\n    return (\n      <Modal basic open={modal} onClose={closeModal}>\n        <Modal.Header>Select an Image File</Modal.Header>\n        <Modal.Content>\n          <Input\n            onChange={this.addFile}\n            fluid\n            label=\"File types: jpg, png\"\n            name=\"file\"\n            type=\"file\"\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={this.sendFile} color=\"green\" inverted>\n            <Icon name=\"checkmark\" /> Send\n          </Button>\n          <Button color=\"red\" inverted onClick={closeModal}>\n            <Icon name=\"remove\" /> Cancel\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default fileModal;\n","import React from \"react\";\nimport { Progress } from \"semantic-ui-react\";\n\nconst ProgressBar = ({ uploadState, percentUploaded }) =>\n  uploadState === \"uploading\" && ( \n    <Progress\n      className=\"progress__bar\"\n      percent={percentUploaded}\n      progress\n      indicating\n      size=\"small\"\n      inverted\n    />\n  );\n\nexport default ProgressBar;","import React, { Component } from \"react\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\nimport firebase from \"../../Auth/firebase\";\nimport FileModal from \"./fileModal\";\nimport {v4 as uuidv4} from \"uuid\";\nimport ProgressBar from \"./ProgressBar\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\n\nclass messageForm extends Component {\n  state = {\n    storageRef: firebase.storage().ref(),\n    uploadState: \"\",\n    uploadTask: null,\n    message: \"\",\n    loading: false,\n    channel: this.props.currentChannel,\n    user: this.props.currentUser,\n    messagesRef: this.props.messagesRef,\n    privateChannel: this.props.privateChannel,\n    errors: [],\n    modal: false,\n    percentUploaded: 0,\n  };\n\n  openModal = () => this.setState({ modal: true });\n  closeModal = () => this.setState({ modal: false });\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  createMessage = (fileUrl = null) => {\n    const { user } = this.state;\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: user.uid,\n        name: user.displayName,\n        avatar: user.photoURL,\n      },\n    };\n    if (fileUrl !== null) {\n      message[\"image\"] = fileUrl;\n    } else {\n      message[\"content\"] = this.state.message;\n    }\n    return message;\n  };\n\n  getPath = () => {\n    if(this.state.privateChannel){\n      return `chat/private-${this.state.channel.id}`\n    }else{\n      return 'chat/public'\n    }\n  } \n\n  uploadFile = (file, metadata) => {\n    const pathToUpload = this.state.channel.id;\n    const ref = this.props.getMessagesRef();\n    const filePath = `${this.getPath()}${uuidv4()}.jpeg`;\n\n    this.setState(\n      {\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata),\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          (snap) => {\n            const percentUploaded = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            );\n            this.setState({ percentUploaded });\n          },\n          (err) => {\n            console.error(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              uploadState: \"error\",\n              uploadTask: null,\n            });\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then((downloadUrl) => {\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\n              })\n              .catch((err) => {\n                console.error(err);\n                this.setState({\n                  errors: this.state.errors.concat(err),\n                  uploadState: \"error\",\n                  uploadTask: null,\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  sendMessage = () => {\n    const { message, channel } = this.state;\n    const {getMessagesRef} = this.props\n    if (message) {\n      this.setState({ loading: true });\n      getMessagesRef()\n        .child(channel.id)\n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          this.setState({ loading: false, message: \"\", errors: [] });\n        })\n        .catch((error) => {\n          console.error(error);\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat(error),\n          });\n        });\n    } else {\n      this.setState({\n        errors: this.state.errors.concat({ message: \"Add a message\" }),\n      });\n    }\n  };\n\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\n    ref\n      .child(pathToUpload)\n      .push()\n      .set(this.createMessage(fileUrl))\n      .then(() => {\n        this.setState({ uploadState: \"done\" });\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({\n          errors: this.state.errors.concat(err),\n        });\n      });\n  };\n\n  render() {\n    const {\n      errors,\n      message,\n      loading,\n      modal,\n      uploadState,\n      percentUploaded,\n      user,\n    } = this.state;\n\n    const getLength = (obj)=> {\n      if(obj === null) return 0\n      const lengthUser = Object.keys(obj).length\n      return lengthUser \n    }\n\n    return (\n      <Segment className=\"message__form\">\n        <Input\n          fluid\n          name=\"message\"\n          style={{ marginBottom: \"0.7em\" }}\n          label={<Button icon={\"add\"} />}\n          value={message}\n          labelPosition=\"left\"\n          placeholder=\"Write your message\"\n          onChange={this.handleChange}\n          className={\n            errors.some((error) => error.message.includes(\"message\"))\n              ? \"error\"\n              : \"\"\n          }\n        />\n        <ProgressBar\n          uploadState={uploadState}\n          percentUploaded={percentUploaded}\n        />\n\n        {getLength(user) > 0 ?(\n          <Button.Group icon widths=\"2\">\n          <Button\n            color=\"orange\"\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n            onClick={this.sendMessage}\n            \n            disabled={loading}\n          />\n          <Button\n            color=\"teal\"\n            content=\"Upload Media\"\n            labelPosition=\"right\"\n            icon=\"cloud upload\"\n            disabled={uploadState === \"uploading\"}\n            onClick={this.openModal}\n          />\n        </Button.Group>\n        ):(\n          <Dimmer active>\n            <Loader size=\"small\" content=\"Please Wait loding chat...\" />\n          </Dimmer>\n        )}\n        <FileModal\n            modal={modal}\n            closeModal={this.closeModal}\n            uploadFile={this.uploadFile}\n          /> \n        \n      </Segment>\n    );\n  }\n}\n\nexport default messageForm;\n","import React,{Fragment} from \"react\"\nimport { Comment,Image } from \"semantic-ui-react\"\nimport moment from \"moment\"\n\nconst isOwnMessage = (message, user) => {\n    return message.user.id === user.uid ? \"message__self\" : ''\n}\nconst isOwnMessageTwo = (message, user) => {\n    return message.user.id === user.uid ? \"message__selfTwo\" : ''\n}\n\nconst isImage = (message)=> {\n    return message.hasOwnProperty('image') && !message.hasOwnProperty('conetent')\n     \n}\n\nconst timeFromNow = (timestamp) => moment(timestamp).fromNow()\n\nconst Message = ({ message, user }) => (\n    <Comment >\n         {message.user.id === user.uid ? (<Fragment/>)\n         :( <Comment.Avatar src={message.user.avatar} />)\n         }\n        <Comment.Content className={isOwnMessage(message, user)} >\n           \n        <Comment.Author as=\"a\" >\n\n            {message.user.id === user.userId ? ( <Comment.Avatar  src={message.user.avatar}  />):(<Fragment>{message.user.name}</Fragment>)}\n        </Comment.Author>\n        <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\n       \n        {isImage(message) ? <Image src={message.image} className=\"message__image\"/>: \n         <Comment.Text>{message.content}</Comment.Text>\n        }\n        <br/>\n        <br/>\n        </Comment.Content>\n    </Comment>\n)\nexport default Message","import React,{Fragment} from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\nimport {connect} from \"react-redux\"\n\nconst Spinner = ({user,messages}) => {\n \n\n const {authenticated} = user\n  return (\n    <Dimmer active>\n     {authenticated? (\n\n        <Fragment>\n          {messages.length > 0 ? <Loader size=\"huge\" content=\"Preparing Chat...\" />:<h1 className=\"animated pulse\">Add message</h1>}\n        </Fragment>\n     ):(\n      <Loader size=\"huge\" content=\"Please Wait login in...\" />\n     )}\n    </Dimmer>\n  )\n\n}\nconst mapStateToProps = state => ({\n  user: state.user\n})\n\nexport default connect(mapStateToProps)(Spinner)\n\n","import React, { Component, Fragment } from \"react\";\nimport { Segment, Comment } from \"semantic-ui-react\";\nimport MessagesHeader from \"./messageHeader\";\nimport MessageForm from \"./messageForm\";\nimport firebase from \"../../Auth/firebase\";\nimport Message from \"./Message\";\nimport Spinner from \"../spinner/spinner\";\n\nclass Messages extends Component {\n  state = {\n    privateChannel: this.props.isPrivateChannel,\n    messagesRef: firebase.database().ref(\"messages\"),\n    privateMessagesRef: firebase.database().ref(\"privateMessages\"),\n    channel: this.props.currentChannel,\n    currentUser: this.props.authenticatedUser,\n    messages: [],\n    loading: true,\n    numUniqueUsers: \"\",\n    searchTerm: \"\",\n    searchLoading: false,\n    searchResults: [],\n  };\n\n  componentDidMount() {\n    const { channel, currentUser } = this.state;\n    if (channel && currentUser) {\n      this.addListeners(channel.id);\n    }\n  }\n\n\n\n\n\n  getMessagesRef = () => {\n   const {messagesRef, privateMessagesRef,privateChannel} = this.state\n   return privateChannel ? privateMessagesRef:messagesRef\n  }\n\n\n  addListeners = (channelId) => {\n    this.addMessageListener(channelId);\n  };\n\n  addMessageListener = (channelId) => {\n    let loadedMessages = [];\n    const ref = this.getMessagesRef()\n    ref.child(channelId).on(\"child_added\", (snap) => {\n      loadedMessages.push(snap.val());\n      this.setState({ messages: loadedMessages, loading: false });\n    });\n    this.countUniqueUsers(loadedMessages);\n  };\n\n  countUniqueUsers = (messages) => {\n    const uniqueUsers = messages.reduce((acc, message) => {\n      if (!acc.includes(message.user.id)) {\n        acc.push(message.user.id);\n      }\n      return acc;\n    }, []);\n\n    const numUniqueUsers = `${uniqueUsers.length} user${\n      uniqueUsers.length > 1 ? \"s\" : \"\"\n    }`;\n    this.setState({ numUniqueUsers: numUniqueUsers });\n  };\n\n  displayMessages = (messages) =>\n    messages.length > 0 ? (\n      messages.map((message) => (\n        <Message\n          key={message.timestamp}\n          message={message}\n          user={this.state.currentUser}\n        />\n      ))\n    ) : (\n    \n     <Spinner messages={messages} />\n     \n      // <Spinner messages={messages} />'\n    );\n\n  displayChannelName = (channel) => {\n    return channel\n      ? `${this.state.privateChannel ? \"@\" : \"#\"}${channel.name}`\n      : \"\";\n  };\n\n  getUserPhoto = (channel)=> {\n    return channel && channel.photoURL ? channel.photoURL: ''\n  }\n\n  handleSearch = (event) => {\n    this.setState(\n      {\n        searchTerm: event.target.value,\n        searchLoading: true,\n      },\n      () => {\n        this.handleSearchMessages();\n      }\n    );\n  };\n  handleSearchMessages = () => {\n    const channelMessages = [...this.state.messages];\n    const regex = new RegExp(this.state.searchTerm, \"gi\");\n    const searchResults = channelMessages.reduce((acc, message) => {\n      if (\n        (message.content && message.content.match(regex)) ||\n        message.user.name.match(regex)\n      ) {\n        acc.push(message);\n      }\n      return acc;\n    }, []);\n    this.setState({ searchResults: searchResults });\n    setTimeout(() => this.setState({ searchLoading: false }), 1000);\n  };    \n\n  render() {\n    const {\n      messagesRef,\n      channel,\n      currentUser,\n      messages,\n      numUniqueUsers,\n      searchTerm,\n      searchResults,\n      searchLoading,\n      privateChannel,\n    } = this.state;\n    // console.log(channel)\n    return (\n      <Fragment>\n        <MessagesHeader\n          handleSearch={this.handleSearch}\n          channelName={this.displayChannelName(channel)}\n          numUniqueUsers={numUniqueUsers}\n          searchLoading={searchLoading}\n          privateChannel={privateChannel}\n          userPhoto={this.getUserPhoto(channel)}\n        />\n        <Segment>\n          <Comment.Group className=\"messages\">\n            {searchTerm\n              ? this.displayMessages(searchResults)\n              : this.displayMessages(messages)}\n          </Comment.Group>\n        </Segment>\n        <MessageForm\n          messagesRef={messagesRef}\n          currentChannel={channel}\n          privateChannel={privateChannel}\n          currentUser={currentUser}\n          getMessagesRef={this.getMessagesRef}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Messages;\n","import React, { Component } from 'react'\n\n class metaPanel extends Component {\n    render() {\n        return (\n            <div>\n              Meta panel \n            </div>\n        )\n    }\n}\n\nexport default metaPanel\n","import React, { Component } from 'react'\nimport {Grid} from \"semantic-ui-react\"\nimport ColorPanel from \"../colorPanel/colorPanel\"\nimport SidePanel from \"../sidePanel/sidePanel\"\nimport Messages from \"../messages/Messages\"\nimport MetaPanel from \"../metaPanel/metaPanel\"\n\n\n\nexport class landingPage extends Component {\n   \n    render() {\n        const {currentChannel,authenticatedUser,isPrivateChannel} = this.props\n        // console.log(isPrivateChannel)\n        return (\n            <Grid container columns=\"equal\" className=\"app\" >\n                <ColorPanel/>\n                      <SidePanel \n                      authenticatedUser={authenticatedUser}\n                      key={authenticatedUser && authenticatedUser.uid}\n                      />\n                  \n            <Grid.Column style={{ marginLeft: \"15em\", width: '30em'}}>\n            <Messages\n            key={currentChannel && currentChannel.id} \n            currentChannel={currentChannel}\n            authenticatedUser={authenticatedUser}\n            isPrivateChannel={isPrivateChannel}\n            \n            />\n            </Grid.Column>\n\n            <Grid.Column style={{ width: 4}}>\n            <MetaPanel />\n            </Grid.Column>\n              \n            </Grid>\n        )\n    }\n}\n\n\n\nexport default landingPage\n","import React from 'react'\nimport LandingPage from './components/landingPage/landingPage'\nimport './App.css';\nimport {Grid }from \"semantic-ui-react\"\nimport { connect } from \"react-redux\"\n\nconst App =({currentChannel,authenticatedUser,isPrivateChannel})=> {\n    return (\n      <Grid container>\n        <Grid.Column>\n       <LandingPage\n       authenticatedUser={authenticatedUser}\n       currentChannel={currentChannel}\n       isPrivateChannel={isPrivateChannel}\n       />\n          </Grid.Column> \n      </Grid>\n\n    )\n  \n}\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n  authenticatedUser: state.user.authenticatedUser,\n  currentChannel: state.channel.currentChannel,\n  isPrivateChannel: state.channel.isPrivateChannel,\n})\n\nexport default connect(mapStateToProps)(App)\n","import React, { Component } from 'react'\nimport { authenticateGoogle } from \"../../redux/actions/actions\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\n\n\n\n\nclass googleAuth extends Component {\n    UNSAFE_componentWillReceiveProps(nxtProps) {\n        if (nxtProps.UI.errors) {\n            this.setState({ errors: nxtProps.UI.errors })\n        }\n    }\n\n    handleLogin = (event) => {\n        event.preventDefault()\n        this.props.authenticateGoogle(this.props.history)\n    }\n\n    render() {\n        return (\n            \n            <button type=\"button\" className=\"google-button\" onClick={this.handleLogin} >\n            <span className=\"google-button__icon\">\n              <svg viewBox=\"0 0 366 372\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M125.9 10.2c40.2-13.9 85.3-13.6 125.3 1.1 22.2 8.2 42.5 21 59.9 37.1-5.8 6.3-12.1 12.2-18.1 18.3l-34.2 34.2c-11.3-10.8-25.1-19-40.1-23.6-17.6-5.3-36.6-6.1-54.6-2.2-21 4.5-40.5 15.5-55.6 30.9-12.2 12.3-21.4 27.5-27 43.9-20.3-15.8-40.6-31.5-61-47.3 21.5-43 60.1-76.9 105.4-92.4z\" id=\"Shape\" fill=\"#EA4335\"/><path d=\"M20.6 102.4c20.3 15.8 40.6 31.5 61 47.3-8 23.3-8 49.2 0 72.4-20.3 15.8-40.6 31.6-60.9 47.3C1.9 232.7-3.8 189.6 4.4 149.2c3.3-16.2 8.7-32 16.2-46.8z\" id=\"Shape\" fill=\"#FBBC05\"/><path d=\"M361.7 151.1c5.8 32.7 4.5 66.8-4.7 98.8-8.5 29.3-24.6 56.5-47.1 77.2l-59.1-45.9c19.5-13.1 33.3-34.3 37.2-57.5H186.6c.1-24.2.1-48.4.1-72.6h175z\" id=\"Shape\" fill=\"#4285F4\"/><path d=\"M81.4 222.2c7.8 22.9 22.8 43.2 42.6 57.1 12.4 8.7 26.6 14.9 41.4 17.9 14.6 3 29.7 2.6 44.4.1 14.6-2.6 28.7-7.9 41-16.2l59.1 45.9c-21.3 19.7-48 33.1-76.2 39.6-31.2 7.1-64.2 7.3-95.2-1-24.6-6.5-47.7-18.2-67.6-34.1-20.9-16.6-38.3-38-50.4-62 20.3-15.7 40.6-31.5 60.9-47.3z\" fill=\"#34A853\"/></svg>\n            </span>\n            <span className=\"google-button__text\">Google</span>\n          </button>\n            \n        )\n    }\n}\n\ngoogleAuth.propTypes = {\n    authenticateGoogle: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired\n\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n})\n\nconst mapActionsToProps = {\n    authenticateGoogle\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(googleAuth)","import React, { Component } from 'react'\nimport { authenticateGithub } from \"../../redux/actions/actions\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport Button from \"@material-ui/core/Button\";\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\n\n\n\n\nclass githubAuth extends Component {\n    UNSAFE_componentWillReceiveProps(nxtProps) {\n        if (nxtProps.UI.errors) {\n            this.setState({ errors: nxtProps.UI.errors })\n        }\n    }\n\n    handleLogin = (event) => {\n        event.preventDefault()\n        this.props.authenticateGithub(this.props.history)\n    }\n\n\n    render() {\n        return (\n\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.handleLogin}>\n                    <GitHubIcon /><span>GitHub</span>\n\n                </Button>\n\n            \n\n        )\n    }\n}\n\n// export default githubAuth\n\ngithubAuth.propTypes = {\n    authenticateGithub: PropTypes.func.isRequired,\n\n}\n\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n})\n\nconst mapActionsToProps = {\n    authenticateGithub\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(githubAuth)","export default {\n    palette: {\n      primary: {\n        light: \"#33c9dc\",\n        main: \"#607d8b\",\n        dark: \"#795548\",\n        contrastText: \"#fff\",\n      },\n      secondary: {\n        light: \"#ff6333\",\n        main: \"#424242\",\n        dark: \"#795548\",\n        contrastText: \"#fff\",\n      },\n      \n    },\n    \n  };\n  ","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Google from \"../../components/signInMethods/googleAuth\";\nimport Github from \"../../components/signInMethods/githubAuth\";\nimport Button from \"@material-ui/core/Button\";\nimport { Grid, Header, Icon } from \"semantic-ui-react\";\nimport { loginUser } from \"../../redux/actions/actions\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport themeObject from \"../../theme/theme\";\nimport { Link } from \"react-router-dom\";\n\nconst theme = createMuiTheme(themeObject);\n\nclass login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {},\n    };\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({ errors: nextProps.UI.errors });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    this.props.loginUser(userData, this.props.history);\n  };\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    const {\n      UI: { loading },\n    } = this.props;\n    const { errors } = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Grid container columns=\"3\">\n          <Grid.Column />\n          {/* <Grid.Column style={{ marginTop: 20, background: \"#a5aba2\" }}> */}\n          <Grid style={{ marginTop: 50, background: \"#a5aba2\", width: 440 }}>\n            <Grid.Row\n              style={{ padding: \"1.2em\", margin: 0 }}\n              className=\"animated rotateInDownRight delay-1s\"\n            >\n              <Header\n                inverted\n                floated=\"left\"\n                as=\"h2\"\n                className=\"animated pulse delay-3s\"\n                style={{ marginBottom: 40 }}\n              >\n                <span>\n                  {\" \"}\n                  <Icon name=\"meetup\" size=\"huge\" />\n                </span>\n                <Header.Content>Meet-Friends </Header.Content>\n              </Header>\n              <br />\n              <Header\n                inverted\n                floated=\"left\"\n                as=\"h2\"\n                style={{ color: \"#615c1e\" }}\n              >\n                <Header.Content className=\"animated slideInLeft\">\n                  {errors.message && (\n                    <Typography\n                      // color=\"primary\"\n                      variant=\"body2\"\n                    >\n                      {errors.message}\n                    </Typography>\n                  )}{\" \"}\n                </Header.Content>\n              </Header>\n            </Grid.Row>\n            <Grid.Row>\n              <form noValidate onSubmit={this.handleSubmit} className=\"login\">\n                <TextField\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  label=\"Email\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                  helperText={errors.email}\n                  error={errors.email ? true : false}\n                  color=\"primary\"\n                  InputProps={{ style: { color: \"#fff\" } }}\n                  variant=\"outlined\"\n                  fullWidth\n                />{\" \"}\n                <br />\n                <TextField\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  label=\"Password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                  helperText={errors.password}\n                  error={errors.password ? true : false}\n                  color=\"primary\"\n                  InputProps={{ style: { color: \"#fff\" } }}\n                  // fullWidth\n                />{\" \"}\n                <br /> <br />\n                {errors.general && (\n                  <Typography variant=\"body2\">{errors.general}</Typography>\n                )}\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  id=\"button\"\n                  color=\"primary\"\n                  disabled={loading}\n                >\n                  Login\n                  {loading && <CircularProgress size={30} disableShrink />}\n                </Button>\n                <br />\n                <small className=\"\">\n                  {\" \"}\n                  Don't have an account ? <Link to=\"/signup\">\n                    Signup Here\n                  </Link>{\" \"}\n                </small>\n                <br />\n                <span>\n                  {\" \"}\n                  <Icon name=\"meetup\" size=\"huge\" />\n                </span>\n                <Google />\n                <Github />\n              </form>\n            </Grid.Row>\n          </Grid>\n        </Grid>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nlogin.propTypes = {\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps, { loginUser })(login);\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Google from \"../../components/signInMethods/googleAuth\";\nimport Github from \"../../components/signInMethods/githubAuth\";\nimport Button from \"@material-ui/core/Button\";\nimport { Grid, Header, Icon } from \"semantic-ui-react\";\nimport { signupUser } from \"../../redux/actions/actions\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport themeObject from \"../../theme/theme\";\nimport { Link } from \"react-router-dom\";\n\nconst theme = createMuiTheme(themeObject);\n\nclass signUp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({ errors: nextProps.UI.errors });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const userData = {\n      email: this.state.email,\n      username: this.state.username,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n\n    this.props.signupUser(userData, this.props.history);\n  };\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    const {\n      UI: { loading },\n    } = this.props;\n    const { errors } = this.state;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Grid container columns=\"3\">\n          <Grid.Column />\n          {/* <Grid.Column style={{ marginTop: 20, background: \"#a5aba2\" }}> */}\n          <Grid style={{ marginTop: 50, background: \"#a5aba2\", width: 440 }}>\n            <Grid.Row\n              style={{ padding: \"1.2em\", margin: 0 }}\n              className=\"animated rotateInDownRight delay-1s\"\n            >\n              <Header\n                inverted\n                floated=\"left\"\n                as=\"h2\"\n                className=\"animated pulse delay-3s\"\n                style={{ marginBottom: 40 }}\n              >\n                <span>\n                  {\" \"}\n                  <Icon name=\"meetup\" size=\"huge\" />\n                </span>\n                <Header.Content>Meet-Friends </Header.Content>\n              </Header>\n              <br />\n              <Header\n                inverted\n                floated=\"left\"\n                as=\"h2\"\n                style={{ color: \"#615c1e\" }}\n              >\n                <Header.Content className=\"animated slideInLeft\">\n                  {errors.message && (\n                    <Typography\n                      // color=\"primary\"\n                      variant=\"body2\"\n                    >\n                      {errors.message}\n                    </Typography>\n                  )}{\" \"}\n                </Header.Content>\n              </Header>\n            </Grid.Row>\n            <Grid.Row>\n              <form noValidate onSubmit={this.handleSubmit} className=\"login\">\n                <TextField\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  label=\"Email\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                  helperText={errors.email}\n                  error={errors.email ? true : false}\n                  color=\"primary\"\n                  InputProps={{ style: { color: \"#fff\" } }}\n                  variant=\"outlined\"\n                  fullWidth\n                />{\" \"}\n                <br />\n                <TextField\n                  id=\"username\"\n                  name=\"username\"\n                  type=\"username\"\n                  label=\"Username\"\n                  value={this.state.username}\n                  onChange={this.handleChange}\n                  helperText={errors.username}\n                  error={errors.username ? true : false}\n                  color=\"primary\"\n                  InputProps={{ style: { color: \"#fff\" } }}\n                  // variant=\"outlined\"\n                  fullWidth\n                />{\" \"}\n                <br />\n                <br />\n                <TextField\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  label=\"Password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                  helperText={errors.password}\n                  error={errors.password ? true : false}\n                  color=\"primary\"\n                  InputProps={{ style: { color: \"#fff\" } }}\n                  variant=\"outlined\"\n                />{\" \"}\n                <br />\n                <TextField\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  type=\"confirmPassword\"\n                  label=\"Confirm Password\"\n                  value={this.state.confirmPassword}\n                  onChange={this.handleChange}\n                  helperText={errors.confirmPassword}\n                  error={errors.confirmPassword ? true : false}\n                  color=\"primary\"\n                  InputProps={{ style: { color: \"#fff\" } }}\n                />{\" \"}\n                <br /> <br />\n                {errors.general && (\n                  <Typography variant=\"body2\">{errors.general}</Typography>\n                )}\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  id=\"button\"\n                  color=\"primary\"\n                  disabled={loading}\n                >\n                  Signup\n                  {loading && <CircularProgress size={30} disableShrink />}\n                </Button>\n                <br />\n                <small className=\"\">\n                  Already have an account ? <Link to=\"/login\">Login Here</Link>{\" \"}\n                </small>\n                <br />\n                <span>\n                  {\" \"}\n                  <Icon name=\"meetup\" size=\"huge\" />\n                </span>\n                <Google />\n                <Github />\n              </form>\n            </Grid.Row>\n          </Grid>\n        </Grid>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nsignUp.propTypes = {\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  signupUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps, { signupUser })(signUp);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport Login from './pages/login/login'\nimport Signup from './pages/signup/signup'\n\nimport {Provider,connect} from \"react-redux\"\nimport store from \"./redux/store/store\"\nimport firebase from \"./Auth/firebase\"\nimport * as serviceWorker from './serviceWorker';\nimport {  SET_UNAUTHENTICATED, STOP_LOADING_UI } from './redux/store/types';\nimport axios from \"axios\"\nimport jwt_decode from \"jwt-decode\"\nimport {setAuthenticatedUser} from './redux/actions/actions'\n\naxios.defaults.baseURL = 'https://europe-west1-portfolio-alex-eb3ef.cloudfunctions.net/api'\n\nclass Root extends Component {\n\n  setToken(token,email,user){\n    if(token){\n      axios.defaults.headers.common[\"Authorization\"] = token\n      this.props.setAuthenticatedUser(user)\n    }\n  }\n\n  componentDidMount(){\n    firebase.auth().onAuthStateChanged(user=> {\n      if(user){\n        const {xa,email} = user\n        const token = `Bearer ${xa}`\n        this.setToken(token,email,user)\n        store.dispatch({type:STOP_LOADING_UI})\n        this.props.history.push(\"/\")\n        \n        \n       if(jwt_decode(xa)['exp'] * 1000 < Date.now()){ \n         store.dispatch({type: SET_UNAUTHENTICATED})\n         this.props.history.push(\"/login\") \n        }\n      }\n      else{\n        this.props.history.push('/login') \n\n      }\n            \n      \n    })\n\n  }  \n\n  render(){\n    return(\n         <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route  path=\"/login\" component={Login} />\n            <Route  path=\"/signup\" component={Signup} />\n          \n         </Switch>\n      \n      \n    )\n  }\n}\nconst mapStateFromProps = state => ({\n  loading: state.UI.loading,\n  channel: state.channel\n});\n\n\nconst RootWithAuth = withRouter(connect(mapStateFromProps, {setAuthenticatedUser})(Root))\n\n\nReactDOM.render(\n  <Provider store={store}>\n <Router>\n   <RootWithAuth/>\n </Router>\n </Provider>,\n\n  document.getElementById('root')\n);\nserviceWorker.register()\n\n"],"sourceRoot":""}