{"version":3,"sources":["config/config.js","Auth/firebase.js","redux/actions/actions.js","redux/store/types.js","components/colorPanel/colorPanel.js","redux/reducers/reducers.js","redux/reducers/uiReducers.js","redux/store/store.js","components/userPanel/userpanel.js","components/channels/Channels.js","components/directMessages/directMessages.js","components/starred/starred.js","components/AboutMe/about.js","components/sidePanel/sidePanel.js","components/messages/messageHeader.js","components/messages/fileModal.js","components/messages/ProgressBar.js","components/messages/messageForm.js","components/messages/Message.js","components/spinner/spinner.js","components/messages/typing.js","components/messages/Messages.js","components/metaPanel/metaPanel.js","components/landingPage/landingPage.js","App.js","components/signInMethods/googleAuth.js","components/signInMethods/githubAuth.js","theme/theme.js","pages/login/login.js","pages/signup/signup.js","serviceWorker.js","index.js"],"names":["apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","Config","login","email","password","dispatch","next","auth","signInWithEmailAndPassword","then","data","registerUser","catch","err","type","payload","multiAuth","provider","scope","addScope","signInWithPopup","result","credential","token","user","displayName","xa","jwt_decode","picture","user_id","googleSignup","username","profileImage","createdUser","userId","currentUser","uid","regUser","database","ref","once","snapshot","val","child","set","photoURL","coverImage","config","userData","axios","post","res","setCurrentChannel","channel","currentChannel","setPrivateChannel","isPrivateChannel","ColorPanel","state","modal","loading","primary","secondary","props","usersRef","userColors","addListener","on","snap","unshift","setState","handleChangePrimary","color","hex","handleChangeSecondary","handleSaveColors","saveColors","push","update","console","log","closeModal","error","displayUserColors","colors","length","map","i","Fragment","key","Divider","className","onClick","setColors","style","background","openModal","this","Sidebar","icon","vertical","visible","width","Button","size","Modal","basic","open","onClose","Header","Content","Segment","inverted","Label","content","onChange","Actions","CircularProgress","disableShrink","Icon","name","React","Component","connect","primaryColor","secondaryColor","initialState","authenticated","authenticatedUser","initialChannelState","userPost","initialColorState","initialUi","firstLoad","errors","middleware","thunk","reducers","combineReducers","action","UI","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","userpanel","userRef","storageRef","storage","croppedImage","previewImage","blob","uploadedCroppedImage","metadata","contentType","dropDownOptions","text","toLowerCase","disabled","handleSignout","uploadCroppedImage","put","getDownloadURL","downloadURL","changeAvatar","updateProfile","changeMessageAvatar","handleChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","handleCropImage","avatarEditor","getImageScaledToCanvas","toBlob","imageUrl","URL","createObjectURL","signOut","Grid","Column","Row","padding","margin","floated","as","fontSize","Dropdown","trigger","Image","src","spaced","avatar","options","Input","fluid","iconPosition","label","centered","stackable","columns","node","image","height","border","scale","Channels","channels","channelName","channelDetails","channelsRef","activeChannel","messagesRef","notifications","typingRef","removeListeners","off","preventDefault","value","addListeners","loadedChannels","setFirstChannel","addNotificationListener","channelId","handleNotifications","id","changeChannel","remove","setActiveChannel","clearNotifications","currentChannelId","lastTotal","index","findIndex","notification","total","numChildren","count","lastKnownTotal","firstChannel","addChannel","newChannel","details","createdBy","getNotificationCount","forEach","displayChannels","Menu","Item","opacity","textAlign","active","handleSubmit","isformValid","updatedNotifications","Box","overflow","Form","onSubmit","Field","backGroundColor","placeholder","Dimmer","Loader","directMessages","users","userMessage","connectedRef","presenceRef","privateMessagesRef","display","closeMessage","currentUserUid","loadedUsers","setFirstUser","onDisconnect","addStatusToUser","firstUser","channelUserId","currentUserChannelId","connected","updatedUsers","reduce","acc","concat","getChannelId","isUserOnline","status","channelData","handleDisplay","handleDisplayActiveUsers","handleCloseDisplay","closeActiveUsers","position","bottom","fontStyle","starred","starredChannels","channelToRemove","filteredChannels","filter","About","activeIndex","setActiveIndex","titleProps","newIndex","cursor","attached","Accordion","Title","href","sidePanel","displayActiveUsers","isMobile","fixed","overFlow","messageHeader","numUniqueUsers","handleSearch","searchLoading","privateChannel","userPhoto","handleStar","isChannelStarred","clearing","marginBottom","Subheader","fileModal","authorized","addFile","sendFile","uploadFile","isAuthorized","mime","lookup","clearFile","filename","includes","ProgressBar","uploadState","percentUploaded","Progress","percent","progress","indicating","messageForm","uploadTask","message","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","getPath","pathToUpload","getMessagesRef","filePath","uuidv4","Math","round","bytesTransferred","totalBytes","downloadUrl","sendFileMessage","handleKeyDown","sendMessage","obj","onKeyDown","labelPosition","some","Object","keys","Group","widths","isOwnMessage","isOwnMessageTwo","Message","Comment","Avatar","Author","Metadata","moment","fromNow","hasOwnProperty","isImage","Text","marginTop","messages","backgroundColor","fontFamily","typingUser","Messages","searchTerm","searchResults","typingUsers","addMessageListener","addTypingListeners","addUserStarsListener","prevStarred","loadedMessages","countUniqueUsers","countUserPosts","uniqueUsers","userPosts","setUserPosts","displayMessages","displayChannelName","getUserPhoto","handleSearchMessages","channelMessages","regex","RegExp","match","setTimeout","prevState","starChannel","displayTypingUsers","alignItems","metaPanel","displayTopPosters","posts","entries","sort","a","b","List","toLocaleLowerCase","Description","slice","reverse","displayUserInformation","styled","values","Typography","variant","landingPage","container","marginLeft","Responsive","googleAuth","handleLogin","authenticateGoogle","history","nxtProps","viewBox","xmlns","d","fill","mapActionsToProps","GoogleAuthProvider","githubAuth","authenticateGithub","GithubAuthProvider","palette","light","main","dark","contrastText","theme","createMuiTheme","themeObject","loginUser","nextProps","noValidate","TextField","helperText","InputProps","fullWidth","general","to","response","signUp","confirmPassword","signupUser","newUserData","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","defaults","baseURL","Root","headers","common","setAuthenticatedUser","onAuthStateChanged","setToken","Date","now","exact","path","component","App","Login","Signup","RootWithAuth","withRouter","ReactDOM","render","document","getElementById","process","origin","fetch","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.44b7ebeb.chunk.js","sourcesContent":["export default {\n    apiKey: \"AIzaSyBlji1huTUq206tJcg0r7IAX76STFh-xns\",\n    authDomain: \"portfolio-alex-eb3ef.firebaseapp.com\",\n    databaseURL: \"https://portfolio-alex-eb3ef.firebaseio.com\",\n    projectId: \"portfolio-alex-eb3ef\",\n    storageBucket: \"portfolio-alex-eb3ef.appspot.com\",\n    messagingSenderId: \"776158175345\",\n    appId: \"1:776158175345:web:2140b8f94fedf1103bbbd0\",\n    measurementId: \"G-5VBPTVC7PQ\"\n  };","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\nimport Config from \"../config/config\"\nfirebase.initializeApp(Config)\n\nexport default firebase","import {\n  LOADING_UI,\n  SET_ERRORS,\n  SET_AUTHENTICATED,\n  SET_PRIVATE_CHANNEL,\n  SET_CURRENT_CHANNEL,\n  SET_USER_POST,\n  SET_CURRENT_USER,\n  SET_COLORS,\n  FIRST_LOAD\n} from \"../store/types\";\nimport firebase from \"../../Auth/firebase\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport config from \"../../config/config\";\n\nexport const login = (email, password) => (dispatch, next) => {\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .then((data) => {\n      if (data) {\n        // const { email } = data.user;\n        dispatch(registerUser(data))\n        \n      }\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err,\n      });\n    });\n};\n\nexport const firstLoad = ()=> {\n  return {\n    type: FIRST_LOAD,\n    payload: \"inline\"\n  }\n}\n\nexport const getCurrentUser=(user)=> {\n  return{\n    type: SET_CURRENT_USER,\n    payload: user\n  }\n}\n\nexport const setColors = (primaryColor,secondaryColor) => {\n  return {\n    type: SET_COLORS,\n    payload: {\n      primaryColor,\n      secondaryColor\n    }\n  }\n}\n\nexport const multiAuth = (provider, scope) => (dispatch) => {\n  provider.addScope(`${scope[0]}`);\n  if (scope[1]) provider.addScope(`${scope[1]}`);\n  firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then((result) => {\n      if (result.credential) {\n        const { user } = result;\n        let token;\n        const { displayName, email, xa } = user;\n        token = xa;\n        const { picture, user_id } = jwt_decode(token);\n\n        const userData = {\n          email: email,\n          username: displayName,\n          profileImage: picture,\n        };\n        dispatch(googleSignup(userData, user_id));\n        dispatch(registerUser(result))\n      }\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err,\n      });\n    });\n};\n\nexport const authenticateGoogle = () => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  const provider = new firebase.auth.GoogleAuthProvider();\n  let scope = [\"profile\", \"email\"];\n  dispatch(multiAuth(provider, scope));\n};\n\nexport const registerUser = (createdUser) => {\n  const defaultCoverImage = \"download.png\";\n  const userId = firebase.auth().currentUser.uid;\n  // console.log(userId)\n  const regUser = firebase.database().ref(\"users\");\n  firebase\n    .database()\n    .ref(\"/users/\" + userId)\n    .once(\"value\")\n    .then((snapshot) => {\n      // console.log(snapshot.val())\n      if (snapshot.val() !== null) {\n\n        return {\n          type: SET_ERRORS,\n          payload: { email: `${snapshot.val().email} exists` },\n        };\n      } else {\n        // console.log(createdUser)\n        return regUser.child(createdUser.user.uid).set({\n          email: createdUser.user.email,\n          username: createdUser.user.displayName,\n          profileImage: createdUser.user.photoURL,\n          coverImage: `https://firebasestorage.googleapis.com/v0/b/${config.storageBucket}/o/${defaultCoverImage}?alt=media`,\n          userId: userId\n        });\n      }\n    });\n};\n\n// export const authenticateFaceBook = () => (dispatch) => {\n//   dispatch({type: LOADING_UI})\n//   const provider = new firebase.auth.FacebookAuthProvider()\n//   let scope = [\"user_birthday\"]\n//   dispatch(multiAuth(provider,scope))\n\n// }\n\nexport const authenticateGithub = () => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  const provider = new firebase.auth.GithubAuthProvider();\n  let scope = [\"repo\"];\n  // let email = \"email\"\n  dispatch(multiAuth(provider, scope));\n};\n\nexport const googleSignup = (userData, userId) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(`/google/${userId}`, userData)\n    .then((res) => {\n      if (res.data) {\n        return;\n      }\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err,\n      });\n    });\n};\n\nexport const loginUser = (userData) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/login\", userData)\n    .then(() => {\n      dispatch(login(userData.email, userData.password));\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\nexport const signupUser = (newUserData) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/signup\", newUserData)\n    .then(() => {\n      dispatch(login(newUserData.email, newUserData.password));\n      \n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\nexport const setAuthenticatedUser = (user) => {\n  return {\n    type: SET_AUTHENTICATED,\n    payload: user,\n  };\n};\n\n\n\n\nexport const setCurrentChannel = (channel) => (dispatch) => {\n  dispatch({\n    type: SET_CURRENT_CHANNEL,\n    payload: {\n      currentChannel: channel,\n    },\n  });\n};\n\nexport const setPrivateChannel = isPrivateChannel => {\n  return {\n      type: SET_PRIVATE_CHANNEL,\n      payload: {\n          isPrivateChannel\n      }\n  }\n}\n\nexport const setUserPosts = message => {\n  return {\n    type:SET_USER_POST,\n    payload: message\n  }\n}\n\n","// User reducer types\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\nexport const SET_GOOGLE_USER = 'SET_GOOGLE_USER';\nexport const SET_CURRENT_USER ='SET_CURRENT_USER'\n// UI reducer types\nexport const SET_ERRORS = 'SET_ERRORS';\nexport const LOADING_UI = 'LOADING_UI';\nexport const FIRST_LOAD = 'FIRST_LOAD'\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const LOADING_DATA = 'LOADING_DATA';\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\nexport const SET_COLORS = \"SET_COLORS\";\n\n// Data reducer types\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL'  \nexport const SET_PRIVATE_CHANNEL = 'SET_PRIVATE_CHANNEL'\nexport const SET_USER_POST ='SET_USER_POST'","import React,{Fragment} from \"react\";\nimport firebase from \"../../Auth/firebase\";\nimport { connect } from \"react-redux\";\nimport { setColors } from \"../../redux/actions/actions\";\n// prettier-ignore\nimport { Sidebar, Menu, Divider, Button, Modal, Icon, Label, Segment } from \"semantic-ui-react\";\nimport { SliderPicker } from \"react-color\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass ColorPanel extends React.Component {\n  state = {\n    modal: false,\n    loading: false,\n    primary: \"\",\n    secondary: \"\",\n    user: this.props.currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    userColors: [],\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListener(this.state.user.uid);\n    }\n  }\n\n  addListener = (userId) => {\n    let userColors = [];\n    this.state.usersRef.child(`${userId}/colors`).on(\"child_added\", (snap) => {\n      userColors.unshift(snap.val());\n      this.setState({ userColors });\n    });\n  };\n\n  handleChangePrimary = (color) => this.setState({ primary: color.hex });\n\n  handleChangeSecondary = (color) => this.setState({ secondary: color.hex });\n\n  handleSaveColors = () => {\n    // console.log(this.state.primary,this.state.secondary)\n    if (this.state.primary && this.state.secondary) {\n      this.saveColors(this.state.primary, this.state.secondary);\n    }\n  };\n\n  saveColors = (primary, secondary) => {\n    this.setState({ loading: true }, () =>\n      this.state.usersRef\n        .child(`${this.state.user.uid}/colors`)\n        .push()\n        .update({\n          primary,\n          secondary,\n        })\n        .then(() => {\n          console.log(\"Colors added\");\n          this.setState({ loading: false }, () => this.closeModal());\n        })\n        .catch((err) => console.error(err))\n    );\n  };\n\n  displayUserColors = (colors) =>\n    colors.length > 0 &&\n    colors.map((color, i) => (\n      <React.Fragment key={i}>\n        <Divider />\n        <div\n          className=\"color__container\"\n          onClick={() => this.props.setColors(color.primary, color.secondary)}\n        >\n          <div className=\"color__square\" style={{ background: color.primary }}>\n            <div\n              className=\"color__overlay\"\n              style={{ background: color.secondary }}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    ));\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  render() {\n    const { modal, primary, secondary, userColors, loading } = this.state;\n\n    return (\n      <Sidebar\n        // as={}\n        icon=\"labeled\"\n      \n        vertical =\"true\"\n        visible\n        width=\"very thin\"\n      >\n        <Divider />\n        <Button icon=\"add\" size=\"small\" color=\"blue\" onClick={this.openModal} />\n        {this.displayUserColors(userColors)}\n\n        {/* Color Picker Modal */}\n        <Modal basic open={modal} onClose={this.closeModal}>\n          <Modal.Header>Choose App Colors</Modal.Header>\n          <Modal.Content>\n            <Segment inverted>\n              <Label content=\"Primary Color\" />\n              <SliderPicker\n                color={primary}\n                onChange={this.handleChangePrimary}\n              />\n            </Segment>\n\n            <Segment inverted>\n              <Label content=\"Secondary Color\" />\n              <SliderPicker\n                color={secondary}\n                onChange={this.handleChangeSecondary}\n              />\n            </Segment>\n          </Modal.Content>\n          <Modal.Actions>\n            {loading ? (\n              <CircularProgress   size={50} disableShrink />\n            ) : (\n              <Fragment>\n                <Button\n                  color=\"green\"\n                  inverted\n                  onClick={this.handleSaveColors}\n                  // disabled={loading}\n                >\n                  <Icon name=\"checkmark\" /> Save Colors\n                </Button>\n                <Button color=\"red\" inverted onClick={this.closeModal}>\n                  <Icon name=\"remove\" /> Cancel\n                </Button>\n              </Fragment>\n            )}\n          </Modal.Actions>\n        </Modal>\n      </Sidebar>\n    );\n  }\n}\n\nexport default connect(null, { setColors })(ColorPanel);\n","import {\n  SET_GOOGLE_USER,\n  SET_AUTHENTICATED,\n  SET_UNAUTHENTICATED,\n  SET_PRIVATE_CHANNEL,\n  SET_CURRENT_CHANNEL,\n  SET_CURRENT_USER,\n  SET_USER_POST,\n  SET_COLORS\n} from \"../store/types\";\nconst initialState = {\n  authenticated: false,\n  authenticatedUser: null,\n  currentUser: null,\n};\n\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: action.payload,\n      }\n\n    case SET_AUTHENTICATED:\n      return {\n        ...state,\n        authenticated: true,\n        authenticatedUser: action.payload,\n      };\n    case SET_UNAUTHENTICATED:\n      return { ...initialState };\n    case SET_GOOGLE_USER:\n      return { ...state, authenticated: true, ...action.payload };\n    default:\n      return state;\n  }\n};\n\nconst initialChannelState = {\n  currentChannel: null,\n  isPrivateChannel: false,\n  userPost: null,\n};\n\nexport const currentChannelReducer = (state = initialChannelState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_CHANNEL:\n      return { ...state, currentChannel: action.payload.currentChannel };\n    case SET_PRIVATE_CHANNEL:\n      return {\n        ...state,\n        isPrivateChannel: action.payload.isPrivateChannel,\n      };\n    case SET_USER_POST: \n      return {\n        ...state,\n        userPost: action.payload\n      }  \n    default:\n      return state;\n  }\n};\n\n\nconst initialColorState = {\n   primaryColor: \"#193b4d\",\n    secondaryColor: \"#19394d\"\n}\nexport const setColorsReducers = (state=initialColorState,action) => {\n  switch (action.type) {\n    case SET_COLORS:\n      return{\n        ...state,\n        primaryColor: action.payload.primaryColor,\n        secondaryColor: action.payload.secondaryColor\n\n      }\n    default:\n      return state  \n  }\n}\n","import {SET_ERRORS,CLEAR_ERRORS,LOADING_UI,STOP_LOADING_UI,FIRST_LOAD} from \"../store/types\"\n\nconst initialUi = {\n    loading: false,\n    firstLoad: \"none\",\n    errors: null\n}\n\nexport  default function (state=initialUi,action)  {\n    switch(action.type){\n        case SET_ERRORS: return {...state, loading:false,errors: action.payload}\n        case CLEAR_ERRORS: return {...state, loading:false,errors: null}\n        case LOADING_UI: return {...state, loading:true}\n        case FIRST_LOAD: return {...state,firstLoad:action.payload}\n        case STOP_LOADING_UI: return {...state, loading:false}\n        default: return state\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport {userReducer,currentChannelReducer,setColorsReducers} from '../reducers/reducers';\nimport uiReducer from '../reducers/uiReducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst reducers = combineReducers({\n  user: userReducer,\n  channel: currentChannelReducer,\n  UI: uiReducer,\n  colors: setColorsReducers,\n});\n\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\nconst store = createStore(reducers, initialState, enhancer);\n\nexport default store;","import React, { Component, Fragment } from \"react\";\nimport {\n  Grid,\n  Header,\n  Icon,\n  Dropdown,\n  Image,\n  Modal,\n  Input,\n  Button,\n} from \"semantic-ui-react\";\nimport firebase from \"../../Auth/firebase\";\nimport store from \"../../redux/store/store\";\nimport { SET_UNAUTHENTICATED } from \"../../redux/store/types\";\nimport AvatarEditor from \"react-avatar-editor\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass userpanel extends Component {\n  state = {\n    user: this.props.currentUser,\n    modal: false,\n    userRef: firebase.auth().currentUser,\n    storageRef: firebase.storage().ref(),\n    usersRef: firebase.database().ref(\"users\"),\n    croppedImage: \"\",\n    previewImage: \"\",\n    blob: null,\n    uploadedCroppedImage: \"\",\n    metadata: {\n      contentType: \"image/jpeg\",\n    },\n  };\n\n  openModal = () => this.setState({ modal: true });\n  closeModal = () => this.setState({ modal: false });\n\n  dropDownOptions = () => [\n    {\n      key: \"user\",\n      text: (\n        <span className=\"animated fadeInDown delay-1s\">\n          Signed as{\" \"}\n          <strong>\n            {this.state.user ? (\n              <Fragment>{this.state.user.displayName.toLowerCase()}</Fragment>\n            ) : (\n              <Fragment />\n            )}\n          </strong>\n        </span>\n      ),\n      disabled: true,\n    },\n    {\n      key: \"avatar\",\n      text: (\n        <span\n          className=\"animated fadeInDown delay-0.5s\"\n          onClick={this.openModal}\n        >\n          Change Avatar\n        </span>\n      ),\n    },\n    {\n      key: \"signout\",\n      text: (\n        <span className=\"animated fadeInDown delay-0.5s\">\n          <Button\n            onClick={this.handleSignout}\n            type=\"submit\"\n            color=\"teal\"\n            //\n\n            // iconPosition=\"right\"\n          >\n            <Icon name=\"blind\" />\n            <span>\n              {/* <Icon name=\"question circle outline\" />  */}\n              SignOut\n            </span>\n          </Button>\n        </span>\n      ),\n    },\n  ];\n\n  uploadCroppedImage = () => {\n    const { storageRef, userRef, blob, metadata } = this.state;\n\n    storageRef\n      .child(`avatars/user-${userRef.uid}`)\n      .put(blob, metadata)\n      .then((snap) => {\n        snap.ref.getDownloadURL().then((downloadURL) => {\n          this.setState({ uploadedCroppedImage: downloadURL }, () =>\n            this.changeAvatar()\n          );\n        });\n      });\n  };\n\n  changeAvatar = () => {\n    this.state.userRef\n      .updateProfile({\n        photoURL: this.state.uploadedCroppedImage,\n      })\n      .then(() => {\n        console.log(\"PhotoURL updated\");\n        this.closeModal();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n    this.state.usersRef\n      .child(this.state.user.uid)\n      .update({ profileImage: this.state.uploadedCroppedImage })\n      .then(() => {\n        this.changeMessageAvatar();\n        console.log(\"User avatar updated\");\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  handleChange = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    if (file) {\n      reader.readAsDataURL(file);\n      reader.addEventListener(\"load\", () => {\n        this.setState({ previewImage: reader.result });\n      });\n    }\n  };\n\n  handleCropImage = () => {\n    if (this.avatarEditor) {\n      this.avatarEditor.getImageScaledToCanvas().toBlob((blob) => {\n        let imageUrl = URL.createObjectURL(blob);\n        this.setState({\n          croppedImage: imageUrl,\n          blob,\n        });\n      });\n    }\n  };\n\n  handleSignout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        store.dispatch({ type: SET_UNAUTHENTICATED });\n      });\n  };\n\n  render() {\n    const { user, modal, previewImage, croppedImage } = this.state;\n    // console.log(user)\n\n    return (\n      <Grid>\n        <Grid.Column>\n          <Grid.Row\n            style={{ padding: \"1.2em\", margin: 0 }}\n            className=\"menu_item\"\n          >\n            <Header\n              inverted\n              floated=\"left\"\n              as=\"h2\"\n              className=\"animated fadeInDown delay-1s\"\n            >\n              <Icon name=\"meetup\" />\n              <Header.Content style={{ fontSize: 20 }}>\n                Meet-Friends\n              </Header.Content>\n            </Header>\n          </Grid.Row>\n          <Header style={{ padding: \"0.25em\" }} as=\"h4\" inverted>\n            <Dropdown\n              className=\"dropdown\"\n              trigger={\n                <Fragment>\n                  {user ? (\n                    <span>\n                      <Image src={user.photoURL} spaced=\"right\" avatar />\n\n                      {user.displayName}\n                    </span>\n                  ) : (\n                    <CircularProgress size={20} disableShrink />\n                  )}\n                </Fragment>\n              }\n              options={this.dropDownOptions()}\n            />\n          </Header>\n\n          <Modal open={modal} onClose={this.closeModal}>\n            <Modal.Header>Change Avatar</Modal.Header>\n            <Modal.Content>\n              <Input\n                onChange={this.handleChange}\n                fluid\n                icon=\"user\"\n                iconPosition=\"right\"\n                type=\"file\"\n                label=\"New Avatar\"\n                name=\"previewImage\"\n              />\n              <Grid centered stackable columns={2}>\n                <Grid.Row centered>\n                  <Grid.Column className=\"ui center aligned grid\">\n                    {previewImage && (\n                      <AvatarEditor\n                        ref={(node) => (this.avatarEditor = node)}\n                        image={previewImage}\n                        width={130}\n                        height={130}\n                        border={60}\n                        scale={1}\n                      />\n                    )}\n                  </Grid.Column>\n                  <Grid.Column>\n                    {croppedImage && (\n                      <Image\n                        style={{ margin: \"3.5em auto\" }}\n                        width={100}\n                        height={100}\n                        src={croppedImage}\n                      />\n                    )}\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Modal.Content>\n            <Modal.Actions>\n              {croppedImage && (\n                <Button\n                  color=\"green\"\n                  inverted\n                  onClick={this.uploadCroppedImage}\n                >\n                  <Icon name=\"save\" /> Change Avatar\n                </Button>\n              )}\n              <Button color=\"green\" inverted onClick={this.handleCropImage}>\n                <Icon name=\"image\" /> Preview\n              </Button>\n              <Button color=\"red\" inverted onClick={this.closeModal}>\n                <Icon name=\"remove\" /> Cancel\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\n// const mapStateToProps =(state) => ({\n//     user: state.user\n// })\n\nexport default userpanel;\n","import React, { Component, Fragment } from \"react\";\nimport { Menu, Icon, Modal, Form, Input, Button, Label } from \"semantic-ui-react\";\nimport firebase from \"../../Auth/firebase\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\nimport {\n  setCurrentChannel,\n  setPrivateChannel,\n} from \"../../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\"\n\nclass Channels extends Component {\n  state = {\n    channel: null,\n    channels: [],\n    channelName: \"\",\n    channelDetails: \"\",\n    user: this.props.authenticatedUser,\n    modal: false,\n    channelsRef: firebase.database().ref(\"channels\"),\n    firstLoad: true,\n    activeChannel: \"\",\n    loading: false,\n    messagesRef: firebase.database().ref(\"messages\"),\n    notifications: [],\n    typingRef: firebase.database().ref('typing')\n  };\n\n  componentDidMount() {\n    this.addListeners();\n  }\n\n  UNSAFE_componentWillMount() {\n    this.removeListeners();\n  }\n\n  removeListeners = () => {\n    this.state.channelsRef.off();\n  };\n\n  closeModal = () => {\n    this.setState({ modal: false });\n  };\n\n  openModal = () => {\n    this.setState({ modal: true });\n  };\n\n  handleChange = (event) => {\n    event.preventDefault();\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  addListeners = () => {\n    let loadedChannels = [];\n    this.state.channelsRef.on(\"child_added\", (snap) => {\n      loadedChannels.push(snap.val());\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\n      this.addNotificationListener(snap.key);\n    });\n  };\n\n  addNotificationListener = (channelId) => {\n    this.state.messagesRef.child(channelId).on(\"value\", (snap) => {\n      // console.log(snap.val())\n      if (this.state.channel) {\n        this.handleNotifications( \n          channelId,\n          this.state.channel.id,\n          this.state.notifications,\n          snap\n        );\n      }\n    });\n  };\n   \n  \n  changeChannel = (channel) => {\n    this.state.typingRef.child(channel.id).child(this.state.user.uid).remove()\n    this.setActiveChannel(channel);\n    this.clearNotifications()\n    this.props.setCurrentChannel(channel);\n    this.props.setPrivateChannel(false);\n    this.setState({ channel });\n    \n     \n  };\n\n  handleNotifications = (channelId, currentChannelId, notifications, snap) => {\n\n    let lastTotal = 0;\n    let index = notifications.findIndex((notification) => notification.id === channelId);\n\n    if (index !== -1) {\n      if (channelId !== currentChannelId) {\n        lastTotal = notifications[index].total;\n\n        if (snap.numChildren() - lastTotal > 0) {\n          notifications[index].count = snap.numChildren() - lastTotal;\n        }\n      }\n      notifications[index].lastKnownTotal = snap.numChildren()\n\n    } else {\n      notifications.push({\n        id: channelId,\n        total: snap.numChildren(),\n        lastKnownTotal: snap.numChildren(),\n        count: 0,\n      });\n    }\n    this.setState({notifications})\n  };\n\n  setFirstChannel = () => {\n    const firstChannel = this.state.channels[0];\n    if (this.state.firstLoad && this.state.channels.length > 0) {\n      this.setActiveChannel(firstChannel);\n      this.props.setCurrentChannel(firstChannel);\n      this.setState({channel: firstChannel})\n    }\n    this.setState({ firstLoad: false });\n  };\n  setActiveChannel = (channel) => {\n    this.setState({ activeChannel: channel.id });\n  };\n\n  addChannel = () => {\n    const { channelsRef, channelName, channelDetails } = this.state;\n    const {\n      displayName,\n      email,\n      uid,\n      photoURL,\n    } = this.state.user;\n    const key = channelsRef.push().key;\n    const newChannel = {\n      id: key,\n      name: channelName,\n      details: channelDetails,\n      createdBy: {\n        name: displayName,\n        email: email,\n        avatar: photoURL,\n        userId: uid,\n      },\n    };\n    this.setState({loading: true}, ()=> (\n      channelsRef\n      .child(key)\n      .update(newChannel)\n      .then(() => {\n        this.setState({ channelName: \"\", channelDetails: \"\",loading: false });\n        this.closeModal();\n        console.log(\"Channel added\");\n      })\n      .catch((error) => {\n        console.error(error);\n      })\n    ))\n  };\n\n  getNotificationCount = (channel) => {\n    let count = 0\n    this.state.notifications.forEach(notification=> {\n        if(notification.id === channel.id){\n            count = notification.count\n        }\n    })\n    if(count > 0) return count  \n  }\n\n  displayChannels = (channels) =>\n    channels.length > 0 &&\n    channels.map((channel) => (\n      <Menu.Item\n        key={channel.id}\n        onClick={() => this.changeChannel(channel)}\n        name={channel.name}\n        style={{ opacity: 0.8, textAlign: \"left\" }}\n        active={channel.id === this.state.activeChannel}\n      >\n          {this.getNotificationCount(channel) && (<Label color=\"red\">{this.getNotificationCount(channel)}</Label>)}\n        # {channel.name}\n      </Menu.Item>\n    ));\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.isformValid(this.state)) {\n      this.addChannel();\n    }\n  };\n\n  isformValid = ({ channelName, channelDetails }) =>\n    channelName && channelDetails;\n\n\n  clearNotifications = () => {\n      let index = this.state.notifications.findIndex(notification=> notification.id === this.state.channel.id)\n\n      if (index !== -1){\n          let updatedNotifications = [...this.state.notifications]\n          updatedNotifications[index].total = this.state.notifications[index].lastKnownTotal\n          updatedNotifications[index].count = 0\n          this.setState({notifications: updatedNotifications})\n      }\n  }\n\n  render() {\n    const { modal, channels,loading } = this.state;\n    return (\n      <Fragment>\n        <Menu.Menu className=\"animated fadeInDown menu_item2\" >\n          <Menu.Item style={{ textAlign: \"left\" }}>\n            <span>\n              <Icon name=\"exchange\" /> CHANNELS{\" \"}\n            </span>{\" \"}\n            ({channels.length}){\" \"}\n            <Icon name=\"add\" className=\"add\" onClick={this.openModal} />\n          </Menu.Item>\n          <Box style={{height:'18vh',overflow:\"auto\"}}>\n          {this.displayChannels(channels)}\n          </Box>\n        </Menu.Menu>\n\n        <Modal basic open={modal} onClose={this.closeModal}>\n          {this.props.authenticatedUser ? (\n            <Fragment>\n              <Modal.Header>Add a Channel </Modal.Header>\n              <Modal.Content>\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Field\n                    className=\"form-control\"\n                    style={{ backGroundColor: \"#607d8b\" }}\n                  >\n                    <Input\n                    type=\"text\"\n                    icon=\"tags icon\"\n                    className=\"ui right labeled left icon input\"\n                      fluid\n                      placeholder=\"Name of channel\"\n                      name=\"channelName\"\n                      onChange={this.handleChange}\n                    />\n                  </Form.Field>\n                  <Form.Field className=\"form-control\">\n                    <Input\n                     type=\"text\"\n                     icon=\"tags icon\"\n                     className=\"ui right labeled left icon input\"\n                      fluid\n                      placeholder=\"About the channel\"\n                      name=\"channelDetails\"\n                      onChange={this.handleChange}\n                    />\n                  </Form.Field>\n                </Form>\n              </Modal.Content>\n              <Modal.Actions>\n                {loading ? \n                 <CircularProgress   size={50} disableShrink />\n                :\n              <Fragment>\n                  <Button inverted color=\"green\" onClick={this.handleSubmit}>\n                  <Icon name=\"checkmark\" /> Add\n                </Button>\n                <Button inverted color=\"red\" onClick={this.closeModal}>\n                  <Icon name=\"remove\" /> Cancel\n                </Button>\n              </Fragment>\n                \n                }\n              </Modal.Actions>\n            </Fragment>\n          ) : (\n            <Dimmer active>\n              <Loader size=\"huge\" content=\"Please Wait authenticating...\" />\n            </Dimmer>\n          )}\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(\n  Channels\n);\n","import React, { Component } from \"react\";\nimport { Menu, Icon, Image, Label, Button } from \"semantic-ui-react\";\nimport Box from \"@material-ui/core/Box\";\nimport firebase from \"../../Auth/firebase\";\nimport {\n  setCurrentChannel,\n  setPrivateChannel,\n  firstLoad\n} from \"../../redux/actions/actions\";\nimport { connect } from \"react-redux\";\n\nclass directMessages extends Component {\n  state = {\n    activeChannel: \"\",\n    user: this.props.user,\n    users: [],\n    userMessage: null,\n    userRef: firebase.database().ref(\"users\"),\n    connectedRef: firebase.database().ref(\".info/connected\"),\n    presenceRef: firebase.database().ref(\"presence\"),\n    privateMessagesRef: firebase.database().ref(\"privateMessages\"),\n    notifications: [],\n    firstLoad: true,\n    display: \"none\",\n    closeMessage: \"inline\",\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListeners(this.state.user.uid);\n      \n    }\n    // console.log(this.state.connectedRef)\n  }\n  componentWillMount() {\n    this.state.userRef.off()\n    this.state.privateMessagesRef.off()\n  }\n\n  addListeners = (currentUserUid) => {\n    const { userRef, connectedRef, presenceRef } = this.state;\n    let loadedUsers = [];\n    userRef.on(\"child_added\", (snap) => {\n      let user = snap.val();\n      user[\"uid\"] = snap.key;\n      user[\"status\"] = \"offline\";\n      if (this.state.user && this.state.user.uid !== user[\"userId\"]) {\n        loadedUsers.push(user);\n        this.addNotificationListener(user.uid);\n      }\n\n      this.setState({ users: loadedUsers }, () => this.setFirstUser());\n      \n    });\n    // console.log(loadedUsers)\n    connectedRef.on(\"value\", (snap) => {\n      if (snap.val() === true) {\n        const ref = presenceRef.child(currentUserUid);\n        ref.set(true);\n        ref.onDisconnect().remove((err) => {\n          if (err !== null) {\n            console.error(err);\n          }\n        });\n      }\n    });\n\n    presenceRef.on(\"child_added\", (snap) => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key);\n      }\n    });\n\n    presenceRef.on(\"child_removed\", (snap) => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key, false);\n      }\n    });\n  };\n\n  setFirstUser = () => {\n    const firstUser = this.state.users[0];\n    if (this.state.firstLoad && this.state.users.length > 0) {\n      this.setActiveChannel(firstUser);\n      this.setState({ userMessage: firstUser });\n    }\n    this.setState({ firstLoad: false });\n  };\n\n  setActiveChannel = (user) => {\n    this.setState({ activeChannel: user.uid });\n  };\n\n  addNotificationListener = (channelUserId) => {\n    // this.state.privateMessagesRef    \n     \n      this.state.privateMessagesRef\n      .child(channelUserId)\n      .child(this.state.user.uid).on(\"value\", snap=> {\n        console.log(snap.key)\n        this.handleNotifications(\n          channelUserId,\n          this.state.user.uid,\n          this.state.notifications,\n          snap\n        )\n      })\n     \n      this.state.privateMessagesRef\n      .child(this.state.user.uid)\n      .child(channelUserId).on(\"value\", snap=> {\n        this.handleNotifications(\n          channelUserId,\n          this.state.user.uid,\n          this.state.notifications,\n          snap\n        )\n      })\n    \n   \n};\n\n  handleNotifications = (currentUserChannelId,userId,notifications,snap) => {\n    let lastTotal = 0;\n    let index = notifications.findIndex(\n      (notification) => notification.id === currentUserChannelId\n    );\n    if(index !== -1){\n      if(currentUserChannelId !== userId){\n        lastTotal = notifications[index].total\n\n        if(snap.numChildren() - lastTotal > 0){\n          notifications[index].count = snap.numChildren() - lastTotal\n        }\n      }\n      notifications[index].lastKnownTotal = snap.numChildren()\n    }\n    else {\n      notifications.push({\n        id: currentUserChannelId,\n        total: snap.numChildren(),\n        lastKnownTotal: snap.numChildren(),\n        count: 0\n      })\n    }  \n    this.setState({notifications})\n \n  };\n\n  addStatusToUser = (userId, connected = true) => {\n    const updatedUsers = this.state.users.reduce((acc, user) => {\n      if (user.uid === userId) {\n        user[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\n      }\n      return acc.concat(user);\n    }, []);\n    this.setState({ users: updatedUsers });\n  };\n\n  getChannelId = (userId) => {\n    const currentUserUid = this.state.user.uid;\n    return userId < currentUserUid\n      ? `${userId}/${currentUserUid}`\n      : `${currentUserUid}/${userId}`;\n  };\n\n  isUserOnline = (user) => user.status === \"online\";\n\n  changeChannel = (user) => {\n    const channelId = this.getChannelId(user.userId);\n    const channelData = {\n      id: channelId,\n      name: user.username,\n      photoURL: user.profileImage,\n    };\n\n    this.props.setCurrentChannel(channelData);\n    this.props.setPrivateChannel(true);\n    this.props.firstLoad()\n    this.setActiveChannel(user);\n    this.setState({ userMessage: user });\n    this.clearNotifications();\n  };\n\n  getNotificationCount = (user) => {\n    let count = 0;\n    this.state.notifications.forEach((notification) => {\n      if (notification.id === user.userId && notification.id !== this.state.userMessage.uid) {\n        count = notification.count;\n      }\n    })\n    if (count > 0) return count\n  };\n\n  clearNotifications = () => {\n    let index = this.state.notifications.findIndex(\n      (notification) => notification.id === this.state.userMessage.uid\n    );\n\n    if (index !== -1) {\n      let updatedNotifications = [...this.state.notifications];\n      updatedNotifications[index].total = this.state.notifications[\n        index\n      ].lastKnownTotal;\n      updatedNotifications[index].count = 0;\n      this.setState({ notifications: updatedNotifications });\n    }\n  };\n\n  handleDisplay = () => {\n    this.setState({ display: \"inline\", closeMessage: \"none\" }, () =>\n      this.props.handleDisplayActiveUsers()\n    );\n  };\n\n  handleCloseDisplay = () => {\n    this.setState({ display: \"none\", closeMessage: \"inline\" }, () =>\n      this.props.closeActiveUsers()\n    );\n  };\n  render() {\n    const { users, activeChannel } = this.state;\n\n    return (\n      <Menu.Menu className=\"menu_item_direct\">\n        <Menu.Item>\n          <Box display={this.state.closeMessage}>\n            <Button onClick={this.handleDisplay}>\n              <span>\n                <Icon name=\"mail\" />\n                DIRECT <br/>\n                MESSAGES\n              </span>{\" \"}\n              ({users.length})\n            </Button>\n          </Box>\n          \n        </Menu.Item>\n        <Menu.Item style={{ textAlign: \"left\",position:\"fixed\",bottom:\"1em\"}}>\n        <Box display={this.state.display}>\n            <Button onClick={this.handleCloseDisplay}>\n              <span>\n                <Icon name=\"exchange\" /> CHANNELS \n              </span>{\" \"}\n            </Button>\n          </Box>\n          \n        </Menu.Item>\n\n\n        {users.map((user) => (\n          <Box display={this.state.display}\n          style={{ opacity: 0.8, fontStyle: \"italic\", textAlign: \"left\" }}\n          key={user.userId}\n          >\n            <Menu.Item\n              className=\"animated fadeInUp\"\n              active={user.userId === activeChannel}\n              onClick={() => this.changeChannel(user)}\n             \n            >\n              <Icon\n                name=\"circle\"\n                color={this.isUserOnline(user) ? \"green\" : \"red\"}\n              />\n              <span>\n                {\" \"}\n                <Image src={user.profileImage} spaced=\"right\" avatar />\n              </span>\n              {this.getNotificationCount(user) && (\n                <Label color=\"red\">{this.getNotificationCount(user)}</Label>\n              )}\n              {user.username.toLowerCase()}\n            </Menu.Item>\n          </Box>\n        ))}\n      </Menu.Menu>\n    );\n  }\n}\n\nexport default connect(null, { setCurrentChannel, setPrivateChannel,firstLoad })(\n  directMessages\n);","import React, { Component } from 'react'\nimport {Menu,Icon} from \"semantic-ui-react\"\nimport {connect} from \"react-redux\"\nimport firebase from \"../../Auth/firebase\"\nimport {setCurrentChannel,setPrivateChannel} from \"../../redux/actions/actions\"\n\n\n\nclass starred extends Component {\n    state = {\n        userRef: firebase.database().ref('users'),\n        user: this.props.currentUser,\n        activeChannel: '',\n        starredChannels: [],\n\n    }\n\n    componentDidMount(){\n      if(this.state.user){\n        this.addListeners(this.state.user.uid)\n      }\n    }\n\n    addListeners = (userId) => {\n     \n      this.state.userRef.child(userId).child('starred').on(\"child_added\", snap=> {\n        const starredChannels = {\n          id: snap.key,\n          ...snap.val()\n        }\n        this.setState({\n          starredChannels: [...this.state.starredChannels,starredChannels]\n        })\n      })\n\n      this.state.userRef.child(userId).child('starred').on(\"child_removed\", snap=> {\n        const channelToRemove = { id: snap.key, ...snap.val() }\n        const filteredChannels = this.state.starredChannels.filter(channel=> {\n          return channel.id !== channelToRemove.id\n        })\n        this.setState({starredChannels: filteredChannels})\n      })\n\n    }\n\n    displayChannels = (starredChannels) =>\n    starredChannels.length > 0 &&\n    starredChannels.map((channel) => (\n      <Menu.Item\n        key={channel.id}\n        onClick={() => this.changeChannel(channel)}\n        name={channel.name}\n        style={{ opacity: 0.8, textAlign: \"left\" }}\n        active={channel.id === this.state.activeChannel}\n        className=\"animated fadeInDown delay-0.5s\"\n      >\n        # {channel.name}\n      </Menu.Item>\n    ));\n\n    setActiveChannel = (channel) => {\n        this.setState({ activeChannel: channel.id});\n      };\n      \n      changeChannel = (channel) => {\n        this.setActiveChannel(channel);\n        this.props.setCurrentChannel(channel);\n        this.props.setPrivateChannel(false);\n      };  \n\n    render() {\n\n        const {starredChannels} = this.state\n        return (\n            <Menu.Menu className=\"menu_item2\">\n            <Menu.Item style={{ textAlign: \"left\" }}>\n              <span>\n                <Icon name=\"star\" /> STARRED{\" \"}\n              </span>{\" \"}\n              ({starredChannels.length}){\" \"}\n            </Menu.Item>\n            {this.displayChannels(starredChannels)}\n          </Menu.Menu>\n        )\n    }\n}\n\nexport default connect(null,{setCurrentChannel,setPrivateChannel})(starred)\n","import React from 'react'\nimport {Segment,Accordion,Button,Header,Menu, Icon} from \"semantic-ui-react\"\nimport Box from \"@material-ui/core/Box\";\n\n\nclass About extends React.Component{\nstate ={\n    display: \"none\",\n    closeMessage: \"inline\",\n    activeIndex: 0,\n}\n handleDisplay = () => {\n    this.setState({ display: \"inline\", closeMessage: \"none\" })\n  };\n\n  handleCloseDisplay = () => {\n    this.setState({ display: \"none\", closeMessage: \"inline\" })\n  };\n\n   setActiveIndex = (event, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n    this.setState({ activeIndex: newIndex });\n  };\n   \n  render (){\n    return (\n       \n            <Segment style={{bottom:\"2em\", cursor:\"pointer\"}}>\n       <Box display={this.state.closeMessage}>\n       <Header as=\"h3\" attached=\"top\" className=\"animated fadeInLeft delay-1s\" onClick={this.handleDisplay}>\n         \n          About <br/>\n            {\"..@\"}Developer\n         \n          </Header>\n       </Box>\n\n          <Box display={this.state.display}>\n          <Accordion>\n          <Accordion.Title\n              active={this.state.activeIndex === 0}\n              index={0}\n              onClick={this.setActiveIndex}\n            >\n              <Icon name=\"dropdown\" />\n              <Icon name=\"user\"  />\n              <a href=\"http://portfolio-alex-eb3ef.firebaseapp.com/\">Portfoilio</a>\n            </Accordion.Title>\n    \n            <Accordion.Title \n            active={this.state.activeIndex === 0} \n            index={0}\n            className=\"animated fadeInUp\"\n            >\n             <Icon name=\"dropdown\" />  \n            <Icon name=\"github\" />\n            <a href=\"https://github.com/alexmwaura/\">Github</a>\n            </Accordion.Title>\n         \n            <Button   onClick={this.handleCloseDisplay} color=\"youtube\">\n            <Icon name=\"close\" size=\"small\"/>   close\n          </Button>\n          \n            </Accordion>\n          </Box>\n        \n         </Segment>\n           \n    )\n  }     \n  \n}\n\nexport default About\n","import React, { Component } from 'react'\nimport {Menu, Sidebar} from \"semantic-ui-react\"\nimport UserPanel from \"../userPanel/userpanel\"\nimport \"../landingPage/index.css\"\nimport Channels from \"../channels/Channels\"\nimport DirectMessages from \"../directMessages/directMessages\"\nimport Starred from \"../starred/starred\"\nimport Box from \"@material-ui/core/Box\"\nimport AboutMe from \"../AboutMe/about\"\n\n\nclass sidePanel extends Component {\n\n    state = {\n        displayActiveUsers: \"inline\",\n       \n       \n    }\n\n\n    \n\n    handleDisplayActiveUsers =()=> {\n        this.setState({displayActiveUsers: \"none\"})\n    }\n    closeActiveUsers =()=> {\n        this.setState({displayActiveUsers: \"inline\"})\n    }\n\n    \n\n    render() {\n        const { isMobile,displayActiveUsers } = this.state;\n        return (\n\n         \n        \n                \n            <Menu\n            inverted\n            // className=\"sidebar\"\n            // fluid\n            fixed=\"left\"\n            vertical\n            size=\"small\"\n            style={{background: `${this.props.userColors.secondaryColor}`, fontSize: '1.2rem', height: '100vh', overFlow: \"scroll\", }}\n            >\n            <UserPanel\n            currentUser={this.props.authenticatedUser} \n           \n            \n            />\n            <br />\n            <Starred \n            currentUser={this.props.authenticatedUser}\n            />\n\n            <DirectMessages \n            handleDisplayActiveUsers={this.handleDisplayActiveUsers}\n            user = {this.props.authenticatedUser}\n            closeActiveUsers={this.closeActiveUsers}\n            />\n\n            <Box display={displayActiveUsers} >\n            <Channels authenticatedUser={this.props.authenticatedUser}/>\n            <AboutMe \n            \n            \n            />\n            </Box>\n            </Menu>\n    \n         \n          \n           \n           \n       \n         \n        )\n    }\n}\n\n\n\nexport default sidePanel\n","import React, { Component } from \"react\";\nimport { Header, Segment, Input, Icon,Image } from \"semantic-ui-react\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nclass messageHeader extends Component {\n  render() {\n    const {\n      channelName,\n      numUniqueUsers,\n      handleSearch,\n      searchLoading,\n      privateChannel,\n      userPhoto,\n      handleStar,\n      isChannelStarred\n    } = this.props;\n\n    return (\n      <Segment clearing>\n        <Header fluid=\"true\" as=\"h2\" floated=\"left\" style={{ marginBottom: 0 }}>\n          <span>\n            {userPhoto ?  <Image src={userPhoto} spaced=\"right\" style={{height: '2em'}} avatar />:\"\"}\n            {(channelName).toLowerCase()}\n           {!privateChannel && ( \n           <Icon \n           name={isChannelStarred? \"star\": \"star outline\"} \n           color={isChannelStarred? \"yellow\": \"black\"}\n            onClick={handleStar}\n\n            />) }\n          </span>\n          <Header.Subheader>\n            {!privateChannel && numUniqueUsers }\n          </Header.Subheader>\n        </Header>\n        <Header floated=\"right\">\n          <Input\n            loading={searchLoading}\n            onChange={handleSearch}\n            size=\"mini\"\n            icon=\"search\"\n            name=\"searchTerm\"\n            placeholder=\"Search Messages\"\n          />\n        </Header>\n      </Segment>\n    );\n  }\n}\n\nexport default messageHeader;\n","import React, { Component } from \"react\";\nimport { Modal, Input, Icon, Button } from \"semantic-ui-react\";\nimport mime from \"mime-types\";\n\nclass fileModal extends Component {\n  state = {\n    file: null,\n    authorized: [\"image/jpeg\",\"image/png\"],\n  };\n\n  addFile = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      this.setState({ file });\n    }\n  };\n  sendFile = () => {\n    const { file } = this.state;\n    const { uploadFile, closeModal } = this.props;\n\n    if (file !== null) {\n      if (this.isAuthorized(file.name)) {\n        const metadata = { contentType: mime.lookup(file.name) };\n        uploadFile(file, metadata);\n        closeModal();\n        this.clearFile();\n      }\n    }\n  };\n  isAuthorized = (filename) =>\n    this.state.authorized.includes(mime.lookup(filename));\n\n    clearFile = () => this.setState({ file: null });\n\n  render() {\n    const { modal, closeModal } = this.props;\n\n    return (\n      <Modal basic open={modal} onClose={closeModal}>\n        <Modal.Header>Select an Image File</Modal.Header>\n        <Modal.Content>\n          <Input\n            onChange={this.addFile}\n            fluid\n            label=\"File types: jpg, png\"\n            name=\"file\"\n            type=\"file\"\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={this.sendFile} color=\"green\" inverted>\n            <Icon name=\"checkmark\" /> Send\n          </Button>\n          <Button color=\"red\" inverted onClick={closeModal}>\n            <Icon name=\"remove\" /> Cancel\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default fileModal;\n","import React from \"react\";\nimport { Progress } from \"semantic-ui-react\";\n\nconst ProgressBar = ({ uploadState, percentUploaded }) =>\n  uploadState === \"uploading\" && ( \n    <Progress\n      className=\"progress__bar\"\n      percent={percentUploaded}\n      progress\n      indicating\n      size=\"small\"\n      inverted\n    />\n  );\n\nexport default ProgressBar;","import React, { Component } from \"react\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\nimport firebase from \"../../Auth/firebase\";\nimport FileModal from \"./fileModal\";\nimport {v4 as uuidv4} from \"uuid\";\nimport ProgressBar from \"./ProgressBar\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\n\n\nclass messageForm extends Component {\n  state = {\n    storageRef: firebase.storage().ref(),\n    uploadState: \"\",\n    uploadTask: null,\n    message: \"\",\n    loading: false,\n    channel: this.props.currentChannel,\n    user: this.props.currentUser,\n    messagesRef: this.props.messagesRef,\n    privateChannel: this.props.privateChannel,\n    errors: [],\n    modal: false,\n    percentUploaded: 0,\n    typingRef: firebase.database().ref(\"typing\")\n  };\n\n  openModal = () => this.setState({ modal: true });\n  closeModal = () => this.setState({ modal: false });\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  createMessage = (fileUrl = null) => {\n    const { user } = this.state;\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: user.uid,\n        name: user.displayName,\n        avatar: user.photoURL,\n      },\n    };\n    if (fileUrl !== null) {\n      message[\"image\"] = fileUrl;\n    } else {\n      message[\"content\"] = this.state.message;\n    }\n    return message;\n  };\n\n  getPath = () => {\n    if(this.state.privateChannel){\n      return `chat/private-${this.state.channel.id}`\n    }else{\n      return 'chat/public'\n    }\n  } \n\n  uploadFile = (file, metadata) => {\n    const pathToUpload = this.state.channel.id;\n    const ref = this.props.getMessagesRef();\n    const filePath = `${this.getPath()}${uuidv4()}.jpeg`;\n\n    this.setState(\n      {\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata),\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          (snap) => {\n            const percentUploaded = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            );\n            this.setState({ percentUploaded });\n          },\n          (err) => {\n            console.error(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              uploadState: \"error\",\n              uploadTask: null,\n            });\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then((downloadUrl) => {\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\n              })\n              .catch((err) => {\n                console.error(err);\n                this.setState({\n                  errors: this.state.errors.concat(err),\n                  uploadState: \"error\",\n                  uploadTask: null,\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  handleKeyDown = () => {\n    const {message, typingRef,channel,user} = this.state\n    if(!message) {\n      typingRef.child(channel.id).child(user.uid)\n      .remove()\n    }else {\n      typingRef.child(channel.id).child(user.uid)\n      .set({displayName: user.displayName,photoURL: user.photoURL})\n    }\n  }\n\n\n  sendMessage = () => {\n    const { message, channel,typingRef,user } = this.state;\n    const {getMessagesRef} = this.props\n    if (message) {\n      this.setState({ loading: true });\n      getMessagesRef()\n        .child(channel.id) \n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          typingRef.child(channel.id).child(user.uid).remove()\n          this.setState({ loading: false, message: \"\", errors: [] });\n\n        })\n        .catch((error) => {\n          console.error(error);\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat(error),\n          });\n        });\n    } else {\n      this.setState({\n        errors: this.state.errors.concat({ message: \"Add a message\" }),\n      });\n    }\n  };\n\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\n    ref\n      .child(pathToUpload)\n      .push()\n      .set(this.createMessage(fileUrl))\n      .then(() => {\n        this.setState({ uploadState: \"done\" });\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({\n          errors: this.state.errors.concat(err),\n        });\n      });\n  };\n\n  render() {\n    const {\n      errors,\n      message,\n      loading,\n      modal,\n      uploadState,\n      percentUploaded,\n      user,\n    } = this.state;\n\n    const getLength = (obj)=> {\n      if(obj === null) return 0\n      const lengthUser = Object.keys(obj).length\n      return lengthUser \n    }\n\n    return (\n      <Segment className=\"message__form\">\n        <Input\n          fluid\n          name=\"message\"\n          onKeyDown ={this.handleKeyDown}\n          style={{ marginBottom: \"0.7em\" }}\n          label={<Button icon={\"add\"}  />}\n           value={message}\n          labelPosition=\"left\"\n          placeholder=\"Write your message\"\n          onChange={this.handleChange}\n          className={\n            errors.some((error) => error.message.includes(\"message\"))\n              ? \"error\"\n              : \"\"\n          }\n        />\n        <ProgressBar\n          uploadState={uploadState}\n          percentUploaded={percentUploaded}\n        />\n\n        {getLength(user) > 0 ?(\n          <Button.Group icon widths=\"2\">\n          <Button\n            color=\"orange\"\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n            onClick={this.sendMessage}\n            \n            disabled={loading}\n          />\n          <Button\n            color=\"teal\"\n            content=\"Upload Media\"\n            labelPosition=\"right\"\n            icon=\"cloud upload\"\n            disabled={uploadState === \"uploading\"}\n            onClick={this.openModal}\n          />\n        </Button.Group>\n        ):(\n          <Dimmer active>\n            <Loader size=\"small\" content=\"Please Wait loading chat...\" />\n          </Dimmer>\n        )}\n        <FileModal\n            modal={modal}\n            closeModal={this.closeModal}\n            uploadFile={this.uploadFile}\n          /> \n        \n      </Segment>\n    );\n  }\n}\n\nexport default messageForm;\n","import React, { Fragment } from \"react\";\nimport { Comment, Image } from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport Box from \"@material-ui/core/Box\";\n\nconst isOwnMessage = (message, user) => {\n  return message.user.id === user.uid ? \"message__self\" : \"message_others\";\n};\nconst isOwnMessageTwo = (message, user) => {\n  return message.user.id === user.uid\n    ? \"message__selfTwo\"\n    : \"message_others_two\";\n};\n\nconst isImage = (message) => {\n  return message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"conetent\");\n};\n\nconst timeFromNow = (timestamp) => moment(timestamp).fromNow();\n\nconst Message = ({ message, user }) => (\n  <Comment>\n    <Comment.Content className={isOwnMessage(message, user)}>\n      {message.user.id === user.uid ? (\n        <Fragment />\n      ) : (\n        <Comment.Avatar src={message.user.avatar} />\n      )}\n      <Comment.Content>\n        <br />\n        <Comment.Author as=\"a\">\n          {message.user.id === user.userId ? (\n            <Comment.Avatar src={message.user.avatar} />\n          ) : (\n            <Fragment>{message.user.name}</Fragment>\n          )}\n        </Comment.Author>\n        <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\n\n        {isImage(message) ? (\n          <Image src={message.image} className=\"message__image\" />\n        ) : (\n          <Comment.Text\n            style={{\n              textAlign: \"center\",\n              width: \"fit-content\",\n              marginTop: \"1em\",\n            }}\n          >\n            <Box>\n              <h1\n                className={isOwnMessageTwo(message, user)}\n                style={{ fontSize: \"medium\" }}\n              >\n                {\" \"}\n                {message.content}\n              </h1>\n            </Box>\n          </Comment.Text>\n        )}\n        <br />\n        <br />\n      </Comment.Content>\n    </Comment.Content>\n  </Comment>\n);\nexport default Message;\n","import React,{Fragment} from \"react\";\nimport { Loader, Dimmer,Segment, Header } from \"semantic-ui-react\";\nimport {connect} from \"react-redux\"\nimport Box from \"@material-ui/core/Box\"\n\nconst Spinner = ({user,messages}) => {\n \n\n const {authenticated} = user\n  return (\n   <Segment>\n     {authenticated ? (\n    \n       \n         <Fragment>\n            {messages.length > 0 ?\n            (<Dimmer active>\n              <Loader size=\"huge\" content=\"Preparing Chat...\" />\n              </Dimmer>)\n            : \n            <Box  className=\"animated pulse\">\n               <Header as=\"h1\" style={{backgroundColor:\"#fff\", color:\"#000\", textAlign:\"center\",height:\"54vh\",fontFamily:\"italic\", fontSize:\"xx-large\"}}>\n\n                 Add Message\n              \n               </Header>\n            </Box>\n            \n            }\n\n         </Fragment>\n        \n       \n     ):(\n      <Loader size=\"huge\" content=\"Please Wait login in...\" />\n    \n     )}\n    </Segment>\n  )\n\n}\nconst mapStateToProps = state => ({\n  user: state.user\n})\n\nexport default connect(mapStateToProps)(Spinner)\n\n","import React, { Component } from \"react\";\n\nconst typingUser = () => (\n    <div className=\"typing\">\n    <div className=\"typing__dot\"></div>\n    <div className=\"typing__dot\"></div>\n    <div className=\"typing__dot\"></div>\n  </div>\n);\n\nexport default typingUser;\n","import React, { Component, Fragment } from \"react\";\nimport { Segment, Comment,Image } from \"semantic-ui-react\";\nimport MessagesHeader from \"./messageHeader\";\nimport MessageForm from \"./messageForm\";\nimport firebase from \"../../Auth/firebase\";\nimport Message from \"./Message\";\nimport Spinner from \"../spinner/spinner\";\nimport {connect} from \"react-redux\"\nimport {setUserPosts} from '../../redux/actions/actions'\nimport Typing from \"./typing\"\n\n\n\nclass Messages extends Component {\n  state = {\n    privateChannel: this.props.isPrivateChannel,\n    usersRef: firebase.database().ref(\"users\"),\n    messagesRef: firebase.database().ref(\"messages\"),\n    privateMessagesRef: firebase.database().ref(\"privateMessages\"),\n    channel: this.props.currentChannel,\n    currentUser: this.props.authenticatedUser,\n    typingRef: firebase.database().ref(\"typing\"),\n    messages: [],\n    loading: true,\n    numUniqueUsers: \"\",\n    searchTerm: \"\",\n    searchLoading: false,\n    searchResults: [],\n    isChannelStarred: false,\n    typingUsers: [],\n    connectedRef: firebase.database().ref(\".info/connected\")\n\n  };\n\n  componentDidMount() {\n    const { channel, currentUser } = this.state;\n    if (channel && currentUser) {\n      this.addListeners(channel.id);\n      this.addUserStarsListener(channel.id, currentUser.uid);\n    }\n  }\n  componentWillMount() {\n    this.state.privateMessagesRef.off()\n  }\n  \n  getMessagesRef = () => {\n    const { messagesRef, privateMessagesRef, privateChannel } = this.state;\n    return privateChannel ? privateMessagesRef : messagesRef;\n  };\n\n  addListeners = (channelId) => {\n    this.addMessageListener(channelId);\n    this.addTypingListeners(channelId);\n  };\n\n  addUserStarsListener = (channelId, userId) => {\n    this.state.usersRef\n      .child(userId)\n      .child(\"starred\")\n      .once(\"value\")\n      .then((data) => {\n        if (data.val() !== null) { \n          const channelIds = Object.keys(data.val());\n          const prevStarred = channelIds.includes(channelId);\n          // console.log(prevStarred)\n          this.setState({ isChannelStarred: prevStarred });\n        }\n      });\n  };\n\n  addMessageListener = (channelId) => {\n    let loadedMessages = [];\n    const ref = this.getMessagesRef();\n    ref.child(channelId).on(\"child_added\", (snap) => {\n      loadedMessages.push(snap.val());\n      this.setState({ messages: loadedMessages, loading: false });\n    });\n    this.countUniqueUsers(loadedMessages);\n    this.countUserPosts(loadedMessages)\n  };\n\n  countUniqueUsers = (messages) => {\n    const uniqueUsers = messages.reduce((acc, message) => {\n      if (!acc.includes(message.user.id)) {\n        acc.push(message.user.id);\n      }\n      return acc;\n    }, []);\n\n    const numUniqueUsers = `${uniqueUsers.length} user${\n      uniqueUsers.length > 1 ? \"s\" : \"\"\n    }`;\n    this.setState({ numUniqueUsers: numUniqueUsers });\n  };\n\n\n  countUserPosts = (messages) => {\n    let userPosts = messages.reduce((acc,message)=> {\n      if(message.user.name in acc){\n        acc[message.user.name].count += 1\n      }else {\n        acc[message.user.name] = {\n          avatar: message.user.avatar,\n          count: 1\n        }\n      }\n      return acc\n    },{})\n    this.props.setUserPosts(userPosts)\n  }\n\n  displayMessages = (messages) =>\n    messages.length > 0 ? (\n      messages.map((message) => (\n        <Message\n          key={message.timestamp}\n          message={message}\n          user={this.state.currentUser}\n        />\n      ))\n    ) : (\n      <Spinner messages={messages} />\n\n      // <Spinner messages={messages} />'\n    );\n\n  displayChannelName = (channel) => {\n    return channel\n      ? `${this.state.privateChannel ? \"@\" : \"#\"}${channel.name}`\n      : \"\";\n  };\n\n  getUserPhoto = (channel) => {\n    return channel && channel.photoURL ? channel.photoURL : \"\";\n  };\n\n  handleSearch = (event) => {\n    this.setState(\n      {\n        searchTerm: event.target.value,\n        searchLoading: true,\n      },\n      () => {\n        this.handleSearchMessages();\n      }\n    );\n  };\n  handleSearchMessages = () => {\n    const channelMessages = [...this.state.messages];\n    const regex = new RegExp(this.state.searchTerm, \"gi\");\n    const searchResults = channelMessages.reduce((acc, message) => {\n      if (\n        (message.content && message.content.match(regex)) ||\n        message.user.name.match(regex)\n      ) {\n        acc.push(message);\n      }\n      return acc;\n    }, []);\n    this.setState({ searchResults: searchResults });\n    setTimeout(() => this.setState({ searchLoading: false }), 1000);\n  };\n\n  handleStar = () => {\n    this.setState(prevState => ({\n        isChannelStarred: !prevState.isChannelStarred,\n      }),\n      () => this.starChannel()\n    );\n  };\n  starChannel = () => {\n    if (this.state.isChannelStarred) {\n      this.state.usersRef\n        .child(`${this.state.currentUser.uid}/starred`)\n        .update({\n          [this.state.channel.id]: {\n            name: this.state.channel.name,\n            details: this.state.channel.details,\n            createdBy: {\n              name: this.state.channel.createdBy.name,\n              avatar: this.state.channel.createdBy.avatar,\n            },\n          },\n        });\n    } else {\n      this.state.usersRef\n        .child(`${this.state.currentUser.uid}/starred`)\n        .child(this.state.channel.id)\n        .remove((err) => {\n          if (err !== null) {\n            console.error(err);\n          }\n        });\n    }\n  };\n\n  addTypingListeners = channelId => {\n    let typingUsers = [];\n    this.state.typingRef.child(channelId).on(\"child_added\", snap => {\n      if (snap.key !== this.state.currentUser.uid) {\n        typingUsers = typingUsers.concat({\n          id: snap.key,\n          name: snap.val().displayName,\n          avatar: snap.val().photoURL\n        });\n        this.setState({ typingUsers });\n      }\n    });\n\n    this.state.typingRef.child(channelId).on(\"child_removed\", snap => {\n      const index = typingUsers.findIndex(user => user.id === snap.key);\n      if (index !== -1) {\n        typingUsers = typingUsers.filter(user => user.id !== snap.key);\n        this.setState({ typingUsers });\n      }\n    });\n\n    this.state.connectedRef.on(\"value\", snap => {\n      if (snap.val() === true) {\n        this.state.typingRef\n          .child(channelId)\n          .child(this.state.currentUser.uid)\n          .onDisconnect()\n          .remove(err => {\n            if (err !== null) {\n              console.error(err);\n            }\n          });\n      }\n    });\n  };\n\n\n\n  displayTypingUsers = users =>\n  users.length > 0 &&\n  users.map(user => (\n    <div\n      style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"0.2em\" }}\n      key={user.id}\n    >\n      <span className=\"user__typing\"> <Image avatar src={user.avatar} /> {user.name} </span> <Typing />\n    </div>\n  ));\n\n\n  render() {\n    const {\n      messagesRef,\n      channel,\n      currentUser,\n      messages,\n      numUniqueUsers,\n      searchTerm,\n      searchResults,\n      searchLoading,\n      privateChannel,\n      typingUsers,\n      isChannelStarred,\n    } = this.state;\n    // console.log(channel)\n    return (\n      <Segment style={{  width: \"50em\",background: this.props.userColors.primaryColor,border:\"none\" }}>\n        <MessagesHeader\n          handleSearch={this.handleSearch}\n          channelName={this.displayChannelName(channel)}\n          numUniqueUsers={numUniqueUsers}\n          searchLoading={searchLoading}\n          privateChannel={privateChannel}\n          userPhoto={this.getUserPhoto(channel)}\n          handleStar={this.handleStar}\n          isChannelStarred={isChannelStarred}\n        />\n        <Segment >\n          <Comment.Group className=\"messages\">\n            {searchTerm\n              ? this.displayMessages(searchResults)\n              : this.displayMessages(messages)}\n               {this.displayTypingUsers(typingUsers)}\n          </Comment.Group>\n        </Segment>\n        <MessageForm\n          messagesRef={messagesRef}\n          currentChannel={channel}\n          privateChannel={privateChannel}\n          currentUser={currentUser}\n          getMessagesRef={this.getMessagesRef}\n        />\n      </Segment>\n    );\n  }\n}\n\nexport default connect(null,{setUserPosts})(Messages);\n","import React, { Component } from \"react\";\nimport {\n  Segment,\n  Accordion,\n  Header,\n  Icon,\n  Image,\n  Button,\n  List,\n} from \"semantic-ui-react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\"\nimport Box from \"@material-ui/core/Box\"\n\nclass metaPanel extends Component {\n  state = {\n    channel: this.props.currentChannel,\n    activeIndex: 0,\n    privateChannel: this.props.isPrivateChannel,\n    firstLoad: this.props.firstLoad\n  };\n\n  setActiveIndex = (event, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n    this.setState({ activeIndex: newIndex });\n  };\n\n  displayTopPosters = (posts) => (\n    Object.entries(posts)\n      .sort((a,b) =>b[1] -a[1] )\n      .map(([key, val], i) => (\n        <List.Item key={i} className=\"animated fadeInUp\">\n          <Image src={val.avatar} avatar />\n          <List.Content>\n            <List.Header as=\"a\">{key.toLocaleLowerCase()}</List.Header>\n      <List.Description>{val.count} post{val.count > 1 ? \"s\": \"\"}</List.Description>\n          </List.Content>\n        </List.Item>\n      ))\n      .slice(0,5).reverse()\n  )\n\n  displayUserInformation =(channel) => (\n   channel && channel.photoURL ? (\n    <Segment>\n      \n    <Header as=\"h3\" attached=\"top\" className=\"animated fadeInLeft delay-1s\">\n      About{\"...  @\"}{channel.name}\n      </Header>\n      <Accordion>\n      <Accordion.Title\n          active={this.state.activeIndex === 0}\n          index={0}\n          onClick={this.setActiveIndex}\n        >\n          <Icon name=\"dropdown\" />\n          <Icon name=\"user\" />\n          {channel.name} Profile\n        </Accordion.Title>\n\n        <Accordion.Content active={this.state.activeIndex === 0} className=\"animated fadeInUp\">\n        <Image src={channel.photoURL} /> \n        </Accordion.Content>\n        </Accordion>\n    \n     </Segment>):\"\"\n   \n  )   \n\n  render() {\n    const { activeIndex, privateChannel, channel } = this.state;\n    const { userPost } = this.props;\n  \n    if (privateChannel || !channel) return (\n      <Box display={this.props.firstLoad} >\n      {()=> this.displayUserInformation(channel)}\n       </Box>   \n    );\n\n    return (\n      <Segment >\n        <Header as=\"h3\" attached=\"top\" className=\"animated fadeInLeft delay-1s\">\n    About{\"...  #\"}{channel.name}\n        </Header>\n\n        <Accordion styled attached=\"true\">\n          <Accordion.Title\n            active={activeIndex === 2}\n            index={2}\n            onClick={this.setActiveIndex}\n          >\n            <Icon name=\"dropdown\" />\n            <Icon name=\"info\" />\n            Channel Details\n          </Accordion.Title>\n\n          <Accordion.Content active={activeIndex === 2} className=\"animated fadeInUp\">\n            {channel.details}\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 1}\n            index={1}\n            onClick={this.setActiveIndex}\n          >\n\n            <Icon name=\"dropdown\" />\n            <Icon name=\"user circle\" />\n            Top 5\n          </Accordion.Title>\n\n          <Accordion.Content active={activeIndex === 1}>\n            <List>\n              \n              \n              { userPost && Object.values(userPost).length > 0 ?  this.displayTopPosters(userPost):<CircularProgress size={20} disableShrink />}</List>\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 0}\n            index={0}\n            onClick={this.setActiveIndex}\n          >\n            <Icon name=\"dropdown\" />\n            <Icon name=\"pencil alternate\" />\n            Created By\n          </Accordion.Title>\n\n          <Accordion.Content active={activeIndex === 0} className=\"animated fadeInUp delay-0.5s\">\n            <Image src={channel.createdBy.avatar}  />\n            <Typography\n            variant=\"body1\"\n            style={{ opacity: 0.8, fontStyle: \"italic\", textAlign: \"center\" }}\n            >\n            {channel.createdBy.name.toLowerCase()}\n            </Typography>\n            \n          </Accordion.Content>\n        </Accordion>\n\n    \n      </Segment>\n    );\n  }\n}\n\nexport default metaPanel;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport ColorPanel from \"../colorPanel/colorPanel\";\nimport SidePanel from \"../sidePanel/sidePanel\";\nimport Messages from \"../messages/Messages\";\nimport MetaPanel from \"../metaPanel/metaPanel\";\n\nconst landingPage = (\n  {\n    currentChannel,\n    authenticatedUser,\n    isPrivateChannel,\n    userPost,\n    userColors,\n    firstLoad\n  } \n) => { \n\n    return (\n      <Grid container columns=\"equal\" className=\"app\" style={{background:\n      \n      `${userColors.primaryColor}`}} >\n        <ColorPanel\n        key={authenticatedUser && authenticatedUser.uid} \n        currentUser={authenticatedUser}\n        \n        />\n        <SidePanel\n          authenticatedUser={authenticatedUser}\n          userColors={userColors}\n        />\n\n     <Grid  columns={2} style={{ marginLeft:'8em'}}>\n     <Grid.Column style={{  width: \"50em\" }}>\n          <Messages\n            userColors={userColors}\n            key={currentChannel && currentChannel.id}\n            currentChannel={currentChannel}\n            authenticatedUser={authenticatedUser}\n            isPrivateChannel={isPrivateChannel}\n          />\n        </Grid.Column>\n\n        <Grid.Column style={{width: \"20em\"}}>\n          <span>\n            <MetaPanel\n              key={currentChannel && currentChannel.id}\n              isPrivateChannel={isPrivateChannel}\n              currentChannel={currentChannel}\n              userPost={userPost}\n              firstLoad={firstLoad}\n            />\n          </span>\n        </Grid.Column>\n     </Grid>\n      </Grid>\n    );\n  \n}\n\nexport default landingPage;","import React from 'react'\nimport LandingPage from './components/landingPage/landingPage'\nimport './App.css';\nimport {Grid }from \"semantic-ui-react\"\nimport { connect } from \"react-redux\"\nimport Responsive from \"react-responsive-decorator\"\n\n\nconst App =({currentChannel,authenticatedUser,isPrivateChannel,userPost,colors,firstLoad})=> {\n    return (\n      <Grid container>\n        <Grid.Column>\n       <LandingPage\n       key={authenticatedUser && authenticatedUser.uid}\n       authenticatedUser={authenticatedUser}\n       currentChannel={currentChannel}\n       isPrivateChannel={isPrivateChannel}\n       userPost={userPost}\n       userColors={colors}\n       />\n        </Grid.Column> \n      </Grid>\n\n    )\n  \n}\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n  authenticatedUser: state.user.authenticatedUser,\n  currentChannel: state.channel.currentChannel,\n  isPrivateChannel: state.channel.isPrivateChannel,\n  userPost: state.channel.userPost,\n  colors: state.colors,\n  firstLoad: state.UI.firstLoad\n  \n})\n\nexport default Responsive(connect(mapStateToProps)(App))\n","import React, { Component } from 'react'\nimport { authenticateGoogle } from \"../../redux/actions/actions\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\n\n\n\n\nclass googleAuth extends Component {\n    UNSAFE_componentWillReceiveProps(nxtProps) {\n        if (nxtProps.UI.errors) {\n            this.setState({ errors: nxtProps.UI.errors })\n        }\n    }\n\n    handleLogin = (event) => {\n        event.preventDefault()\n        this.props.authenticateGoogle(this.props.history)\n    }\n\n    render() {\n        return (\n            \n            <button type=\"button\" className=\"google-button\" onClick={this.handleLogin} >\n            <span className=\"google-button__icon\">\n              <svg viewBox=\"0 0 366 372\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M125.9 10.2c40.2-13.9 85.3-13.6 125.3 1.1 22.2 8.2 42.5 21 59.9 37.1-5.8 6.3-12.1 12.2-18.1 18.3l-34.2 34.2c-11.3-10.8-25.1-19-40.1-23.6-17.6-5.3-36.6-6.1-54.6-2.2-21 4.5-40.5 15.5-55.6 30.9-12.2 12.3-21.4 27.5-27 43.9-20.3-15.8-40.6-31.5-61-47.3 21.5-43 60.1-76.9 105.4-92.4z\" id=\"Shape\" fill=\"#EA4335\"/><path d=\"M20.6 102.4c20.3 15.8 40.6 31.5 61 47.3-8 23.3-8 49.2 0 72.4-20.3 15.8-40.6 31.6-60.9 47.3C1.9 232.7-3.8 189.6 4.4 149.2c3.3-16.2 8.7-32 16.2-46.8z\" id=\"Shape\" fill=\"#FBBC05\"/><path d=\"M361.7 151.1c5.8 32.7 4.5 66.8-4.7 98.8-8.5 29.3-24.6 56.5-47.1 77.2l-59.1-45.9c19.5-13.1 33.3-34.3 37.2-57.5H186.6c.1-24.2.1-48.4.1-72.6h175z\" id=\"Shape\" fill=\"#4285F4\"/><path d=\"M81.4 222.2c7.8 22.9 22.8 43.2 42.6 57.1 12.4 8.7 26.6 14.9 41.4 17.9 14.6 3 29.7 2.6 44.4.1 14.6-2.6 28.7-7.9 41-16.2l59.1 45.9c-21.3 19.7-48 33.1-76.2 39.6-31.2 7.1-64.2 7.3-95.2-1-24.6-6.5-47.7-18.2-67.6-34.1-20.9-16.6-38.3-38-50.4-62 20.3-15.7 40.6-31.5 60.9-47.3z\" fill=\"#34A853\"/></svg>\n            </span>\n            <span className=\"google-button__text\">Google</span>\n          </button>\n            \n        )\n    }\n}\n\ngoogleAuth.propTypes = {\n    authenticateGoogle: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired\n\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n})\n\nconst mapActionsToProps = {\n    authenticateGoogle\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(googleAuth)","import React, { Component } from 'react'\nimport { authenticateGithub } from \"../../redux/actions/actions\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport Button from \"@material-ui/core/Button\";\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\n\n\n\n\nclass githubAuth extends Component {\n    UNSAFE_componentWillReceiveProps(nxtProps) {\n        if (nxtProps.UI.errors) {\n            this.setState({ errors: nxtProps.UI.errors })\n        }\n    }\n\n    handleLogin = (event) => {\n        event.preventDefault()\n        this.props.authenticateGithub(this.props.history)\n    }\n\n\n    render() {\n        return (\n\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.handleLogin}>\n                    <GitHubIcon /><span>GitHub</span>\n\n                </Button>\n\n            \n\n        )\n    }\n}\n\n// export default githubAuth\n\ngithubAuth.propTypes = {\n    authenticateGithub: PropTypes.func.isRequired,\n\n}\n\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n})\n\nconst mapActionsToProps = {\n    authenticateGithub\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(githubAuth)","export default {\n    palette: {\n      primary: {\n        light: \"#33c9dc\",\n        main: \"#607d8b\",\n        dark: \"#795548\",\n        contrastText: \"#fff\",\n      },\n      secondary: {\n        light: \"#ff6333\",\n        main: \"#424242\",\n        dark: \"#795548\",\n        contrastText: \"#fff\",\n      },\n      \n    },\n    \n  };\n  ","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Google from \"../../components/signInMethods/googleAuth\";\nimport Github from \"../../components/signInMethods/githubAuth\";\nimport Button from \"@material-ui/core/Button\";\nimport { Grid, Header, Icon } from \"semantic-ui-react\";\nimport { loginUser } from \"../../redux/actions/actions\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport themeObject from \"../../theme/theme\";\nimport { Link } from \"react-router-dom\";\n\nconst theme = createMuiTheme(themeObject);\n\nclass login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {},\n    };\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({ errors: nextProps.UI.errors });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    this.props.loginUser(userData, this.props.history);\n  };\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    const {\n      UI: { loading },\n    } = this.props;\n    const { errors } = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Grid container columns=\"3\">\n          <Grid.Column />\n          {/* <Grid.Column style={{ marginTop: 20, background: \"#a5aba2\" }}> */}\n          <Grid style={{ marginTop: 50, background: \"#a5aba2\", width: 440 }}>\n            <Grid.Row\n              style={{ padding: \"1.2em\", margin: 0 }}\n              className=\"animated rotateInDownRight delay-1s\"\n            >\n              <Header\n                inverted\n                floated=\"left\"\n                as=\"h2\"\n                className=\"animated pulse delay-3s\"\n                style={{ marginBottom: 40 }}\n              >\n                <span>\n                  {\" \"}\n                  <Icon name=\"meetup\" size=\"huge\" />\n                </span>\n                <Header.Content>Meet-Friends </Header.Content>\n              </Header>\n              <br />\n              <Header\n                inverted\n                floated=\"left\"\n                as=\"h2\"\n                style={{ color: \"#615c1e\" }}\n              >\n                <Header.Content className=\"animated slideInLeft\">\n                  {errors.message && (\n                    <Typography\n                      // color=\"primary\"\n                      variant=\"body2\"\n                    >\n                      {errors.message}\n                    </Typography>\n                  )}{\" \"}\n                </Header.Content>\n              </Header>\n            </Grid.Row>\n            <Grid.Row>\n              <form noValidate onSubmit={this.handleSubmit} className=\"login\">\n                <TextField\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  label=\"Email\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                  helperText={errors.email}\n                  error={errors.email ? true : false}\n                  color=\"primary\"\n                  InputProps={{ style: { color: \"#fff\" } }}\n                  variant=\"outlined\"\n                  fullWidth\n                />{\" \"}\n                <br />\n                <TextField\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  label=\"Password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                  helperText={errors.password}\n                  error={errors.password ? true : false}\n                  color=\"primary\"\n                  InputProps={{ style: { color: \"#fff\" } }}\n                  // fullWidth\n                />{\" \"}\n                <br /> <br />\n                {errors.general && (\n                  <Typography variant=\"body2\">{errors.general}</Typography>\n                )}\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  id=\"button\"\n                  color=\"primary\"\n                  disabled={loading}\n                >\n                  Login\n                  {loading && <CircularProgress size={30} disableShrink />}\n                </Button>\n                <br />\n                <small className=\"\">\n                  {\" \"}\n                  Don't have an account ? <Link to=\"/signup\">\n                    Signup Here\n                  </Link>{\" \"}\n                </small>\n                <br />\n                <span>\n                  {\" \"}\n                  <Icon name=\"meetup\" size=\"huge\" />\n                </span>\n                <Google />\n                <Github />\n              </form>\n            </Grid.Row>\n          </Grid>\n        </Grid>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nlogin.propTypes = {\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps, { loginUser })(login);\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Google from \"../../components/signInMethods/googleAuth\";\nimport Github from \"../../components/signInMethods/githubAuth\";\nimport Button from \"@material-ui/core/Button\";\nimport { Grid, Header, Icon } from \"semantic-ui-react\";\nimport { signupUser } from \"../../redux/actions/actions\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport themeObject from \"../../theme/theme\";\nimport { Link } from \"react-router-dom\";\n\nconst theme = createMuiTheme(themeObject);\n\nclass signUp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({ errors: nextProps.UI.errors });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const userData = {\n      email: this.state.email,\n      username: this.state.username,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n\n    this.props.signupUser(userData, this.props.history);\n  };\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    const {\n      UI: { loading },\n    } = this.props;\n    const { errors } = this.state;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Grid container columns=\"3\">\n          <Grid.Column />\n          {/* <Grid.Column style={{ marginTop: 20, background: \"#a5aba2\" }}> */}\n          <Grid style={{ marginTop: 50, background: \"#a5aba2\", width: 440 }}>\n            <Grid.Row\n              style={{ padding: \"1.2em\", margin: 0 }}\n              className=\"animated rotateInDownRight delay-1s\"\n            >\n              <Header\n                inverted\n                floated=\"left\"\n                as=\"h2\"\n                className=\"animated pulse delay-3s\"\n                style={{ marginBottom: 40 }}\n              >\n                <span>\n                  {\" \"}\n                  <Icon name=\"meetup\" size=\"huge\" />\n                </span>\n                <Header.Content>Meet-Friends </Header.Content>\n              </Header>\n              <br />\n              <Header\n                inverted\n                floated=\"left\"\n                as=\"h2\"\n                style={{ color: \"#615c1e\" }}\n              >\n                <Header.Content className=\"animated slideInLeft\">\n                  {errors.message && (\n                    <Typography\n                      // color=\"primary\"\n                      variant=\"body2\"\n                    >\n                      {errors.message}\n                    </Typography>\n                  )}{\" \"}\n                </Header.Content>\n              </Header>\n            </Grid.Row>\n            <Grid.Row>\n              <form noValidate onSubmit={this.handleSubmit} className=\"login\">\n                <TextField\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  label=\"Email\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                  helperText={errors.email}\n                  error={errors.email ? true : false}\n                  color=\"primary\"\n                  InputProps={{ style: { color: \"#fff\" } }}\n                  variant=\"outlined\"\n                  fullWidth\n                />{\" \"}\n                <br />\n                <TextField\n                  id=\"username\"\n                  name=\"username\"\n                  type=\"username\"\n                  label=\"Username\"\n                  value={this.state.username}\n                  onChange={this.handleChange}\n                  helperText={errors.username}\n                  error={errors.username ? true : false}\n                  color=\"primary\"\n                  InputProps={{ style: { color: \"#fff\" } }}\n                  // variant=\"outlined\"\n                  fullWidth\n                />{\" \"}\n                <br />\n                <br />\n                <TextField\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  label=\"Password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                  helperText={errors.password}\n                  error={errors.password ? true : false}\n                  color=\"primary\"\n                  InputProps={{ style: { color: \"#fff\" } }}\n                  variant=\"outlined\"\n                />{\" \"}\n                <br />\n                <TextField\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  type=\"confirmPassword\"\n                  label=\"Confirm Password\"\n                  value={this.state.confirmPassword}\n                  onChange={this.handleChange}\n                  helperText={errors.confirmPassword}\n                  error={errors.confirmPassword ? true : false}\n                  color=\"primary\"\n                  InputProps={{ style: { color: \"#fff\" } }}\n                />{\" \"}\n                <br /> <br />\n                {errors.general && (\n                  <Typography variant=\"body2\">{errors.general}</Typography>\n                )}\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  id=\"button\"\n                  color=\"primary\"\n                  disabled={loading}\n                >\n                  Signup\n                  {loading && <CircularProgress size={30} disableShrink />}\n                </Button>\n                <br />\n                <small className=\"\">\n                  Already have an account ? <Link to=\"/login\">Login Here</Link>{\" \"}\n                </small>\n                <br />\n                <span>\n                  {\" \"}\n                  <Icon name=\"meetup\" size=\"huge\" />\n                </span>\n                <Google />\n                <Github />\n              </form>\n            </Grid.Row>\n          </Grid>\n        </Grid>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nsignUp.propTypes = {\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  signupUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps, { signupUser })(signUp);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport Login from './pages/login/login'\nimport Signup from './pages/signup/signup'\n\nimport {Provider,connect} from \"react-redux\"\nimport store from \"./redux/store/store\"\nimport firebase from \"./Auth/firebase\"\nimport * as serviceWorker from './serviceWorker';\nimport {  SET_UNAUTHENTICATED, STOP_LOADING_UI } from './redux/store/types';\nimport axios from \"axios\"\nimport jwt_decode from \"jwt-decode\"\nimport {setAuthenticatedUser} from './redux/actions/actions'\n\naxios.defaults.baseURL = 'https://europe-west1-portfolio-alex-eb3ef.cloudfunctions.net/api'\n\nclass Root extends Component {\n\n  setToken(token,email,user){\n    if(token){\n      axios.defaults.headers.common[\"Authorization\"] = token\n      this.props.setAuthenticatedUser(user)\n    }\n  }\n\n  componentDidMount(){\n    firebase.auth().onAuthStateChanged(user=> {\n      if(user){\n        const {xa,email} = user\n        const token = `Bearer ${xa}`\n        this.setToken(token,email,user)\n        store.dispatch({type:STOP_LOADING_UI})\n        this.props.history.push(\"/\")\n        \n        \n       if(jwt_decode(xa)['exp'] * 1000 < Date.now()){ \n         store.dispatch({type: SET_UNAUTHENTICATED})\n         this.props.history.push(\"/login\") \n        }\n      }\n      else{\n        this.props.history.push('/login') \n\n      }\n            \n      \n    })\n\n  }  \n\n  render(){\n    return(\n         <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route  path=\"/login\" component={Login} />\n            <Route  path=\"/signup\" component={Signup} />\n          \n         </Switch>\n      \n      \n    )\n  }\n}\nconst mapStateFromProps = state => ({\n  loading: state.UI.loading,\n  channel: state.channel\n});\n\n\nconst RootWithAuth = withRouter(connect(mapStateFromProps, {setAuthenticatedUser})(Root))\n\n\nReactDOM.render(\n  <Provider store={store}>\n <Router>\n   <RootWithAuth/>\n </Router>\n </Provider>,\n\n  document.getElementById('root')\n);\nserviceWorker.register()\n\n"],"sourceRoot":""}