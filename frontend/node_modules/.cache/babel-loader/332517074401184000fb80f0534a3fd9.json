{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/pages/login/login.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport Google from \"../../components/signInMethods/googleAuth\";\nimport Github from \"../../components/signInMethods/githubAuth\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nxtProps) {\n    if (nxtProps.UI.errors) {\n      this.setState({\n        errors: nxtProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      helperText: errors.email,\n      error: errors.email ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      helperText: errors.password,\n      error: errors.password ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 27\n      }\n    }), errors.general && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }, errors.general), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      id: \"button\",\n      color: \"secondary\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Login\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 30,\n      disableShrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }\n    })), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \" Don't have an account ? Signup\", \" \", \" \"));\n  }\n\n}\n\nlogin.propTypes = {\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps)(login);","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/pages/login/login.js"],"names":["React","Component","TextField","Paper","Card","Google","Github","Button","Grid","PropTypes","connect","login","constructor","state","errors","componentWillReceiveProps","nxtProps","UI","setState","render","handleSubmit","email","handleChange","password","general","loading","propTypes","user","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport Card from '@material-ui/core/Card'\nimport Google from \"../../components/signInMethods/googleAuth\"\nimport Github from \"../../components/signInMethods/githubAuth\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\n\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\n\n\nclass login extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            errors: {}\n        }\n    }\n    componentWillReceiveProps(nxtProps) {\n        if (nxtProps.UI.errors) {\n            this.setState({ errors: nxtProps.UI.errors })\n        }\n    }\n\n\n    render() {\n        return (\n\n            <form noValidate onSubmit={this.handleSubmit} className=\"table-responsive\" >\n                <TextField id=\"email\" name=\"email\" type=\"email\" label=\"Email\"\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                    helperText={errors.email}\n                    error={errors.email ? true : false}\n                /> <br />\n                <TextField id=\"password\" name=\"password\" type=\"password\" label=\"Password\"\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                    helperText={errors.password}\n                    error={errors.password ? true : false}\n\n                /> <br /> <br />\n                {errors.general && (<Typography variant=\"body2\">{errors.general}</Typography>)}\n                <Button type=\"submit\" variant=\"contained\" id=\"button\" color=\"secondary\" disabled={loading}>Login\n{loading && (<CircularProgress size={30} disableShrink />)}\n                </Button>\n                <small className=\"\"> Don't have an account ? Signup{\" \"} </small>\n            </form>\n        )\n    }\n}\n\nlogin.propTypes = {\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n\n}\n\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n})\n\nexport default connect(mapStateToProps)(login)\n\n"]},"metadata":{},"sourceType":"module"}