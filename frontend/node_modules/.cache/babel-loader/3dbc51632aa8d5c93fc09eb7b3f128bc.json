{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/components/directMessages/directMessages.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport firebase from \"../../Auth/firebase\";\n\nclass directMessages extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: this.props.user,\n      userRef: firebase.database().ref(\"users\"),\n      connectedRef: firebase.database().ref(\".info/connected\"),\n      presenceRef: firebase.database().ref(\"presence\")\n    };\n\n    this.addListeners = currentUserUid => {\n      const {\n        userRef,\n        connectedRef,\n        presenceRef\n      } = this.state;\n      let loadedUsers = [];\n      userRef.on(\"child_added\", snap => {\n        let user = snap.val();\n        console.log(user);\n        user[\"uid\"] = snap.key;\n        user[\"status\"] = \"offline\";\n        loadedUsers.push(user);\n        this.setState({\n          users: loadedUsers\n        });\n      });\n      connectedRef.on(\"value\", snap => {\n        if (snap.val() === true) {\n          const ref = presenceRef.child(currentUserUid);\n          ref.set(true);\n          ref.onDisconnect().remove(err => {\n            if (err !== null) {\n              console.error(err);\n            }\n          });\n        }\n      });\n      presenceRef.on(\"child_added\", snap => {\n        if (currentUserUid !== snap.key) {\n          this.addStatusToUser(snap.key);\n        }\n      });\n      presenceRef.on(\"child_removed\", snap => {\n        if (currentUserUid !== snap.key) {\n          this.addStatusToUser(snap.key, false);\n        }\n      });\n    };\n\n    this.addStatusToUser = (userId, connected = true) => {\n      const updatedUsers = this.state.users.reduce((acc, user) => {\n        if (user.uid === userId) {\n          user[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\n        }\n\n        return acc.concat(user);\n      }, []);\n      this.setState({\n        users: updatedUsers\n      });\n    };\n\n    this.isUserOnline = user => user.status === 'online';\n  }\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListeners(this.state.user.uid);\n    }\n  }\n\n  render() {\n    const {\n      users\n    } = this.state;\n    let userData = [];\n    userData.push(users);\n    return /*#__PURE__*/React.createElement(Menu.Menu, {\n      className: \"menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), \"DIRECT MESSAGES\"), \" \", \"(\", userData.length, \")\"), /*#__PURE__*/React.createElement(Menu.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, users ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, userData.map(user => /*#__PURE__*/React.createElement(Menu.Item, {\n      onClick: () => console.log(user),\n      key: user.uid,\n      style: {\n        opacity: 0.7,\n        fontStyle: 'italic'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"circle\",\n      color: this.isUserOnline(user) ? 'green' : 'red',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), \"@\", user.displayName))) : /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 14\n      }\n    })));\n  }\n\n}\n\nexport default directMessages;","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/components/directMessages/directMessages.js"],"names":["React","Component","Fragment","Menu","Icon","firebase","directMessages","state","users","props","user","userRef","database","ref","connectedRef","presenceRef","addListeners","currentUserUid","loadedUsers","on","snap","val","console","log","key","push","setState","child","set","onDisconnect","remove","err","error","addStatusToUser","userId","connected","updatedUsers","reduce","acc","uid","concat","isUserOnline","status","componentDidMount","render","userData","length","map","opacity","fontStyle","displayName"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport firebase from \"../../Auth/firebase\";\nclass directMessages extends Component {\n  state = {\n    users: this.props.user,\n    userRef: firebase.database().ref(\"users\"),\n    connectedRef: firebase.database().ref(\".info/connected\"),\n    presenceRef: firebase.database().ref(\"presence\"),\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListeners(this.state.user.uid);\n    }\n  }\n  addListeners = (currentUserUid) => {\n    const { userRef, connectedRef, presenceRef } = this.state;\n    let loadedUsers = [];\n    userRef.on(\"child_added\", (snap) => {\n      let user = snap.val();\n      console.log(user)\n      user[\"uid\"] = snap.key;\n      user[\"status\"] = \"offline\";\n      loadedUsers.push(user);\n      this.setState({ users: loadedUsers });\n    });\n    connectedRef.on(\"value\", (snap) => {\n      if (snap.val() === true) {\n        const ref = presenceRef.child(currentUserUid);\n        ref.set(true);\n        ref.onDisconnect().remove((err) => {\n          if (err !== null) {\n            console.error(err);\n          }\n        });\n      }\n    });\n\n    presenceRef.on(\"child_added\", (snap) => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key);\n      }\n    });\n\n    presenceRef.on(\"child_removed\", (snap) => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key, false);\n      }\n    });\n  };\n\n  addStatusToUser = (userId, connected = true) => {\n    const updatedUsers = this.state.users.reduce((acc, user) => {\n      if (user.uid === userId) {\n        user[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\n      }\n      return acc.concat(user);\n    }, []);\n    this.setState({ users: updatedUsers });\n  };\n\n  isUserOnline =(user) => user.status === 'online'\n\n  render() {\n    const { users } = this.state;\n    let userData = []\n    userData.push(users)\n\n    return (\n      <Menu.Menu className=\"menu\">\n        <Menu.Item>\n          <span>\n            <Icon name=\"mail\" />\n            DIRECT MESSAGES\n          </span>{\" \"}\n          ({userData.length})\n        </Menu.Item>\n\n        <Menu.Item>\n          {users ? (\n              <Fragment>\n                  {userData.map((user) => (\n            <Menu.Item \n            onClick={()=> console.log(user)}\n            key={user.uid}\n            style={{opacity: 0.7, fontStyle: 'italic'}}\n            >\n                <Icon \n                name=\"circle\"\n                color={this.isUserOnline(user)? 'green': 'red'}\n                />\n                @{user.displayName}\n            </Menu.Item>\n          ))}\n              </Fragment>\n          ):(<Fragment/>)}\n        </Menu.Item>\n      </Menu.Menu>\n    );\n  }\n}\n\nexport default directMessages;\n"]},"metadata":{},"sourceType":"module"}