{"ast":null,"code":"import { LOADING_USER, LOADING_UI, SET_GOOGLE_USER } from \"../store/types\";\nimport * as firebase from \"firebase\";\nimport Config from \"../../config/config\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nfirebase.initializeApp(Config);\nexport const authenticateGoogle = () => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.addScope('profile');\n  provider.addScope('email');\n  firebase.auth().signInWithPopup(provider).then(result => {\n    if (result.credential) {\n      const {\n        user\n      } = result;\n      let token;\n      console.log(user);\n      const {\n        displayName,\n        email,\n        uid,\n        xa\n      } = user;\n      token = xa;\n      localStorage.setItem(\"token\", token);\n      const {\n        picture\n      } = jwt_decode(token);\n      const userData = {\n        email: email,\n        username: displayName\n      };\n      dispatch(googleSignup(userData, uid));\n    }\n  }).catch(err => console.log(err));\n};\nexport const googleSignup = (userData, userId) => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.post(`/google/${userId}`, userData).then(res => {\n    dispatch({\n      type: SET_GOOGLE_USER,\n      payload: res.data\n    }); // window.location.href = \"/\"\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/redux/actions/userActions.js"],"names":["LOADING_USER","LOADING_UI","SET_GOOGLE_USER","firebase","Config","axios","jwt_decode","initializeApp","authenticateGoogle","dispatch","type","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","credential","user","token","console","log","displayName","email","uid","xa","localStorage","setItem","picture","userData","username","googleSignup","catch","err","userId","post","res","payload","data"],"mappings":"AAAA,SAAQA,YAAR,EAAqBC,UAArB,EAAiCC,eAAjC,QAAuD,gBAAvD;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEAH,QAAQ,CAACI,aAAT,CAAuBH,MAAvB;AAGA,OAAO,MAAMI,kBAAkB,GAAG,MAAOC,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAET;AAAP,GAAD,CAAR;AACA,QAAMU,QAAQ,GAAG,IAAIR,QAAQ,CAACS,IAAT,CAAcC,kBAAlB,EAAjB;AACAF,EAAAA,QAAQ,CAACG,QAAT,CAAkB,SAAlB;AACAH,EAAAA,QAAQ,CAACG,QAAT,CAAkB,OAAlB;AACAX,EAAAA,QAAQ,CAACS,IAAT,GAAgBG,eAAhB,CAAgCJ,QAAhC,EACCK,IADD,CACOC,MAAD,IAAW;AACb,QAAIA,MAAM,CAACC,UAAX,EAAuB;AACvB,YAAM;AAACC,QAAAA;AAAD,UAASF,MAAf;AACA,UAAIG,KAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,YAAO;AAACI,QAAAA,WAAD;AAAcC,QAAAA,KAAd;AAAoBC,QAAAA,GAApB;AAAwBC,QAAAA;AAAxB,UAA8BP,IAArC;AACAC,MAAAA,KAAK,GAAGM,EAAR;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BR,KAA9B;AACA,YAAM;AAACS,QAAAA;AAAD,UAAavB,UAAU,CAACc,KAAD,CAA7B;AAEA,YAAMU,QAAQ,GAAG;AACZN,QAAAA,KAAK,EAAEA,KADK;AAEZO,QAAAA,QAAQ,EAAER;AAFE,OAAjB;AAKAd,MAAAA,QAAQ,CAACuB,YAAY,CAACF,QAAD,EAAUL,GAAV,CAAb,CAAR;AACC;AAGF,GApBH,EAqBCQ,KArBD,CAqBQC,GAAD,IAASb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CArBhB;AAwBH,CA7BM;AAgCP,OAAO,MAAMF,YAAY,GAAG,CAACF,QAAD,EAAUK,MAAV,KAAsB1B,QAAD,IAAc;AAC3DA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEV;AAAP,GAAD,CAAR;AACAK,EAAAA,KAAK,CAAC+B,IAAN,CAAY,WAAUD,MAAO,EAA7B,EAA+BL,QAA/B,EACCd,IADD,CACMqB,GAAG,IAAG;AACR5B,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER,eADD;AAELoC,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,KAAD,CAAR,CADQ,CAMR;AACH,GARD,EASCN,KATD,CASQC,GAAD,IAASb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAThB;AAWH,CAbM","sourcesContent":["import {LOADING_USER,LOADING_UI, SET_GOOGLE_USER} from \"../store/types\"\nimport * as firebase from \"firebase\"\nimport Config from \"../../config/config\"\nimport axios from \"axios\"\nimport jwt_decode from \"jwt-decode\"\n\nfirebase.initializeApp(Config)\n\n\nexport const authenticateGoogle = () => (dispatch) => {\n    dispatch({type: LOADING_UI})\n    const provider = new firebase.auth.GoogleAuthProvider()\n    provider.addScope('profile');\n    provider.addScope('email');\n    firebase.auth().signInWithPopup(provider)\n    .then((result) =>{\n        if (result.credential) {\n        const {user} = result\n        let token;   \n        console.log(user)   \n        const  {displayName, email,uid,xa} = user\n        token = xa\n        localStorage.setItem(\"token\", token)\n        const {picture} =  jwt_decode(token)   \n\n        const userData = {\n             email: email,\n             username: displayName,\n        }\n       \n        dispatch(googleSignup(userData,uid))\n        }\n        \n        \n      }) \n    .catch((err) => console.log(err));\n\n\n}\n\n\nexport const googleSignup = (userData,userId) => (dispatch) => {\n    dispatch({type: LOADING_USER})\n    axios.post(`/google/${userId}`,userData)\n    .then(res=> {\n        dispatch({\n            type: SET_GOOGLE_USER,\n            payload: res.data\n        })\n        \n        // window.location.href = \"/\"\n    })\n    .catch((err) => console.log(err));\n\n}"]},"metadata":{},"sourceType":"module"}