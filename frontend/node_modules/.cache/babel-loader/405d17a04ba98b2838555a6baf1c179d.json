{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/components/messages/messages.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Segment, Comment } from \"semantic-ui-react\";\nimport MessagesHeader from \"./messageHeader\";\nimport MessageForm from \"./messageForm\";\nimport firebase from \"../../Auth/firebase\";\nimport Message from \"./message\";\n\nclass messages extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messagesRef: firebase.database().ref('messages'),\n      channel: this.props.currentChannel,\n      currentUser: this.props.currentUser,\n      messages: [],\n      loading: true\n    };\n\n    this.addListeners = channelId => {\n      this.addMessageListener(channelId);\n    };\n\n    this.addMessageListener = channelId => {\n      let loadedMessages = [];\n      this.state.messagesRef.child(channelId).on(\"child_added\", snap => {\n        loadedMessages.push(snap.val());\n        console.log(loadedMessages);\n        this.setState({\n          messages: loadedMessages,\n          loading: false\n        });\n      });\n    };\n\n    this.displayMessages = messages => messages.length > 0 && Map(message => /*#__PURE__*/React.createElement(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  componentDidMount() {\n    const {\n      channel,\n      currentUser\n    } = this.state;\n\n    if (channel && currentUser) {\n      this.addListeners(channel.id);\n    }\n  }\n\n  render() {\n    const {\n      messagesRef,\n      channel,\n      currentUser,\n      messages\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MessagesHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Group, {\n      className: \"messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }, this.displayMessages(messages))), /*#__PURE__*/React.createElement(MessageForm, {\n      messagesRef: messagesRef,\n      currentChannel: channel,\n      currentUser: currentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default messages;","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/components/messages/messages.js"],"names":["React","Component","Fragment","Segment","Comment","MessagesHeader","MessageForm","firebase","Message","messages","state","messagesRef","database","ref","channel","props","currentChannel","currentUser","loading","addListeners","channelId","addMessageListener","loadedMessages","child","on","snap","push","val","console","log","setState","displayMessages","length","Map","message","componentDidMount","id","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,mBAA/B;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEC,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE9BS,KAF8B,GAEtB;AACJC,MAAAA,WAAW,EAAEJ,QAAQ,CAACK,QAAT,GAAoBC,GAApB,CAAwB,UAAxB,CADT;AAEJC,MAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,cAFhB;AAGJC,MAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE,WAHpB;AAIJR,MAAAA,QAAQ,EAAE,EAJN;AAKJS,MAAAA,OAAO,EAAE;AALL,KAFsB;;AAAA,SAiB9BC,YAjB8B,GAiBfC,SAAD,IAAe;AACzB,WAAKC,kBAAL,CAAwBD,SAAxB;AACH,KAnB6B;;AAAA,SAqB9BC,kBArB8B,GAqBRD,SAAD,IAAe;AACjC,UAAIE,cAAc,GAAG,EAArB;AACA,WAAKZ,KAAL,CAAWC,WAAX,CAAuBY,KAAvB,CAA6BH,SAA7B,EAAwCI,EAAxC,CAA2C,aAA3C,EAA0DC,IAAI,IAAI;AAC9DH,QAAAA,cAAc,CAACI,IAAf,CAAoBD,IAAI,CAACE,GAAL,EAApB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYP,cAAZ;AACA,aAAKQ,QAAL,CAAc;AAACrB,UAAAA,QAAQ,EAAEa,cAAX;AAA2BJ,UAAAA,OAAO,EAAE;AAApC,SAAd;AACH,OAJD;AAKF,KA5B6B;;AAAA,SA8B9Ba,eA9B8B,GA8BXtB,QAAD,IACdA,QAAQ,CAACuB,MAAT,GAAkB,CAAlB,IAAwBC,GAAG,CAACC,OAAO,iBAC/B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADuB,CA/BD;AAAA;;AAU9BC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACrB,MAAAA,OAAD;AAASG,MAAAA;AAAT,QAAwB,KAAKP,KAAnC;;AACA,QAAGI,OAAO,IAAGG,WAAb,EAAyB;AACrB,WAAKE,YAAL,CAAkBL,OAAO,CAACsB,EAA1B;AACH;AACJ;;AAsBDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAC1B,MAAAA,WAAD;AAAaG,MAAAA,OAAb;AAAqBG,MAAAA,WAArB;AAAiCR,MAAAA;AAAjC,QAA6C,KAAKC,KAAxD;AACA,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD,CAAS,KAAT;AAAe,MAAA,SAAS,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKqB,eAAL,CAAqBtB,QAArB,CADH,CADJ,CAFJ,eAOI,oBAAC,WAAD;AACA,MAAA,WAAW,EAAEE,WADb;AAEA,MAAA,cAAc,EAAEG,OAFhB;AAGA,MAAA,WAAW,EAAEG,WAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADF;AAeH;;AAtD6B;;AAyDlC,eAAeR,QAAf","sourcesContent":["import React, { Component,Fragment } from 'react'\nimport {Segment, Comment} from \"semantic-ui-react\"\nimport MessagesHeader from \"./messageHeader\"\nimport MessageForm from \"./messageForm\"\nimport firebase from \"../../Auth/firebase\"\nimport Message from \"./message\"\n\n class messages extends Component {\n\n    state = {\n        messagesRef: firebase.database().ref('messages'),\n        channel: this.props.currentChannel,\n        currentUser: this.props.currentUser,\n        messages: [],\n        loading: true\n    }\n\n    componentDidMount(){\n        const {channel,currentUser} = this.state\n        if(channel&& currentUser){\n            this.addListeners(channel.id)\n        }\n    }\n\n    addListeners =(channelId) => {\n        this.addMessageListener(channelId)\n    }\n\n    addMessageListener = (channelId) => {\n       let loadedMessages = []\n       this.state.messagesRef.child(channelId).on(\"child_added\", snap => {\n           loadedMessages.push(snap.val())\n           console.log(loadedMessages)\n           this.setState({messages: loadedMessages, loading: false})\n       }) \n    }\n\n    displayMessages = (messages) => (\n        messages.length > 0  && Map(message=> (\n            <Message/>\n        ))\n    )\n\n\n    render() {\n        const {messagesRef,channel,currentUser,messages} = this.state\n        return (\n          <Fragment>\n              <MessagesHeader />\n              <Segment>\n                  <Comment.Group className=\"messages\">\n                    {this.displayMessages(messages)}\n                  </Comment.Group>\n              </Segment>\n              <MessageForm \n              messagesRef={messagesRef}\n              currentChannel={channel}\n              currentUser={currentUser}\n              />\n          </Fragment>  \n        )\n    }\n}\n\nexport default messages\n"]},"metadata":{},"sourceType":"module"}