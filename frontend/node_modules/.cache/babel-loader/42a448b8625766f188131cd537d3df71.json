{"ast":null,"code":"import { LOADING_USER, LOADING_UI, SET_ERRORS, CLEAR_ERRORS, SET_AUTHENTICATED, SET_USER } from \"../store/types\";\nimport firebase from \"../../Auth/firebase\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nexport const login = (email, password, history) => dispatch => {\n  firebase.auth().signInWithEmailAndPassword(email, password).then(data => {\n    if (data) {\n      console.log(data);\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const multiAuth = (provider, scope, history) => dispatch => {\n  provider.addScope(`${scope[0]}`);\n  if (scope[1]) provider.addScope(`${scope[1]}`);\n  firebase.auth().signInWithPopup(provider).then(result => {\n    if (result.credential) {\n      const {\n        user,\n        credential\n      } = result;\n      const {\n        accessToken\n      } = credential;\n      let token;\n      console.log(accessToken);\n      const {\n        displayName,\n        email,\n        xa\n      } = user;\n      console.log(firebase.auth().currentUser);\n      token = xa;\n      const {\n        picture,\n        user_id\n      } = jwt_decode(token);\n      const userData = {\n        email: email,\n        username: displayName,\n        profileImage: picture\n      };\n      dispatch(googleSignup(userData, user_id, history));\n    }\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err\n    });\n    console.log(err);\n  });\n};\nexport const authenticateGoogle = history => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  const provider = new firebase.auth.GoogleAuthProvider();\n  let scope = [\"profile\", \"email\"];\n  dispatch(multiAuth(provider, scope, history));\n};\nexport const authenticateGithub = history => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  const provider = new firebase.auth.GithubAuthProvider();\n  let scope = [\"repo\"]; // let email = \"email\"\n\n  dispatch(multiAuth(provider, scope, history));\n};\nexport const googleSignup = (userData, userId, history) => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.post(`/google/${userId}`, userData).then(res => {\n    if (res.data) {\n      window.location.href = \"/\";\n    } // window.location.href = \"/\"\n\n  }).catch(err => console.log(err));\n};\nexport const loginUser = (userData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post(\"/login\", userData).then(() => {\n    dispatch(login(userData.email, userData.password));\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const signupUser = (newUserData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post(\"/signup\", newUserData).then(() => {\n    dispatch(login(newUserData.email, newUserData.password));\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const setUser = user => {\n  return {\n    type: SET_USER,\n    payload: {\n      currentUser: user\n    }\n  };\n};","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/redux/actions/userActions.js"],"names":["LOADING_USER","LOADING_UI","SET_ERRORS","CLEAR_ERRORS","SET_AUTHENTICATED","SET_USER","firebase","axios","jwt_decode","login","email","password","history","dispatch","auth","signInWithEmailAndPassword","then","data","console","log","catch","err","multiAuth","provider","scope","addScope","signInWithPopup","result","credential","user","accessToken","token","displayName","xa","currentUser","picture","user_id","userData","username","profileImage","googleSignup","type","payload","authenticateGoogle","GoogleAuthProvider","authenticateGithub","GithubAuthProvider","userId","post","res","window","location","href","loginUser","response","signupUser","newUserData","setUser"],"mappings":"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","sourcesContent":["import {LOADING_USER,LOADING_UI,SET_ERRORS,CLEAR_ERRORS, SET_AUTHENTICATED, SET_USER} from \"../store/types\"\nimport firebase from \"../../Auth/firebase\"\nimport axios from \"axios\"\nimport jwt_decode from \"jwt-decode\"\n\nexport const login = (email,password,history) => (dispatch) => {\n  firebase.auth().signInWithEmailAndPassword(email,password).then(data=> {\n    if(data){\n     console.log(data)\n    }\n  }).catch(err=> {\n    console.log(err)\n  })\n}\n\n\n\n\nexport const multiAuth = (provider,scope ,history) => (dispatch)=> {\n    provider.addScope(`${scope[0]}`);\n    if(scope[1])provider.addScope(`${scope[1]}`)\n    firebase.auth().signInWithPopup(provider)\n    .then((result) =>{\n        if (result.credential) {\n        const {user,credential} = result\n        const {accessToken} = credential\n        let token;   \n        console.log(accessToken)   \n        const  {displayName, email,xa} = user\n        console.log(firebase.auth().currentUser)\n        token = xa\n        const {picture,user_id} =  jwt_decode(token)   \n\n        const userData = {\n             email: email,\n             username: displayName,\n             profileImage: picture\n        }\n        dispatch(googleSignup(userData,user_id,history))\n        }   \n      }) \n    .catch((err) => {\n        dispatch({\n            type: SET_ERRORS,\n            payload: err\n        })\n        console.log(err)\n    });\n\n}\n\n\nexport const authenticateGoogle = (history) => (dispatch) => {\n    dispatch({type: LOADING_UI})\n    const provider = new firebase.auth.GoogleAuthProvider()\n    let scope = [\"profile\", \"email\"]\n    dispatch(multiAuth(provider,scope,history))\n\n}\n\nexport const authenticateGithub = (history) => (dispatch) => {\n    dispatch({type: LOADING_UI})\n    const provider = new firebase.auth.GithubAuthProvider()\n    let scope = [\"repo\"]\n    // let email = \"email\"\n    dispatch(multiAuth(provider,scope,history))\n}\n\n\nexport const googleSignup = (userData,userId,history) => (dispatch) => {\n    dispatch({type: LOADING_USER})\n    axios.post(`/google/${userId}`,userData)\n    .then(res=> {\n       if(res.data){\n        window.location.href = \"/\"\n       }\n        // window.location.href = \"/\"\n    })\n    .catch((err) => console.log(err));\n\n}\n\nexport const loginUser = (userData, history) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios\n      .post(\"/login\", userData)\n      .then( () => {\n        dispatch(login(userData.email,userData.password))\n    \n      })\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data,\n        });\n      });\n  };\n  \n  export const signupUser = (newUserData, history) => (dispatch) => {\n   \n    dispatch({ type: LOADING_UI });\n    axios\n      .post(\"/signup\", newUserData)\n      .then( () => {\n        dispatch(login(newUserData.email,newUserData.password)); \n      })\n      .catch((err) => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data,\n        });\n      });\n  };\n\n  \nexport const setUser = (user) => {\n  return {\n    type: SET_USER,\n    payload: {\n      currentUser: user\n    }\n  }\n}  "]},"metadata":{},"sourceType":"module"}