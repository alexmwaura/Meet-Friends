{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/components/signInMethods/googleAuth.js\";\nimport React, { Component } from 'react';\nimport * as firebase from \"firebase\"; // import * as admin from \"firebase-admin\"\n\nimport Config from \"../../config/config\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport axios from \"axios\"; // import { authenticateGoogle } from \"../../redux/actions/userActions\"\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; // import serviceAccount from \"../../config/config.json\"\n\nfirebase.initializeApp(Config);\nvar provider = new firebase.auth.GoogleAuthProvider();\nprovider.addScope('profile');\nprovider.addScope('email');\n\nclass googleAuth extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      email: \"\",\n      userId: \"\",\n      errors: {}\n    };\n  }\n\n  handleLogin() {\n    firebase.auth().signInWithPopup(provider).then(result => {\n      if (result.credential) {\n        var token = result.credential.accessToken;\n        var user = result.user;\n        const {\n          displayName,\n          email,\n          uid\n        } = user;\n        console.log(displayName, email, uid);\n        this.setState({\n          username: displayName,\n          email: email,\n          userId: uid\n        });\n      }\n    }).then(() => {\n      const userData = {\n        email: this.state.email,\n        username: this.state.username\n      };\n      axios.post(`/google/${this.state.userId}`, userData).then(google => {\n        console.log(google);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleLogin(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"Google\");\n  }\n\n} // export default googleAuth\n\n\ngoogleAuth.propTypes = {\n  // authenticateGoogle: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n}); // const mapActionsToProps = {\n//     authenticateGoogle\n// }\n\n\nexport default connect(mapStateToProps)(googleAuth);","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/components/signInMethods/googleAuth.js"],"names":["React","Component","firebase","Config","IconButton","axios","PropTypes","connect","initializeApp","provider","auth","GoogleAuthProvider","addScope","googleAuth","constructor","state","username","email","userId","errors","handleLogin","signInWithPopup","then","result","credential","token","accessToken","user","displayName","uid","console","log","setState","userData","post","google","catch","err","render","propTypes","object","isRequired","UI","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AAEAL,QAAQ,CAACM,aAAT,CAAuBL,MAAvB;AACA,IAAIM,QAAQ,GAAG,IAAIP,QAAQ,CAACQ,IAAT,CAAcC,kBAAlB,EAAf;AACAF,QAAQ,CAACG,QAAT,CAAkB,SAAlB;AACAH,QAAQ,CAACG,QAAT,CAAkB,OAAlB;;AAMA,MAAMC,UAAN,SAAyBZ,SAAzB,CAAmC;AAE/Ba,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,MAAM,EAAC,EAHE;AAITC,MAAAA,MAAM,EAAE;AAJC,KAAb;AAMH;;AAEDC,EAAAA,WAAW,GAAE;AACTlB,IAAAA,QAAQ,CAACQ,IAAT,GAAgBW,eAAhB,CAAgCZ,QAAhC,EAA0Ca,IAA1C,CAAgDC,MAAD,IAAW;AACtD,UAAIA,MAAM,CAACC,UAAX,EAAuB;AACvB,YAAIC,KAAK,GAAGF,MAAM,CAACC,UAAP,CAAkBE,WAA9B;AACA,YAAIC,IAAI,GAAGJ,MAAM,CAACI,IAAlB;AACA,cAAO;AAACC,UAAAA,WAAD;AAAcX,UAAAA,KAAd;AAAoBY,UAAAA;AAApB,YAA2BF,IAAlC;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAyBX,KAAzB,EAA+BY,GAA/B;AACA,aAAKG,QAAL,CAAc;AAAChB,UAAAA,QAAQ,EAAEY,WAAX;AAAwBX,UAAAA,KAAK,EAAEA,KAA/B;AAAqCC,UAAAA,MAAM,EAAEW;AAA7C,SAAd;AACC;AACF,KARH,EASGP,IATH,CASQ,MAAK;AACT,YAAMW,QAAQ,GAAC;AACXhB,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KADP;AAEXD,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAFV,OAAf;AAIAX,MAAAA,KAAK,CAAC6B,IAAN,CAAY,WAAU,KAAKnB,KAAL,CAAWG,MAAO,EAAxC,EAA0Ce,QAA1C,EAAoDX,IAApD,CAAyDa,MAAM,IAAG;AAC/DL,QAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACH,OAFA;AAGD,KAjBH,EAkBGC,KAlBH,CAkBSC,GAAG,IAAG;AACTP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH,KApBH;AAqBH;;AAGDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAQ,MAAA,OAAO,EAAE,MAAK,KAAKlB,WAAL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH;;AA3C8B,C,CA8CnC;;;AAEAP,UAAU,CAAC0B,SAAX,GAAuB;AACnB;AACAZ,EAAAA,IAAI,EAAErB,SAAS,CAACkC,MAAV,CAAiBC,UAFJ;AAGnBC,EAAAA,EAAE,EAAEpC,SAAS,CAACkC,MAAV,CAAiBC;AAHF,CAAvB;;AAQA,MAAME,eAAe,GAAI5B,KAAD,KAAY;AAChCY,EAAAA,IAAI,EAAEZ,KAAK,CAACY,IADoB;AAEhCe,EAAAA,EAAE,EAAE3B,KAAK,CAAC2B;AAFsB,CAAZ,CAAxB,C,CAKA;AACA;AACA;;;AAEA,eAAenC,OAAO,CAACoC,eAAD,CAAP,CAAyB9B,UAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport * as firebase from \"firebase\"\n// import * as admin from \"firebase-admin\"\nimport Config from \"../../config/config\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport axios from \"axios\"\n// import { authenticateGoogle } from \"../../redux/actions/userActions\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\n// import serviceAccount from \"../../config/config.json\"\n\nfirebase.initializeApp(Config)\nvar provider = new firebase.auth.GoogleAuthProvider()\nprovider.addScope('profile');\nprovider.addScope('email');\n\n\n\n\n\nclass googleAuth extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            username: \"\",\n            email: \"\",\n            userId:\"\",\n            errors: {}\n        }\n    }\n\n    handleLogin(){\n        firebase.auth().signInWithPopup(provider).then((result) =>{\n            if (result.credential) {\n            var token = result.credential.accessToken;\n            var user = result.user;\n            const  {displayName, email,uid} = user\n            console.log(displayName, email,uid)\n            this.setState({username: displayName, email: email,userId: uid})\n            }     \n          })\n          .then(()=> {\n            const userData={\n                email: this.state.email,\n                username: this.state.username\n                }\n            axios.post(`/google/${this.state.userId}`,userData).then(google=> {\n               console.log(google)\n           })\n          })\n          .catch(err=> {\n              console.log(err)\n          })\n    }\n\n\n    render() {\n        return (\n            <button onClick={()=> this.handleLogin()}>\n               Google \n            </button>\n        )\n    }\n}\n\n// export default googleAuth\n\ngoogleAuth.propTypes = {\n    // authenticateGoogle: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired\n\n}\n\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n})\n\n// const mapActionsToProps = {\n//     authenticateGoogle\n// }\n\nexport default connect(mapStateToProps)(googleAuth)"]},"metadata":{},"sourceType":"module"}