{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/components/google/googleAuth.js\";\nimport React, { Component } from 'react';\nimport * as firebase from \"firebase\";\nimport Config from \"../../config/config\";\nimport IconButton from \"@material-ui/core/IconButton\";\nfirebase.initializeApp(Config);\nvar provider = new firebase.auth.GoogleAuthProvider();\nprovider.addScope('profile');\nprovider.addScope('email');\n\nclass googleAuth extends Component {\n  handleLogin() {\n    firebase.auth().signInWithPopup(provider);\n    firebase.auth().getRedirectResult().then(function (result) {\n      if (result.credential) {\n        // This gives you a Google Access Token.\n        var token = result.credential.accessToken;\n        console.log(result.credential);\n      }\n\n      var user = result.user;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleLogin(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, \"Google\");\n  }\n\n}\n\nexport default googleAuth;","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/components/google/googleAuth.js"],"names":["React","Component","firebase","Config","IconButton","initializeApp","provider","auth","GoogleAuthProvider","addScope","googleAuth","handleLogin","signInWithPopup","getRedirectResult","then","result","credential","token","accessToken","console","log","user","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAGAF,QAAQ,CAACG,aAAT,CAAuBF,MAAvB;AACA,IAAIG,QAAQ,GAAG,IAAIJ,QAAQ,CAACK,IAAT,CAAcC,kBAAlB,EAAf;AACAF,QAAQ,CAACG,QAAT,CAAkB,SAAlB;AACAH,QAAQ,CAACG,QAAT,CAAkB,OAAlB;;AAIA,MAAMC,UAAN,SAAyBT,SAAzB,CAAmC;AAE/BU,EAAAA,WAAW,GAAE;AACTT,IAAAA,QAAQ,CAACK,IAAT,GAAgBK,eAAhB,CAAgCN,QAAhC;AACAJ,IAAAA,QAAQ,CAACK,IAAT,GAAgBM,iBAAhB,GAAoCC,IAApC,CAAyC,UAASC,MAAT,EAAiB;AACtD,UAAIA,MAAM,CAACC,UAAX,EAAuB;AACrB;AACA,YAAIC,KAAK,GAAGF,MAAM,CAACC,UAAP,CAAkBE,WAA9B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACC,UAAnB;AACD;;AACD,UAAIK,IAAI,GAAGN,MAAM,CAACM,IAAlB;AACD,KAPH;AAQH;;AAGDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAQ,MAAA,OAAO,EAAE,MAAK,KAAKX,WAAL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH;;AArB8B;;AAwBnC,eAAeD,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport * as firebase from \"firebase\"\nimport Config from \"../../config/config\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\n\nfirebase.initializeApp(Config)\nvar provider = new firebase.auth.GoogleAuthProvider()\nprovider.addScope('profile');\nprovider.addScope('email');\n\n\n\nclass googleAuth extends Component {\n\n    handleLogin(){\n        firebase.auth().signInWithPopup(provider);\n        firebase.auth().getRedirectResult().then(function(result) {\n            if (result.credential) {\n              // This gives you a Google Access Token.\n              var token = result.credential.accessToken;\n              console.log(result.credential)\n            }\n            var user = result.user;\n          });\n    }\n\n\n    render() {\n        return (\n            <button onClick={()=> this.handleLogin()}>\n               Google \n            </button>\n        )\n    }\n}\n\nexport default googleAuth\n"]},"metadata":{},"sourceType":"module"}