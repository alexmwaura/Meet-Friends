{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport login from './pages/login/login';\nimport { Provider, connect } from \"react-redux\";\nimport AuthRoute from \"./Auth/AuthRoute\";\nimport store from \"./redux/store/store\";\nimport firebase from \"./Auth/firebase\";\nimport * as serviceWorker from './serviceWorker';\nimport { SET_AUTHENTICATED, SET_UNAUTHENTICATED } from './redux/store/types';\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { setAuthenticatedUser } from './redux/actions/userActions';\n\nclass Root extends Component {\n  render() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.props.setAuthenticatedUser(user);\n        const {\n          xa\n        } = user;\n        console.log(user);\n        store.dispatch({\n          type: SET_AUTHENTICATED,\n          payload: user\n        });\n        this.props.history.push(\"/\");\n        const token = `Bearer ${xa}`;\n\n        if (jwt_decode(xa)['exp'] * 1000 < Date.now()) {\n          store.dispatch({\n            type: SET_UNAUTHENTICATED\n          });\n          this.props.history.push(\"/login\");\n        }\n\n        axios.defaults.headers.common[\"Authorization\"] = token;\n      } else {\n        // store.dispatch({type: SET_UNAUTHENTICATED})\n        this.props.history.push('/login');\n      }\n    });\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(AuthRoute, {\n      exact: true,\n      path: \"/login\",\n      component: login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(AuthRoute, {\n      exact: true,\n      path: \"/\",\n      component: App,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    })));\n  }\n\n}\n\nconst RootWithAuth = withRouter(connect(null, {\n  setAuthenticatedUser\n})(Root));\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(RootWithAuth, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 4\n  }\n}))), document.getElementById('root'));\nserviceWorker.register();","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/index.js"],"names":["React","Component","ReactDOM","App","BrowserRouter","Router","Route","Switch","withRouter","login","Provider","connect","AuthRoute","store","firebase","serviceWorker","SET_AUTHENTICATED","SET_UNAUTHENTICATED","axios","jwt_decode","setAuthenticatedUser","Root","render","auth","onAuthStateChanged","user","props","xa","console","log","dispatch","type","payload","history","push","token","Date","now","defaults","headers","common","RootWithAuth","document","getElementById","register"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport login from './pages/login/login'\nimport {Provider,connect} from \"react-redux\"\nimport AuthRoute from  \"./Auth/AuthRoute\"\nimport store from \"./redux/store/store\"\nimport firebase from \"./Auth/firebase\"\nimport * as serviceWorker from './serviceWorker';\nimport { SET_AUTHENTICATED, SET_UNAUTHENTICATED } from './redux/store/types';\nimport axios from \"axios\"\nimport jwt_decode from \"jwt-decode\"\nimport {setAuthenticatedUser} from './redux/actions/userActions'\n\nclass Root extends Component {\n\n  render(){\n    firebase.auth().onAuthStateChanged(user=> {\n      if(user){\n        this.props.setAuthenticatedUser(user)\n        const {xa} = user\n        console.log(user)\n        store.dispatch({type: SET_AUTHENTICATED,\n        payload: user\n        })\n        this.props.history.push(\"/\")\n        const token = `Bearer ${xa}`\n       if(jwt_decode(xa)['exp'] * 1000 < Date.now()){\n         store.dispatch({type: SET_UNAUTHENTICATED})\n         this.props.history.push(\"/login\")\n       }\n        axios.defaults.headers.common[\"Authorization\"] = token\n      }\n      else{\n      // store.dispatch({type: SET_UNAUTHENTICATED})\n      this.props.history.push('/login')\n      }\n      \n    })\n\n\n    return(\n\n      <Router>\n         <Switch>\n           <AuthRoute exact path=\"/login\" component={login} />\n           <AuthRoute exact path=\"/\" component={App} />\n         </Switch>\n       </Router>\n      \n    )\n  }\n}\n\nconst RootWithAuth = withRouter(connect(null, {setAuthenticatedUser})(Root))\n\n\nReactDOM.render(\n  <Provider store={store}>\n <Router>\n   <RootWithAuth/>\n </Router>\n </Provider>,\n\n  document.getElementById('root')\n);\nserviceWorker.register()\n\n"]},"metadata":{},"sourceType":"module"}