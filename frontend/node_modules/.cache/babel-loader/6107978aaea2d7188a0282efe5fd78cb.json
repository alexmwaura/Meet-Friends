{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/components/signInMethods/googleAuth.js\";\nimport React, { Component } from 'react';\nimport { authenticateGoogle } from \"../../redux/actions/userActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport GoogleLogin from 'react-google-login';\n\nclass googleAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogin = event => {\n      event.preventDefault();\n      this.props.authenticateGoogle();\n    };\n  }\n\n  componentWillReceiveProps(nxtProps) {\n    if (nxtProps.UI.errors) {\n      this.setState({\n        errors: nxtProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Button //   color=\"secondary\"\n    , {\n      onClick: this.handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fab fa-google\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 2\n      }\n    }));\n  }\n\n} // export default googleAuth\n\n\ngoogleAuth.propTypes = {\n  authenticateGoogle: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  authenticateGoogle\n};\nexport default connect(mapStateToProps, mapActionsToProps)(googleAuth);","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/components/signInMethods/googleAuth.js"],"names":["React","Component","authenticateGoogle","PropTypes","connect","Button","GoogleLogin","googleAuth","handleLogin","event","preventDefault","props","componentWillReceiveProps","nxtProps","UI","errors","setState","render","propTypes","func","isRequired","mapStateToProps","state","user","mapActionsToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,iCAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AAOA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAO/BO,WAP+B,GAOjBC,KAAD,IAAU;AACnBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,KAAL,CAAWT,kBAAX;AACH,KAV8B;AAAA;;AAC/BU,EAAAA,yBAAyB,CAACC,QAAD,EAAU;AAC/B,QAAGA,QAAQ,CAACC,EAAT,CAAYC,MAAf,EAAsB;AAClB,WAAKC,QAAL,CAAc;AAACD,QAAAA,MAAM,EAAEF,QAAQ,CAACC,EAAT,CAAYC;AAArB,OAAd;AACH;AACJ;;AAQDE,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,MAAD,CACA;AADA;AAEA,MAAA,OAAO,EAAE,KAAKT,WAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGX;AAAa,MAAA,SAAS,EAAC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHW,CADJ;AAWH;;AAzB8B,C,CA4BnC;;;AAEAD,UAAU,CAACW,SAAX,GAAuB;AACnBhB,EAAAA,kBAAkB,EAAEC,SAAS,CAACgB,IAAV,CAAeC;AADhB,CAAvB;;AAMA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,IAAI,EAAED,KAAK,CAACC,IADoB;AAEhCT,EAAAA,EAAE,EAAEQ,KAAK,CAACR;AAFsB,CAAZ,CAAxB;;AAKA,MAAMU,iBAAiB,GAAG;AACtBtB,EAAAA;AADsB,CAA1B;AAIA,eAAeE,OAAO,CAACiB,eAAD,EAAkBG,iBAAlB,CAAP,CAA4CjB,UAA5C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { authenticateGoogle } from \"../../redux/actions/userActions\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport Button from \"@material-ui/core/Button\";\nimport GoogleLogin from 'react-google-login';\n\n\n\n\n\n\nclass googleAuth extends Component {\n    componentWillReceiveProps(nxtProps){\n        if(nxtProps.UI.errors){\n            this.setState({errors: nxtProps.UI.errors})\n        }\n    }\n\n    handleLogin =(event)=> {\n        event.preventDefault()\n        this.props.authenticateGoogle()\n    }\n\n\n    render() {\n        return (\n            <Button\n            //   color=\"secondary\"\n            onClick={this.handleLogin}>\n <          i className=\"fab fa-google\"></i>\n\n\n            </Button\n            \n            >\n        )\n    }\n}\n\n// export default googleAuth\n\ngoogleAuth.propTypes = {\n    authenticateGoogle: PropTypes.func.isRequired,\n\n}\n\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n})\n\nconst mapActionsToProps = {\n    authenticateGoogle\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(googleAuth)"]},"metadata":{},"sourceType":"module"}