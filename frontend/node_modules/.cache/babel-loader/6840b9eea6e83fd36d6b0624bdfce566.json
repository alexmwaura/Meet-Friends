{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/components/signInMethods/githubAuth.js\";\nimport React, { Component } from 'react';\nimport { authenticateGithub } from \"../../redux/actions/userActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Typography from \"@material-ui/core/Typography\";\n\nclass githubAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogin = event => {\n      event.preventDefault();\n      this.props.authenticateGithub();\n    };\n  }\n\n  componentWillReceiveProps(nxtProps) {\n    if (nxtProps.UI.errors) {\n      this.setState({\n        errors: nxtProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"default\",\n      onClick: this.handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GitHubIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 35\n      }\n    }, \"GitHub\"));\n  }\n\n} // export default githubAuth\n\n\ngithubAuth.propTypes = {\n  authenticateGithub: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  authenticateGithub\n};\nexport default connect(mapStateToProps, mapActionsToProps)(githubAuth);","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/components/signInMethods/githubAuth.js"],"names":["React","Component","authenticateGithub","PropTypes","connect","Button","GitHubIcon","Typography","githubAuth","handleLogin","event","preventDefault","props","componentWillReceiveProps","nxtProps","UI","errors","setState","render","propTypes","func","isRequired","mapStateToProps","state","user","mapActionsToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,iCAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAMA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAO/BQ,WAP+B,GAOhBC,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,KAAL,CAAWV,kBAAX;AACH,KAV8B;AAAA;;AAC/BW,EAAAA,yBAAyB,CAACC,QAAD,EAAW;AAChC,QAAIA,QAAQ,CAACC,EAAT,CAAYC,MAAhB,EAAwB;AACpB,WAAKC,QAAL,CAAc;AAAED,QAAAA,MAAM,EAAEF,QAAQ,CAACC,EAAT,CAAYC;AAAtB,OAAd;AACH;AACJ;;AAQDE,EAAAA,MAAM,GAAG;AACL,wBAEQ,oBAAC,MAAD;AACI,MAAA,OAAO,EAAC,UADZ;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,OAAO,EAAE,KAAKT,WAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAIkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJlB,CAFR;AAaH;;AA3B8B,C,CA8BnC;;;AAEAD,UAAU,CAACW,SAAX,GAAuB;AACnBjB,EAAAA,kBAAkB,EAAEC,SAAS,CAACiB,IAAV,CAAeC;AADhB,CAAvB;;AAMA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,IAAI,EAAED,KAAK,CAACC,IADoB;AAEhCT,EAAAA,EAAE,EAAEQ,KAAK,CAACR;AAFsB,CAAZ,CAAxB;;AAKA,MAAMU,iBAAiB,GAAG;AACtBvB,EAAAA;AADsB,CAA1B;AAIA,eAAeE,OAAO,CAACkB,eAAD,EAAkBG,iBAAlB,CAAP,CAA4CjB,UAA5C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { authenticateGithub } from \"../../redux/actions/userActions\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport Button from \"@material-ui/core/Button\";\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Typography from \"@material-ui/core/Typography\";\n\n\n\n\n\nclass githubAuth extends Component {\n    componentWillReceiveProps(nxtProps) {\n        if (nxtProps.UI.errors) {\n            this.setState({ errors: nxtProps.UI.errors })\n        }\n    }\n\n    handleLogin = (event) => {\n        event.preventDefault()\n        this.props.authenticateGithub()\n    }\n\n\n    render() {\n        return (\n\n                <Button\n                    variant=\"outlined\"\n                    color=\"default\"\n                    onClick={this.handleLogin}>\n                    <GitHubIcon /><span>GitHub</span>\n\n                </Button>\n\n            \n\n        )\n    }\n}\n\n// export default githubAuth\n\ngithubAuth.propTypes = {\n    authenticateGithub: PropTypes.func.isRequired,\n\n}\n\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n})\n\nconst mapActionsToProps = {\n    authenticateGithub\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(githubAuth)"]},"metadata":{},"sourceType":"module"}