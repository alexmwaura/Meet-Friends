{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/pages/login/register.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Google from \"../../components/signInMethods/googleAuth\";\nimport Github from \"../../components/signInMethods/githubAuth\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { signupUser } from \"../../redux/actions/userActions\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport themeObject from \"../../theme/theme\";\nimport Link from \"@material-ui/core/Link\";\nimport login from './login';\nconst theme = createMuiTheme(themeObject);\n\nclass register extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const userData = {\n        email: this.state.email,\n        username: this.state.username,\n        password: this.state.password,\n        confirmPassword: this.state.email\n      };\n      this.props.loginUser(userData);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      UI: {\n        loading\n      }\n    } = this.props;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }\n    }, errors.message && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 61\n      }\n    }, errors.message), /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      helperText: errors.email,\n      error: errors.email ? true : false,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 41\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 44\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"username\",\n      name: \"username\",\n      type: \"username\",\n      label: \"Username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      helperText: errors.username,\n      error: errors.username ? true : false,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 41\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 44\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      helperText: errors.password,\n      error: errors.password ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 44\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"confirmPassword\",\n      name: \"confirmPassword\",\n      type: \"confirmPassword\",\n      label: \"Confirm Password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      helperText: errors.confirmPassword,\n      error: errors.confirmPassword ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 42\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 41\n      }\n    }), errors.general && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 61\n      }\n    }, errors.general), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      id: \"button\",\n      color: \"primary\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 41\n      }\n    }, \"Login\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 30,\n      disableShrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 14\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 50\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 41\n      }\n    }, \" Already have an account ? Login \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      component: login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 94\n      }\n    }, \"here\"), \" \"))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"button\",\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Google, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Github, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 41\n      }\n    }))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nlogin.propTypes = {\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  signupUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  signupUser\n})(register);","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/pages/login/register.js"],"names":["React","Component","TextField","Google","Github","Button","Grid","signupUser","CircularProgress","Typography","PropTypes","connect","MuiThemeProvider","createMuiTheme","themeObject","Link","login","theme","register","constructor","handleSubmit","event","preventDefault","setState","loading","userData","email","state","username","password","confirmPassword","props","loginUser","handleChange","target","name","value","errors","componentWillReceiveProps","nextProps","UI","render","message","general","propTypes","user","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Google from \"../../components/signInMethods/googleAuth\"\nimport Github from \"../../components/signInMethods/githubAuth\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { signupUser } from \"../../redux/actions/userActions\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport themeObject from \"../../theme/theme\"\nimport Link from \"@material-ui/core/Link\"\nimport login from './login'\n\n\nconst theme = createMuiTheme(themeObject);\n\nclass register extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            username: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errors: {},\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.UI.errors) {\n            this.setState({ errors: nextProps.UI.errors });\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({\n            loading: true,\n        });\n        const userData = {\n            email: this.state.email,\n            username: this.state.username,\n            password: this.state.password,\n            confirmPassword: this.state.email\n\n        };\n\n        this.props.loginUser(userData);\n    };\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    render() {\n        const {\n            UI: { loading },\n        } = this.props;\n        const { errors } = this.state;\n        return (\n            <MuiThemeProvider theme={theme}>\n                <div className=\"login\">\n                    <Grid container direction=\"row\">\n                        <Grid item xs={12} md={3} />\n                        <Grid item xs={12} md={6}>\n                            <Grid container direction=\"column\">\n                                <Grid item xs={12} md={3} />\n                                <Grid item xs={12} md={3} >\n                                    <form noValidate onSubmit={this.handleSubmit} className=\"\" >\n\n                                        {errors.message && (<Typography variant=\"body2\">{errors.message}</Typography>)}\n\n                                        <TextField id=\"email\" name=\"email\" type=\"email\" label=\"Email\"\n                                            value={this.state.email}\n                                            onChange={this.handleChange}\n                                            helperText={errors.email}\n                                            error={errors.email ? true : false}\n                                            fullWidth\n                                        /> <br />\n                                        <TextField id=\"username\" name=\"username\" type=\"username\" label=\"Username\"\n                                            value={this.state.username}\n                                            onChange={this.handleChange}\n                                            helperText={errors.username}\n                                            error={errors.username ? true : false}\n                                            fullWidth\n                                        /> <br />\n                                        <TextField id=\"password\" name=\"password\" type=\"password\" label=\"Password\"\n                                            value={this.state.password}\n                                            onChange={this.handleChange}\n                                            helperText={errors.password}\n                                            error={errors.password ? true : false}\n\n                                        /> <br /> \n                                          <TextField id=\"confirmPassword\" name=\"confirmPassword\" type=\"confirmPassword\" label=\"Confirm Password\"\n                                            value={this.state.confirmPassword}\n                                            onChange={this.handleChange}\n                                            helperText={errors.confirmPassword}\n                                            error={errors.confirmPassword ? true : false}\n\n                                        />\n                                         <br />\n                                        <br />\n                                        {errors.general && (<Typography variant=\"body2\">{errors.general}</Typography>)}\n                                        <Button type=\"submit\" variant=\"contained\" id=\"button\" color=\"primary\" disabled={loading}>Login\n{loading && (<CircularProgress size={30} disableShrink />)}\n                                        </Button><br />\n                                        <small className=\"\"> Already have an account ? Login <Link to=\"/login\" component={login}>here</Link> </small>\n                                    </form>\n                                </Grid>\n                                <hr />\n                                <Grid item xs={12} md={6}>\n                                    {/* Sign in with: <br/> */}\n                                    <Typography variant=\"button\" className=\"button\">\n                                        <Google />\n                                        <Github />\n\n\n                                    </Typography>\n\n\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item xs={12} md={3} />\n\n                    </Grid>\n\n                </div >\n            </MuiThemeProvider>\n        )\n    }\n}\n\nlogin.propTypes = {\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n    signupUser: PropTypes.func.isRequired,\n\n\n}\n\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n})\n\nexport default connect(mapStateToProps, { signupUser })(register)\n\n"]},"metadata":{},"sourceType":"module"}