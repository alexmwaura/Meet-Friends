{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/components/channels/Channels.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Menu, Icon, Modal, Form, Input, Button } from \"semantic-ui-react\";\nimport firebase from \"../../Auth/firebase\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\nimport { setCurrentChannel } from \"../../redux/actions/dataActions\";\nimport { connect } from \"react-redux\";\n\nclass Channels extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channels: [],\n      channelName: \"\",\n      channelDetails: \"\",\n      modal: false,\n      channelsRef: firebase.database().ref('channels'),\n      firstLoad: true\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        modal: false\n      });\n    };\n\n    this.openModal = () => {\n      this.setState({\n        modal: true\n      });\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.addListeners = () => {\n      let loadedChannels = [];\n      this.state.channelsRef.on(\"child_added\", snap => {\n        loadedChannels.push(snap.val());\n        this.setState({\n          channels: loadedChannels\n        }, () => this.setFirstChannel());\n      });\n    };\n\n    this.setFirstChannel = () => {};\n\n    this.addChannel = () => {\n      const {\n        channelsRef,\n        channelName,\n        channelDetails,\n        user\n      } = this.state;\n      const {\n        username,\n        email,\n        userId,\n        profileImage\n      } = this.props.authenticatedUser;\n      const key = channelsRef.push().key;\n      const newChannel = {\n        id: key,\n        name: channelName,\n        details: channelDetails,\n        createdBy: {\n          name: username,\n          email: email,\n          avatar: profileImage,\n          userId: userId\n        }\n      };\n      channelsRef.child(key).update(newChannel).then(() => {\n        this.setState({\n          channelName: \"\",\n          channelDetails: \"\"\n        });\n        this.closeModal();\n        console.log(\"Channel added\");\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.displayChannels = channels => channels.length > 0 && channels.map(channel => /*#__PURE__*/React.createElement(Menu.Item, {\n      key: channel.id,\n      onClick: () => this.changeChannel(channel),\n      name: channel.name,\n      style: {\n        opacity: 0.7,\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"# \", channel.name));\n\n    this.handleSubmit = event => {\n      if (this.isformValid(this.state)) {\n        this.addChannel();\n      }\n    };\n\n    this.isformValid = ({\n      channelName,\n      channelDetails\n    }) => channelName && channelDetails;\n\n    this.changeChannel = channel => {\n      this.props.setCurrentChannel(channel);\n    };\n  }\n\n  componentDidMount() {\n    this.addListeners();\n  }\n\n  render() {\n    const {\n      modal,\n      channels\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Menu, {\n      style: {\n        paddingBottom: \"2em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"exchange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 31\n      }\n    }), \" CHANNELS \"), \" \", \" \", \"(\", channels.length, \") \", /*#__PURE__*/React.createElement(Icon, {\n      name: \"add\",\n      className: \"add\",\n      onClick: this.openModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 36\n      }\n    })), this.displayChannels(channels)), /*#__PURE__*/React.createElement(Modal, {\n      basic: true,\n      open: modal,\n      onClose: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, this.props.authenticatedUser ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, \"Add a Channel \"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      fluid: true,\n      label: \"Name of channel\",\n      name: \"channelName\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      fluid: true,\n      label: \"About the channel\",\n      name: \"channelDetails\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      inverted: true,\n      color: \"green\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }), \" Add\"), /*#__PURE__*/React.createElement(Button, {\n      inverted: true,\n      color: \"red\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"remove\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 37\n      }\n    }), \" Cancel\"))) : /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      size: \"huge\",\n      content: \"Please Wait authenticating...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }))));\n  }\n\n}\n\nexport default connect(null, {\n  setCurrentChannel\n})(Channels);","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/components/channels/Channels.js"],"names":["React","Component","Fragment","Menu","Icon","Modal","Form","Input","Button","firebase","Loader","Dimmer","setCurrentChannel","connect","Channels","state","channels","channelName","channelDetails","modal","channelsRef","database","ref","firstLoad","closeModal","setState","openModal","handleChange","event","preventDefault","target","name","value","addListeners","loadedChannels","on","snap","push","val","setFirstChannel","addChannel","user","username","email","userId","profileImage","props","authenticatedUser","key","newChannel","id","details","createdBy","avatar","child","update","then","console","log","catch","error","displayChannels","length","map","channel","changeChannel","opacity","textAlign","handleSubmit","isformValid","componentDidMount","render","paddingBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,mBAAvD;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,mBAA/B;AACA,SAAQC,iBAAR,QAAgC,iCAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAKA,MAAMC,QAAN,SAAuBb,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7Bc,KAD6B,GACrB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,cAAc,EAAE,EAHZ;AAIJC,MAAAA,KAAK,EAAE,KAJH;AAKJC,MAAAA,WAAW,EAAEX,QAAQ,CAACY,QAAT,GAAoBC,GAApB,CAAwB,UAAxB,CALT;AAMJC,MAAAA,SAAS,EAAE;AANP,KADqB;;AAAA,SAU7BC,UAV6B,GAUhB,MAAM;AAAE,WAAKC,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE;AAAT,OAAd;AAAiC,KAVzB;;AAAA,SAY7BO,SAZ6B,GAYjB,MAAM;AAAE,WAAKD,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE;AAAT,OAAd;AAAgC,KAZvB;;AAAA,SAc7BQ,YAd6B,GAcbC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKJ,QAAL,CAAc;AAAE,SAACG,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAApC,OAAd;AACH,KAjB4B;;AAAA,SAoB7BC,YApB6B,GAoBd,MAAM;AACjB,UAAIC,cAAc,GAAG,EAArB;AACA,WAAKnB,KAAL,CAAWK,WAAX,CAAuBe,EAAvB,CAA0B,aAA1B,EAAyCC,IAAI,IAAI;AAC7CF,QAAAA,cAAc,CAACG,IAAf,CAAoBD,IAAI,CAACE,GAAL,EAApB;AACA,aAAKb,QAAL,CAAc;AAAET,UAAAA,QAAQ,EAAEkB;AAAZ,SAAd,EAA4C,MAAK,KAAKK,eAAL,EAAjD;AACH,OAHD;AAIH,KA1B4B;;AAAA,SA4B7BA,eA5B6B,GA4BZ,MAAM,CAEtB,CA9B4B;;AAAA,SAgC7BC,UAhC6B,GAgChB,MAAM;AACf,YAAM;AAAEpB,QAAAA,WAAF;AAAeH,QAAAA,WAAf;AAA4BC,QAAAA,cAA5B;AAA4CuB,QAAAA;AAA5C,UAAqD,KAAK1B,KAAhE;AACA,YAAM;AAAE2B,QAAAA,QAAF;AAAYC,QAAAA,KAAZ;AAAmBC,QAAAA,MAAnB;AAA2BC,QAAAA;AAA3B,UAA4C,KAAKC,KAAL,CAAWC,iBAA7D;AACA,YAAMC,GAAG,GAAG5B,WAAW,CAACiB,IAAZ,GAAmBW,GAA/B;AACA,YAAMC,UAAU,GAAG;AACfC,QAAAA,EAAE,EAAEF,GADW;AAEfjB,QAAAA,IAAI,EAAEd,WAFS;AAGfkC,QAAAA,OAAO,EAAEjC,cAHM;AAIfkC,QAAAA,SAAS,EAAE;AACPrB,UAAAA,IAAI,EAAEW,QADC;AAEPC,UAAAA,KAAK,EAAEA,KAFA;AAGPU,UAAAA,MAAM,EAAER,YAHD;AAIPD,UAAAA,MAAM,EAAEA;AAJD;AAJI,OAAnB;AAWAxB,MAAAA,WAAW,CAACkC,KAAZ,CAAkBN,GAAlB,EAAuBO,MAAvB,CAA8BN,UAA9B,EAA0CO,IAA1C,CAA+C,MAAM;AACjD,aAAK/B,QAAL,CAAc;AAAER,UAAAA,WAAW,EAAE,EAAf;AAAmBC,UAAAA,cAAc,EAAE;AAAnC,SAAd;AACA,aAAKM,UAAL;AACAiC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,OAJD,EAIGC,KAJH,CAIUC,KAAD,IAAW;AAChBH,QAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,OAND;AAOH,KAtD4B;;AAAA,SAwD7BC,eAxD6B,GAwDV7C,QAAD,IACdA,QAAQ,CAAC8C,MAAT,GAAkB,CAAlB,IAAuB9C,QAAQ,CAAC+C,GAAT,CAAaC,OAAO,iBACvC,oBAAC,IAAD,CAAM,IAAN;AACA,MAAA,GAAG,EAAEA,OAAO,CAACd,EADb;AAEA,MAAA,OAAO,EAAE,MAAM,KAAKe,aAAL,CAAmBD,OAAnB,CAFf;AAGA,MAAA,IAAI,EAAEA,OAAO,CAACjC,IAHd;AAIA,MAAA,KAAK,EAAE;AAACmC,QAAAA,OAAO,EAAE,GAAV;AAAcC,QAAAA,SAAS,EAAC;AAAxB,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAMOH,OAAO,CAACjC,IANf,CADmB,CAzDE;;AAAA,SAqE7BqC,YArE6B,GAqEbxC,KAAD,IAAW;AACtB,UAAI,KAAKyC,WAAL,CAAiB,KAAKtD,KAAtB,CAAJ,EAAkC;AAC9B,aAAKyB,UAAL;AACH;AACJ,KAzE4B;;AAAA,SA2E7B6B,WA3E6B,GA2Ef,CAAC;AAAEpD,MAAAA,WAAF;AAAeC,MAAAA;AAAf,KAAD,KAAqCD,WAAW,IAAIC,cA3ErC;;AAAA,SA6E7B+C,aA7E6B,GA6EbD,OAAO,IAAI;AACvB,WAAKlB,KAAL,CAAWlC,iBAAX,CAA6BoD,OAA7B;AACH,KA/E4B;AAAA;;AAkB7BM,EAAAA,iBAAiB,GAAG;AAAC,SAAKrC,YAAL;AAAoB;;AAgEzCsC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEpD,MAAAA,KAAF;AAASH,MAAAA;AAAT,QAAsB,KAAKD,KAAjC;AACA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEyD,QAAAA,aAAa,EAAE;AAAjB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAACL,QAAAA,SAAS,EAAC;AAAX,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAM,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,eADJ,OACqD,GADrD,OAEHnD,QAAQ,CAAC8C,MAFN,qBAEe,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,KAAX;AAAiB,MAAA,SAAS,EAAC,KAA3B;AAAiC,MAAA,OAAO,EAAE,KAAKpC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFf,CADJ,EAMK,KAAKmC,eAAL,CAAqB7C,QAArB,CANL,CADJ,eAUI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAEG,KAAnB;AAA0B,MAAA,OAAO,EAAE,KAAKK,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKsB,KAAL,CAAWC,iBAAX,gBACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKqB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,KAAK,EAAC,iBAAnB;AAAqC,MAAA,IAAI,EAAC,aAA1C;AAAwD,MAAA,QAAQ,EAAE,KAAKzC,YAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAOI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,KAAK,EAAC,mBAAnB;AAAuC,MAAA,IAAI,EAAC,gBAA5C;AAA6D,MAAA,QAAQ,EAAE,KAAKA,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CADJ,CAFJ,eAeI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAA+B,MAAA,OAAO,EAAE,KAAKyC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,SADJ,eAII,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAC,KAAvB;AAA6B,MAAA,OAAO,EAAE,KAAK5C,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,YAJJ,CAfJ,CADH,gBA0BO,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAC,+BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CA3BZ,CAVJ,CADJ;AA+CH;;AAnI4B;;AAuIjC,eAAeX,OAAO,CAAC,IAAD,EAAM;AAACD,EAAAA;AAAD,CAAN,CAAP,CAAkCE,QAAlC,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { Menu, Icon, Modal, Form, Input, Button } from \"semantic-ui-react\"\nimport firebase from \"../../Auth/firebase\"\nimport { Loader, Dimmer } from \"semantic-ui-react\";\nimport {setCurrentChannel} from \"../../redux/actions/dataActions\"\nimport {connect} from \"react-redux\"\n\n\n\n\nclass Channels extends Component {\n    state = {\n        channels: [],\n        channelName: \"\",\n        channelDetails: \"\",\n        modal: false,\n        channelsRef: firebase.database().ref('channels'),\n        firstLoad: true \n\n    }\n    closeModal = () => { this.setState({ modal: false }) }\n\n    openModal = () => { this.setState({ modal: true }) }\n\n    handleChange = (event) => {\n        event.preventDefault()\n        this.setState({ [event.target.name]: event.target.value })\n    }\n    componentDidMount() {this.addListeners()}\n\n    addListeners = () => {\n        let loadedChannels = []\n        this.state.channelsRef.on(\"child_added\", snap => {\n            loadedChannels.push(snap.val())\n            this.setState({ channels: loadedChannels }, ()=> this.setFirstChannel())\n        })\n    }\n\n    setFirstChannel =() => {\n\n    }\n\n    addChannel = () => {\n        const { channelsRef, channelName, channelDetails, user } = this.state\n        const { username, email, userId, profileImage } = this.props.authenticatedUser\n        const key = channelsRef.push().key\n        const newChannel = {\n            id: key,\n            name: channelName,\n            details: channelDetails,\n            createdBy: {\n                name: username,\n                email: email,\n                avatar: profileImage,\n                userId: userId\n            }\n        }\n        channelsRef.child(key).update(newChannel).then(() => {\n            this.setState({ channelName: \"\", channelDetails: \"\" })\n            this.closeModal()\n            console.log(\"Channel added\")\n        }).catch((error) => {\n            console.error(error)\n        })\n    }\n\n    displayChannels = (channels) => (\n        channels.length > 0 && channels.map(channel => (\n            <Menu.Item \n            key={channel.id}\n            onClick={() => this.changeChannel(channel)}\n            name={channel.name}\n            style={{opacity: 0.7,textAlign:'center'}}\n            >\n                # {channel.name}\n            </Menu.Item>\n        ))\n    )\n\n    handleSubmit = (event) => {\n        if (this.isformValid(this.state)) {\n            this.addChannel()\n        }\n    }\n\n    isformValid = ({ channelName, channelDetails }) => channelName && channelDetails;\n\n    changeChannel = channel => {\n        this.props.setCurrentChannel(channel)\n    }\n\n\n    render() {\n        const { modal, channels } = this.state\n        return (\n            <Fragment>\n                <Menu.Menu style={{ paddingBottom: \"2em\" }}>\n                    <Menu.Item style={{textAlign:'center'}}>\n                        <span><Icon name=\"exchange\" /> CHANNELS </span> {\" \"}\n               ({channels.length}) <Icon name=\"add\" className=\"add\" onClick={this.openModal} />\n\n                    </Menu.Item>\n                    {this.displayChannels(channels)}\n                </Menu.Menu>\n\n                <Modal basic open={modal} onClose={this.closeModal}>\n                    {this.props.authenticatedUser ? (\n                        <Fragment>\n                            <Modal.Header>Add a Channel </Modal.Header>\n                            <Modal.Content>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Field>\n                                        <Input fluid label=\"Name of channel\" name=\"channelName\" onChange={this.handleChange}\n\n\n                                        />\n                                    </Form.Field>\n                                    <Form.Field>\n                                        <Input fluid label=\"About the channel\" name=\"channelDetails\" onChange={this.handleChange} />\n                                    </Form.Field>\n                                </Form>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button inverted color=\"green\" onClick={this.handleSubmit}>\n                                    <Icon name=\"checkmark\" /> Add\n                        </Button>\n                                <Button inverted color=\"red\" onClick={this.closeModal}>\n                                    <Icon name=\"remove\" /> Cancel\n                        </Button>\n                            </Modal.Actions>\n                        </Fragment>\n                    ) : (\n                            <Dimmer active>\n                                <Loader size=\"huge\" content=\"Please Wait authenticating...\" />\n                            </Dimmer>\n                        )}\n\n                </Modal>\n            </Fragment>\n\n        )\n    }\n}\n\n\nexport default connect(null,{setCurrentChannel})(Channels)\n"]},"metadata":{},"sourceType":"module"}