{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/components/messages/fileModal.js\";\nimport React, { Component } from \"react\";\nimport { Modal, Input, Icon, Button } from \"semantic-ui-react\";\nimport mime from \"mime-types\";\n\nclass fileModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      file: null,\n      authorized: [\"image/jpg\", \"image/png\"]\n    };\n\n    this.addFile = event => {\n      const file = event.target.files[0];\n\n      if (file) {\n        this.setState({\n          file\n        });\n      }\n    };\n\n    this.sendFile = () => {\n      const {\n        file\n      } = this.state;\n\n      if (file !== null) {\n        if (this.isAuthorized(file.name)) {\n          const metadata = {\n            contentType: mime.lookup(file.name)\n          };\n          uploadFile(file, metadata);\n        }\n      }\n    };\n\n    this.isAuthorized = filename => this.state.authorized.includes(mime.lookup(filename));\n\n    this.uploadFile = (file, metadata) => {\n      console.log(file, metadata);\n    };\n  }\n\n  render() {\n    const {\n      modal,\n      closeModal\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Modal, {\n      basic: true,\n      open: modal,\n      onClose: closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Select an Image File\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: this.addFile,\n      fluid: true,\n      label: \"File types: jpg, png\",\n      name: \"file\",\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.sendFile,\n      color: \"green\",\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), \" Send\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"red\",\n      inverted: true,\n      onClick: closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"remove\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), \" Cancel\")));\n  }\n\n}\n\nexport default fileModal;","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/components/messages/fileModal.js"],"names":["React","Component","Modal","Input","Icon","Button","mime","fileModal","state","file","authorized","addFile","event","target","files","setState","sendFile","isAuthorized","name","metadata","contentType","lookup","uploadFile","filename","includes","console","log","render","modal","closeModal","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal, Input, Icon, Button } from \"semantic-ui-react\";\nimport mime from \"mime-types\";\n\nclass fileModal extends Component {\n  state = {\n    file: null,\n    authorized: [\"image/jpg\", \"image/png\"],\n  };\n\n  addFile = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      this.setState({ file });\n    }\n  };\n  sendFile = () => {\n    const { file } = this.state;\n    if (file !== null) {\n      if (this.isAuthorized(file.name)) {\n        const metadata = { contentType: mime.lookup(file.name) };\n        uploadFile(file, metadata);\n      }\n    }\n  };\n  isAuthorized = (filename) =>\n    this.state.authorized.includes(mime.lookup(filename));\n\n  uploadFile = (file, metadata) => {\n    console.log(file, metadata);\n  };\n  render() {\n    const { modal, closeModal } = this.props;\n\n    return (\n      <Modal basic open={modal} onClose={closeModal}>\n        <Modal.Header>Select an Image File</Modal.Header>\n        <Modal.Content>\n          <Input\n            onChange={this.addFile}\n            fluid\n            label=\"File types: jpg, png\"\n            name=\"file\"\n            type=\"file\"\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={this.sendFile} color=\"green\" inverted>\n            <Icon name=\"checkmark\" /> Send\n          </Button>\n          <Button color=\"red\" inverted onClick={closeModal}>\n            <Icon name=\"remove\" /> Cancel\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default fileModal;\n"]},"metadata":{},"sourceType":"module"}