{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/pages/login/login.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport Google from \"../../components/signInMethods/googleAuth\";\nimport Github from \"../../components/signInMethods/githubAuth\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { loginUser } from \"../../redux/actions/userActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass login extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData, this.props.history);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nxtProps) {\n    if (nxtProps.UI.errors) {\n      this.setState({\n        errors: nxtProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      UI: {\n        loading\n      }\n    } = this.props;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      helperText: errors.email,\n      error: errors.email ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      helperText: errors.password,\n      error: errors.password ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), errors.general && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, errors.general), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      id: \"button\",\n      color: \"secondary\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Login\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 30 // className=\"secondary\"\n      ,\n      disableShrink: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Google, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Github, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \" Don't have an account ? Signup\", \" \", \" \"));\n  }\n\n}\n\nlogin.propTypes = {\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(login);","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/pages/login/login.js"],"names":["React","Component","TextField","Paper","Card","Google","Github","Button","Grid","loginUser","Typography","PropTypes","connect","CircularProgress","login","constructor","handleSubmit","event","preventDefault","setState","loading","userData","email","state","password","props","history","handleChange","target","name","value","errors","componentWillReceiveProps","nxtProps","UI","render","general","propTypes","user","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport Card from '@material-ui/core/Card'\nimport Google from \"../../components/signInMethods/googleAuth\"\nimport Github from \"../../components/signInMethods/githubAuth\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport {loginUser} from \"../../redux/actions/userActions\"\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n\nclass login extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: {}\n        }\n    }\n    componentWillReceiveProps(nxtProps) {\n        if (nxtProps.UI.errors) {\n            this.setState({ errors: nxtProps.UI.errors })\n        }\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({\n            loading: true,\n        });\n        const userData = {\n            email: this.state.email,\n            password: this.state.password,\n        };\n\n        this.props.loginUser(userData, this.props.history);\n    };\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    };\n\n\n    render() {\n\n        const {\n            UI: { loading },\n          } = this.props;\n          const { errors } = this.state;\n\n\n        return (\n            <form noValidate onSubmit={this.handleSubmit} className=\"\">\n                <TextField id=\"email\" name=\"email\" type=\"email\" label=\"Email\" \n                value={this.state.email}\n                onChange={this.handleChange}\n                helperText={errors.email}\n                error={errors.email ? true : false}\n                />\n                <TextField id=\"password\" name=\"password\" type=\"password\" label=\"Password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n                helperText={errors.password}\n                error={errors.password ? true : false}\n\n                />\n                {errors.general && (\n                            <Typography\n                              variant=\"body2\"\n                              \n                            >\n                              {errors.general}\n                            </Typography>\n                          )}\n                <Button type=\"submit\" variant=\"contained\" id=\"button\" color=\"secondary\" disabled={loading}>Login\n                {loading && (\n                              <CircularProgress\n                                size={30}\n                                \n                                // className=\"secondary\"\n                                disableShrink\n                              />\n                            )}\n                \n                </Button>\n                <Google />\n                <Github />\n\n                <small className=\"\"> Don't have an account ? Signup{\" \"} </small>\n\n\n            </form>\n        )\n    }\n}\n\nlogin.propTypes = {\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n    loginUser: PropTypes.func.isRequired,\n\n}\n\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n})\n\nexport default connect(mapStateToProps,{ loginUser })(login)\n"]},"metadata":{},"sourceType":"module"}