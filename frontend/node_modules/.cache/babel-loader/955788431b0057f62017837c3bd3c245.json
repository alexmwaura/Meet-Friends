{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/components/messages/Message.js\";\nimport React, { Fragment } from \"react\";\nimport { Comment } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nconst isOwnMessage = (message, user) => {\n  return message.user.id === user.userId ? \"message__self\" : '';\n};\n\nconst isOwnMessageTwo = (message, user) => {\n  return message.user.id === user.userId ? \"message__selfTwo\" : '';\n};\n\nconst timeFromNow = timestamp => moment(timestamp).fromNow();\n\nconst Message = ({\n  message,\n  user\n}) => /*#__PURE__*/React.createElement(Comment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Comment.Avatar, {\n  className: isOwnMessageTwo(message, user),\n  src: message.user.avatar,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(Comment.Content, {\n  className: isOwnMessage(message, user),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Comment.Author, {\n  as: \"a\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }\n}, message.user.id === user.userId ? /*#__PURE__*/React.createElement(Comment.Avatar, {\n  className: isOwnMessageTwo(message, user),\n  src: message.user.avatar,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 50\n  }\n}) : /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 141\n  }\n}, message.user.name)), /*#__PURE__*/React.createElement(Comment.Metadata, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }\n}, timeFromNow(message.timestamp)), /*#__PURE__*/React.createElement(Comment.Text, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }\n}, message.content), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }\n})));\n\nexport default Message;","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/components/messages/Message.js"],"names":["React","Fragment","Comment","moment","isOwnMessage","message","user","id","userId","isOwnMessageTwo","timeFromNow","timestamp","fromNow","Message","avatar","name","content"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,YAAY,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACpC,SAAOD,OAAO,CAACC,IAAR,CAAaC,EAAb,KAAoBD,IAAI,CAACE,MAAzB,GAAkC,eAAlC,GAAoD,EAA3D;AACH,CAFD;;AAGA,MAAMC,eAAe,GAAG,CAACJ,OAAD,EAAUC,IAAV,KAAmB;AACvC,SAAOD,OAAO,CAACC,IAAR,CAAaC,EAAb,KAAoBD,IAAI,CAACE,MAAzB,GAAkC,kBAAlC,GAAuD,EAA9D;AACH,CAFD;;AAIA,MAAME,WAAW,GAAIC,SAAD,IAAeR,MAAM,CAACQ,SAAD,CAAN,CAAkBC,OAAlB,EAAnC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAER,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,kBACZ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,OAAD,CAAS,MAAT;AAAgB,EAAA,SAAS,EAAEG,eAAe,CAACJ,OAAD,EAAUC,IAAV,CAA1C;AAA4D,EAAA,GAAG,EAAED,OAAO,CAACC,IAAR,CAAaQ,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,eAEI,oBAAC,OAAD,CAAS,OAAT;AAAiB,EAAA,SAAS,EAAEV,YAAY,CAACC,OAAD,EAAUC,IAAV,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEA,oBAAC,OAAD,CAAS,MAAT;AAAgB,EAAA,EAAE,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEKD,OAAO,CAACC,IAAR,CAAaC,EAAb,KAAoBD,IAAI,CAACE,MAAzB,gBAAoC,oBAAC,OAAD,CAAS,MAAT;AAAgB,EAAA,SAAS,EAAEC,eAAe,CAACJ,OAAD,EAAUC,IAAV,CAA1C;AAA4D,EAAA,GAAG,EAAED,OAAO,CAACC,IAAR,CAAaQ,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAApC,gBAA+H,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAWT,OAAO,CAACC,IAAR,CAAaS,IAAxB,CAFpI,CAFA,eAMA,oBAAC,OAAD,CAAS,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAmBL,WAAW,CAACL,OAAO,CAACM,SAAT,CAA9B,CANA,eAOA,oBAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAeN,OAAO,CAACW,OAAvB,CAPA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARA,CAFJ,CADJ;;AAgBA,eAAeH,OAAf","sourcesContent":["import React,{Fragment} from \"react\"\nimport { Comment } from \"semantic-ui-react\"\nimport moment from \"moment\"\n\nconst isOwnMessage = (message, user) => {\n    return message.user.id === user.userId ? \"message__self\" : ''\n}\nconst isOwnMessageTwo = (message, user) => {\n    return message.user.id === user.userId ? \"message__selfTwo\" : ''\n}\n\nconst timeFromNow = (timestamp) => moment(timestamp).fromNow()\n\nconst Message = ({ message, user }) => (\n    <Comment >\n        <Comment.Avatar className={isOwnMessageTwo(message, user)}  src={message.user.avatar} />\n        <Comment.Content className={isOwnMessage(message, user)} >\n           \n        <Comment.Author as=\"a\" >\n\n            {message.user.id === user.userId ? ( <Comment.Avatar className={isOwnMessageTwo(message, user)}  src={message.user.avatar} />):(<Fragment>{message.user.name}</Fragment>)}\n        </Comment.Author>\n        <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\n        <Comment.Text>{message.content}</Comment.Text>\n        <br/>\n        {/* <hr/> */}\n        </Comment.Content>\n    </Comment>\n)\nexport default Message"]},"metadata":{},"sourceType":"module"}