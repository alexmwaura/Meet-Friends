{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/components/messages/messageForm.js\";\nimport React from \"react\";\nimport uuidv4 from \"uuid/v4\";\nimport firebase from \"../../Auth/firebase\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\nimport FileModal from \"./fileModal\"; // import ProgressBar from \"./ProgressBar\";\n\nclass MessageForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      storageRef: firebase.storage().ref(),\n      uploadTask: null,\n      uploadState: \"\",\n      percentUploaded: 0,\n      message: \"\",\n      channel: this.props.currentChannel,\n      user: this.props.currentUser,\n      loading: false,\n      errors: [],\n      modal: false\n    };\n\n    this.openModal = () => this.setState({\n      modal: true\n    });\n\n    this.closeModal = () => this.setState({\n      modal: false\n    });\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.createMessage = (fileUrl = null) => {\n      const message = {\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n        user: {\n          id: this.state.user.uid,\n          name: this.state.user.displayName,\n          avatar: this.state.user.photoURL\n        }\n      };\n\n      if (fileUrl !== null) {\n        message[\"image\"] = fileUrl;\n      } else {\n        message[\"content\"] = this.state.message;\n      }\n\n      return message;\n    };\n\n    this.sendMessage = () => {\n      const {\n        messagesRef\n      } = this.props;\n      const {\n        message,\n        channel\n      } = this.state;\n\n      if (message) {\n        this.setState({\n          loading: true\n        });\n        messagesRef.child(channel.id).push().set(this.createMessage()).then(() => {\n          this.setState({\n            loading: false,\n            message: \"\",\n            errors: []\n          });\n        }).catch(err => {\n          console.error(err);\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat(err)\n          });\n        });\n      } else {\n        this.setState({\n          errors: this.state.errors.concat({\n            message: \"Add a message\"\n          })\n        });\n      }\n    };\n\n    this.uploadFile = (file, metadata) => {\n      const pathToUpload = this.state.channel.id;\n      const ref = this.props.messagesRef;\n      const filePath = `chat/public/${uuidv4()}.jpg`;\n      this.setState({\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\n      }, () => {\n        this.state.uploadTask.on(\"state_changed\", snap => {\n          const percentUploaded = Math.round(snap.bytesTransferred / snap.totalBytes * 100);\n          this.setState({\n            percentUploaded\n          });\n        }, err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            uploadState: \"error\",\n            uploadTask: null\n          });\n        }, () => {\n          this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadUrl => {\n            this.sendFileMessage(downloadUrl, ref, pathToUpload);\n          }).catch(err => {\n            console.error(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              uploadState: \"error\",\n              uploadTask: null\n            });\n          });\n        });\n      });\n    };\n\n    this.sendFileMessage = (fileUrl, ref, pathToUpload) => {\n      ref.child(pathToUpload).push().set(this.createMessage(fileUrl)).then(() => {\n        this.setState({\n          uploadState: \"done\"\n        });\n      }).catch(err => {\n        console.error(err);\n        this.setState({\n          errors: this.state.errors.concat(err)\n        });\n      });\n    };\n  }\n\n  render() {\n    // prettier-ignore\n    const {\n      errors,\n      message,\n      loading,\n      modal,\n      uploadState,\n      percentUploaded\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Segment, {\n      className: \"message__form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      fluid: true,\n      name: \"message\",\n      onChange: this.handleChange,\n      value: message,\n      style: {\n        marginBottom: \"0.7em\"\n      },\n      label: /*#__PURE__*/React.createElement(Button, {\n        icon: \"add\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 18\n        }\n      }),\n      labelPosition: \"left\",\n      className: errors.some(error => error.message.includes(\"message\")) ? \"error\" : \"\",\n      placeholder: \"Write your message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button.Group, {\n      icon: true,\n      widths: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.sendMessage,\n      disabled: loading,\n      color: \"orange\",\n      content: \"Add Reply\",\n      labelPosition: \"left\",\n      icon: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"teal\",\n      onClick: this.openModal,\n      content: \"Upload Media\",\n      labelPosition: \"right\",\n      icon: \"cloud upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FileModal, {\n      modal: modal,\n      closeModal: this.closeModal,\n      uploadFile: this.uploadFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default MessageForm;","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/components/messages/messageForm.js"],"names":["React","uuidv4","firebase","Segment","Button","Input","FileModal","MessageForm","Component","state","storageRef","storage","ref","uploadTask","uploadState","percentUploaded","message","channel","props","currentChannel","user","currentUser","loading","errors","modal","openModal","setState","closeModal","handleChange","event","target","name","value","createMessage","fileUrl","timestamp","database","ServerValue","TIMESTAMP","id","uid","displayName","avatar","photoURL","sendMessage","messagesRef","child","push","set","then","catch","err","console","error","concat","uploadFile","file","metadata","pathToUpload","filePath","put","on","snap","Math","round","bytesTransferred","totalBytes","snapshot","getDownloadURL","downloadUrl","sendFileMessage","render","marginBottom","some","includes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport uuidv4 from \"uuid/v4\";\nimport firebase from \"../../Auth/firebase\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\n\nimport FileModal from \"./fileModal\";\n// import ProgressBar from \"./ProgressBar\";\n\nclass MessageForm extends React.Component {\n  state = {\n    storageRef: firebase.storage().ref(),\n    uploadTask: null,\n    uploadState: \"\",\n    percentUploaded: 0,\n    message: \"\",\n    channel: this.props.currentChannel,\n    user: this.props.currentUser,\n    loading: false,\n    errors: [],\n    modal: false\n  };\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  createMessage = (fileUrl = null) => {\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: this.state.user.uid,\n        name: this.state.user.displayName,\n        avatar: this.state.user.photoURL\n      }\n    };\n    if (fileUrl !== null) {\n      message[\"image\"] = fileUrl;\n    } else {\n      message[\"content\"] = this.state.message;\n    }\n    return message;\n  };\n\n  sendMessage = () => {\n    const { messagesRef } = this.props;\n    const { message, channel } = this.state;\n\n    if (message) {\n      this.setState({ loading: true });\n      messagesRef\n        .child(channel.id)\n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          this.setState({ loading: false, message: \"\", errors: [] });\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat(err)\n          });\n        });\n    } else {\n      this.setState({\n        errors: this.state.errors.concat({ message: \"Add a message\" })\n      });\n    }\n  };\n\n  uploadFile = (file, metadata) => {\n    const pathToUpload = this.state.channel.id;\n    const ref = this.props.messagesRef;\n    const filePath = `chat/public/${uuidv4()}.jpg`;\n\n    this.setState(\n      {\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          snap => {\n            const percentUploaded = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            );\n            this.setState({ percentUploaded });\n          },\n          err => {\n            console.error(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              uploadState: \"error\",\n              uploadTask: null\n            });\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(downloadUrl => {\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\n              })\n              .catch(err => {\n                console.error(err);\n                this.setState({\n                  errors: this.state.errors.concat(err),\n                  uploadState: \"error\",\n                  uploadTask: null\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\n    ref\n      .child(pathToUpload)\n      .push()\n      .set(this.createMessage(fileUrl))\n      .then(() => {\n        this.setState({ uploadState: \"done\" });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({\n          errors: this.state.errors.concat(err)\n        });\n      });\n  };\n\n  render() {\n    // prettier-ignore\n    const { errors, message, loading, modal, uploadState, percentUploaded } = this.state;\n\n    return (\n      <Segment className=\"message__form\">\n        <Input\n          fluid\n          name=\"message\"\n          onChange={this.handleChange}\n          value={message}\n          style={{ marginBottom: \"0.7em\" }}\n          label={<Button icon={\"add\"} />}\n          labelPosition=\"left\"\n          className={\n            errors.some(error => error.message.includes(\"message\"))\n              ? \"error\"\n              : \"\"\n          }\n          placeholder=\"Write your message\"\n        />\n        <Button.Group icon widths=\"2\">\n          <Button\n            onClick={this.sendMessage}\n            disabled={loading}\n            color=\"orange\"\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n          />\n          <Button\n            color=\"teal\"\n            onClick={this.openModal}\n            content=\"Upload Media\"\n            labelPosition=\"right\"\n            icon=\"cloud upload\"\n          />\n        </Button.Group>\n        <FileModal\n          modal={modal}\n          closeModal={this.closeModal}\n          uploadFile={this.uploadFile}\n        />\n        {/* <ProgressBar\n          uploadState={uploadState}\n          percentUploaded={percentUploaded}\n        /> */}\n      </Segment>\n    );\n  }\n}\n\nexport default MessageForm;"]},"metadata":{},"sourceType":"module"}