{"ast":null,"code":"import { LOADING_USER, LOADING_UI, SET_GOOGLE_USER } from \"../store/types\";\nimport * as firebase from \"firebase\";\nimport Config from \"../../config/config\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nfirebase.initializeApp(Config);\nexport const multiAuth = provider => {};\nexport const authenticateGoogle = () => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.addScope('profile');\n  provider.addScope('email');\n  firebase.auth().signInWithPopup(provider).then(result => {\n    if (result.credential) {\n      const {\n        user\n      } = result;\n      let token;\n      console.log(user);\n      const {\n        displayName,\n        email,\n        xa\n      } = user;\n      token = xa;\n      localStorage.setItem(\"token\", token);\n      const {\n        picture,\n        user_id\n      } = jwt_decode(token);\n      const userData = {\n        email: email,\n        username: displayName,\n        profileImage: picture\n      };\n      dispatch(googleSignup(userData, user_id));\n    }\n  }).catch(err => console.log(err));\n};\nexport const googleSignup = (userData, userId) => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.post(`/google/${userId}`, userData).then(res => {\n    dispatch({\n      type: SET_GOOGLE_USER,\n      payload: res.data\n    }); // window.location.href = \"/\"\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/redux/actions/userActions.js"],"names":["LOADING_USER","LOADING_UI","SET_GOOGLE_USER","firebase","Config","axios","jwt_decode","initializeApp","multiAuth","provider","authenticateGoogle","dispatch","type","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","credential","user","token","console","log","displayName","email","xa","localStorage","setItem","picture","user_id","userData","username","profileImage","googleSignup","catch","err","userId","post","res","payload","data"],"mappings":"AAAA,SAAQA,YAAR,EAAqBC,UAArB,EAAiCC,eAAjC,QAAuD,gBAAvD;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEAH,QAAQ,CAACI,aAAT,CAAuBH,MAAvB;AAGA,OAAO,MAAMI,SAAS,GAAIC,QAAD,IAAc,CAEtC,CAFM;AAKP,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEX;AAAP,GAAD,CAAR;AACA,QAAMQ,QAAQ,GAAG,IAAIN,QAAQ,CAACU,IAAT,CAAcC,kBAAlB,EAAjB;AACAL,EAAAA,QAAQ,CAACM,QAAT,CAAkB,SAAlB;AACAN,EAAAA,QAAQ,CAACM,QAAT,CAAkB,OAAlB;AACAZ,EAAAA,QAAQ,CAACU,IAAT,GAAgBG,eAAhB,CAAgCP,QAAhC,EACCQ,IADD,CACOC,MAAD,IAAW;AACb,QAAIA,MAAM,CAACC,UAAX,EAAuB;AACvB,YAAM;AAACC,QAAAA;AAAD,UAASF,MAAf;AACA,UAAIG,KAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,YAAO;AAACI,QAAAA,WAAD;AAAcC,QAAAA,KAAd;AAAoBC,QAAAA;AAApB,UAA0BN,IAAjC;AACAC,MAAAA,KAAK,GAAGK,EAAR;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BP,KAA9B;AACA,YAAM;AAACQ,QAAAA,OAAD;AAASC,QAAAA;AAAT,UAAqBxB,UAAU,CAACe,KAAD,CAArC;AAEA,YAAMU,QAAQ,GAAG;AACZN,QAAAA,KAAK,EAAEA,KADK;AAEZO,QAAAA,QAAQ,EAAER,WAFE;AAGZS,QAAAA,YAAY,EAAEJ;AAHF,OAAjB;AAMAlB,MAAAA,QAAQ,CAACuB,YAAY,CAACH,QAAD,EAAUD,OAAV,CAAb,CAAR;AACC;AAGF,GArBH,EAsBCK,KAtBD,CAsBQC,GAAD,IAASd,OAAO,CAACC,GAAR,CAAYa,GAAZ,CAtBhB;AAyBH,CA9BM;AAiCP,OAAO,MAAMF,YAAY,GAAG,CAACH,QAAD,EAAUM,MAAV,KAAsB1B,QAAD,IAAc;AAC3DA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEZ;AAAP,GAAD,CAAR;AACAK,EAAAA,KAAK,CAACiC,IAAN,CAAY,WAAUD,MAAO,EAA7B,EAA+BN,QAA/B,EACCd,IADD,CACMsB,GAAG,IAAG;AACR5B,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV,eADD;AAELsC,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,KAAD,CAAR,CADQ,CAMR;AACH,GARD,EASCN,KATD,CASQC,GAAD,IAASd,OAAO,CAACC,GAAR,CAAYa,GAAZ,CAThB;AAWH,CAbM","sourcesContent":["import {LOADING_USER,LOADING_UI, SET_GOOGLE_USER} from \"../store/types\"\nimport * as firebase from \"firebase\"\nimport Config from \"../../config/config\"\nimport axios from \"axios\"\nimport jwt_decode from \"jwt-decode\"\n\nfirebase.initializeApp(Config)\n\n\nexport const multiAuth = (provider) => {\n    \n}\n\n\nexport const authenticateGoogle = () => (dispatch) => {\n    dispatch({type: LOADING_UI})\n    const provider = new firebase.auth.GoogleAuthProvider()\n    provider.addScope('profile');\n    provider.addScope('email');\n    firebase.auth().signInWithPopup(provider)\n    .then((result) =>{\n        if (result.credential) {\n        const {user} = result\n        let token;   \n        console.log(user)   \n        const  {displayName, email,xa} = user\n        token = xa\n        localStorage.setItem(\"token\", token)\n        const {picture,user_id} =  jwt_decode(token)   \n\n        const userData = {\n             email: email,\n             username: displayName,\n             profileImage: picture\n        }\n       \n        dispatch(googleSignup(userData,user_id))\n        }\n        \n        \n      }) \n    .catch((err) => console.log(err));\n\n\n}\n\n\nexport const googleSignup = (userData,userId) => (dispatch) => {\n    dispatch({type: LOADING_USER})\n    axios.post(`/google/${userId}`,userData)\n    .then(res=> {\n        dispatch({\n            type: SET_GOOGLE_USER,\n            payload: res.data\n        })\n        \n        // window.location.href = \"/\"\n    })\n    .catch((err) => console.log(err));\n\n}"]},"metadata":{},"sourceType":"module"}