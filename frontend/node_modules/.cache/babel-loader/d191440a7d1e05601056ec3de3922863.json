{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/components/messages/Message.js\";\nimport React, { Fragment } from \"react\";\nimport { Comment, Image } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nconst isOwnMessage = (message, user) => {\n  return message.user.id === user.userId ? \"message__self\" : '';\n};\n\nconst isOwnMessageTwo = (message, user) => {\n  return message.user.id === user.userId ? \"message__selfTwo\" : '';\n};\n\nconst isImage = message => {\n  return message.hasOwnProperty('image') && !message.hasOwnProperty('conetent');\n};\n\nconst timeFromNow = timestamp => moment(timestamp).fromNow();\n\nconst Message = ({\n  message,\n  user\n}) => /*#__PURE__*/React.createElement(Comment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, message.user.id === user.userId ? /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 46\n  }\n}) : /*#__PURE__*/React.createElement(Comment.Avatar, {\n  src: message.user.avatar,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(Comment.Content, {\n  className: isOwnMessage(message, user),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Comment.Author, {\n  as: \"a\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }\n}, message.user.id === user.userId ? /*#__PURE__*/React.createElement(Comment.Avatar, {\n  src: message.user.avatar,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 50\n  }\n}) : /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 98\n  }\n}, message.user.name)), /*#__PURE__*/React.createElement(Comment.Metadata, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }\n}, timeFromNow(message.timestamp)), isImage(message) ? /*#__PURE__*/React.createElement(Image, {\n  src: message.image,\n  className: \"message__image\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 29\n  }\n}) : /*#__PURE__*/React.createElement(Comment.Text, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }\n}, message.content), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n})));\n\nexport default Message;","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/components/messages/Message.js"],"names":["React","Fragment","Comment","Image","moment","isOwnMessage","message","user","id","userId","isOwnMessageTwo","isImage","hasOwnProperty","timeFromNow","timestamp","fromNow","Message","avatar","name","image","content"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,OAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,YAAY,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACpC,SAAOD,OAAO,CAACC,IAAR,CAAaC,EAAb,KAAoBD,IAAI,CAACE,MAAzB,GAAkC,eAAlC,GAAoD,EAA3D;AACH,CAFD;;AAGA,MAAMC,eAAe,GAAG,CAACJ,OAAD,EAAUC,IAAV,KAAmB;AACvC,SAAOD,OAAO,CAACC,IAAR,CAAaC,EAAb,KAAoBD,IAAI,CAACE,MAAzB,GAAkC,kBAAlC,GAAuD,EAA9D;AACH,CAFD;;AAIA,MAAME,OAAO,GAAIL,OAAD,IAAY;AACxB,SAAOA,OAAO,CAACM,cAAR,CAAuB,OAAvB,KAAmC,CAACN,OAAO,CAACM,cAAR,CAAuB,UAAvB,CAA3C;AAEH,CAHD;;AAKA,MAAMC,WAAW,GAAIC,SAAD,IAAeV,MAAM,CAACU,SAAD,CAAN,CAAkBC,OAAlB,EAAnC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEV,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,kBACZ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACMD,OAAO,CAACC,IAAR,CAAaC,EAAb,KAAoBD,IAAI,CAACE,MAAzB,gBAAmC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAnC,gBACE,oBAAC,OAAD,CAAS,MAAT;AAAgB,EAAA,GAAG,EAAEH,OAAO,CAACC,IAAR,CAAaU,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFR,eAII,oBAAC,OAAD,CAAS,OAAT;AAAiB,EAAA,SAAS,EAAEZ,YAAY,CAACC,OAAD,EAAUC,IAAV,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEA,oBAAC,OAAD,CAAS,MAAT;AAAgB,EAAA,EAAE,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEKD,OAAO,CAACC,IAAR,CAAaC,EAAb,KAAoBD,IAAI,CAACE,MAAzB,gBAAoC,oBAAC,OAAD,CAAS,MAAT;AAAiB,EAAA,GAAG,EAAEH,OAAO,CAACC,IAAR,CAAaU,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAApC,gBAAoF,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAWX,OAAO,CAACC,IAAR,CAAaW,IAAxB,CAFzF,CAFA,eAMA,oBAAC,OAAD,CAAS,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAmBL,WAAW,CAACP,OAAO,CAACQ,SAAT,CAA9B,CANA,EAQCH,OAAO,CAACL,OAAD,CAAP,gBAAmB,oBAAC,KAAD;AAAO,EAAA,GAAG,EAAEA,OAAO,CAACa,KAApB;AAA2B,EAAA,SAAS,EAAC,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAnB,gBACA,oBAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAeb,OAAO,CAACc,OAAvB,CATD,eAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAXA,eAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAZA,CAJJ,CADJ;;AAqBA,eAAeJ,OAAf","sourcesContent":["import React,{Fragment} from \"react\"\nimport { Comment,Image } from \"semantic-ui-react\"\nimport moment from \"moment\"\n\nconst isOwnMessage = (message, user) => {\n    return message.user.id === user.userId ? \"message__self\" : ''\n}\nconst isOwnMessageTwo = (message, user) => {\n    return message.user.id === user.userId ? \"message__selfTwo\" : ''\n}\n\nconst isImage = (message)=> {\n    return message.hasOwnProperty('image') && !message.hasOwnProperty('conetent')\n     \n}\n\nconst timeFromNow = (timestamp) => moment(timestamp).fromNow()\n\nconst Message = ({ message, user }) => (\n    <Comment >\n         {message.user.id === user.userId ? (<Fragment/>)\n         :( <Comment.Avatar src={message.user.avatar} />)\n         }\n        <Comment.Content className={isOwnMessage(message, user)} >\n           \n        <Comment.Author as=\"a\" >\n\n            {message.user.id === user.userId ? ( <Comment.Avatar  src={message.user.avatar} />):(<Fragment>{message.user.name}</Fragment>)}\n        </Comment.Author>\n        <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\n       \n        {isImage(message) ? <Image src={message.image} className=\"message__image\"/>: \n         <Comment.Text>{message.content}</Comment.Text>\n        }\n        <br/>\n        <br/>\n        </Comment.Content>\n    </Comment>\n)\nexport default Message"]},"metadata":{},"sourceType":"module"}