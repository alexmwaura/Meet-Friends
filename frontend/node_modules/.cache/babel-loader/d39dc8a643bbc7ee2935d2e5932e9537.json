{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/components/spinner/spinner.js\";\nimport React, { Component } from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Spinner extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: \"\",\n      dimmer: true\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.user.authenticated === true) {\n      this.setState({\n        message: \"Preparing Chat...\",\n        dimmer: true\n      });\n    } else {\n      this.setState({\n        message: \"Please login\",\n        dimmer: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Dimmer, {\n      active: this.state.dimmer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      size: \"huge\",\n      content: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nSpinner.propTypes = {\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(Spinner);","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/components/spinner/spinner.js"],"names":["React","Component","Loader","Dimmer","connect","PropTypes","Spinner","state","message","dimmer","componentWillReceiveProps","nextProps","user","authenticated","setState","render","propTypes","object","isRequired","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,mBAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE9BM,KAF8B,GAExB;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAFwB;AAAA;;AAO9BC,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAClC,QAAGA,SAAS,CAACC,IAAV,CAAeC,aAAf,KAAiC,IAApC,EAAyC;AACvC,WAAKC,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAE,mBAAV;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OAAd;AACD,KAFD,MAGK;AACH,WAAKK,QAAL,CAAc;AACZN,QAAAA,OAAO,EAAE,cADG;AAEZC,QAAAA,MAAM,EAAE;AAFI,OAAd;AAID;AACF;;AAGDM,EAAAA,MAAM,GAAE;AACN,wBACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWE,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AAKD;;AA1B6B;;AAgChCF,OAAO,CAACU,SAAR,GAAoB;AAClBJ,EAAAA,IAAI,EAAEP,SAAS,CAACY,MAAV,CAAiBC;AADL,CAApB;;AAIA,MAAMC,eAAe,GAAGZ,KAAK,KAAK;AAChCK,EAAAA,IAAI,EAAEL,KAAK,CAACK;AADoB,CAAL,CAA7B;;AAKA,eAAeR,OAAO,CAACe,eAAD,CAAP,CAAyBb,OAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\nimport {connect} from \"react-redux\"\nimport PropTypes from \"prop-types\"\n\nclass Spinner extends Component {\n\n  state={\n    message: \"\",\n    dimmer: true\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(nextProps.user.authenticated === true){\n      this.setState({message: \"Preparing Chat...\", dimmer: true})\n    }\n    else {\n      this.setState({\n        message: \"Please login\",\n        dimmer: false\n      })\n    }\n  }\n\n\n  render(){\n    return(\n      <Dimmer active={this.state.dimmer}>\n      <Loader size=\"huge\" content={this.state.message} />\n    </Dimmer>\n    )\n  }\n\n\n}\n\n\nSpinner.propTypes = {\n  user: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n})\n\n\nexport default connect(mapStateToProps)(Spinner)\n\n"]},"metadata":{},"sourceType":"module"}