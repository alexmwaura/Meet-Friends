{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/components/directMessages/directMessages.js\";\nimport React, { Component } from 'react';\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport firebase from \"../../Auth/firebase\";\n\nclass directMessages extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: this.props.user,\n      userRef: firebase.database().ref('users'),\n      connectedRef: firebase.database().ref('.info/connected'),\n      presenceRef: firebase.database().ref('presence')\n    };\n\n    this.addListeners = currentUserUid => {\n      const {\n        userRef,\n        user,\n        connectedRef,\n        presenceRef\n      } = this.state;\n      let loadedUsers = [];\n      userRef.on('child_added', snap => {\n        let user = snap.val();\n        user['uid'] = snap.key;\n        user['status'] = 'offline';\n        loadedUsers.push(user);\n        this.setState({\n          users: loadedUsers\n        });\n      });\n      connectedRef.on(\"value\", snap => {\n        if (snap.val() === true) {\n          const ref = presenceRef.child(currentUserUid);\n          ref.set(true);\n          ref.onDisconnect().remove(err => {\n            if (err !== null) {\n              console.error(err);\n            }\n          });\n        }\n      });\n      presenceRef.on(\"child_added\", snap => {\n        if (currentUserUid !== snap.key) {}\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListeners(this.state.user.userId);\n    }\n  }\n\n  render() {\n    const {\n      users\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Menu.Menu, {\n      className: \"menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }), \"DIRECT MESSAGES\"), \" \");\n  }\n\n}\n\nexport default directMessages;","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/components/directMessages/directMessages.js"],"names":["React","Component","Menu","Icon","firebase","directMessages","state","users","props","user","userRef","database","ref","connectedRef","presenceRef","addListeners","currentUserUid","loadedUsers","on","snap","val","key","push","setState","child","set","onDisconnect","remove","err","console","error","componentDidMount","userId","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAaC,IAAb,QAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AACA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCK,KAFmC,GAE3B;AACJC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,IADd;AAEJC,MAAAA,OAAO,EAAEN,QAAQ,CAACO,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,CAFL;AAGJC,MAAAA,YAAY,EAACT,QAAQ,CAACO,QAAT,GAAoBC,GAApB,CAAwB,iBAAxB,CAHT;AAIJE,MAAAA,WAAW,EAAEV,QAAQ,CAACO,QAAT,GAAoBC,GAApB,CAAwB,UAAxB;AAJT,KAF2B;;AAAA,SAcnCG,YAdmC,GAcnBC,cAAD,IAAoB;AAC/B,YAAM;AAACN,QAAAA,OAAD;AAASD,QAAAA,IAAT;AAAcI,QAAAA,YAAd;AAA2BC,QAAAA;AAA3B,UAA0C,KAAKR,KAArD;AACA,UAAIW,WAAW,GAAG,EAAlB;AACAP,MAAAA,OAAO,CAACQ,EAAR,CAAW,aAAX,EAA0BC,IAAI,IAAG;AAC7B,YAAIV,IAAI,GAAGU,IAAI,CAACC,GAAL,EAAX;AACAX,QAAAA,IAAI,CAAC,KAAD,CAAJ,GAAcU,IAAI,CAACE,GAAnB;AACAZ,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,SAAjB;AACAQ,QAAAA,WAAW,CAACK,IAAZ,CAAiBb,IAAjB;AACA,aAAKc,QAAL,CAAc;AAAChB,UAAAA,KAAK,EAAEU;AAAR,SAAd;AACH,OAND;AAOAJ,MAAAA,YAAY,CAACK,EAAb,CAAgB,OAAhB,EAAyBC,IAAI,IAAG;AAC3B,YAAGA,IAAI,CAACC,GAAL,OAAc,IAAjB,EAAsB;AAClB,gBAAMR,GAAG,GAAGE,WAAW,CAACU,KAAZ,CAAkBR,cAAlB,CAAZ;AACAJ,UAAAA,GAAG,CAACa,GAAJ,CAAQ,IAAR;AACAb,UAAAA,GAAG,CAACc,YAAJ,GAAmBC,MAAnB,CAA0BC,GAAG,IAAG;AAC5B,gBAAGA,GAAG,KAAK,IAAX,EAAgB;AAEbC,cAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACF;AACJ,WALD;AAMH;AACL,OAXD;AAaDd,MAAAA,WAAW,CAACI,EAAZ,CAAe,aAAf,EAA6BC,IAAI,IAAG;AAChC,YAAGH,cAAc,KAAKG,IAAI,CAACE,GAA3B,EAA+B,CAE9B;AACJ,OAJD;AAKF,KA1CkC;AAAA;;AASnCU,EAAAA,iBAAiB,GAAI;AACjB,QAAG,KAAKzB,KAAL,CAAWG,IAAd,EAAmB;AACf,WAAKM,YAAL,CAAkB,KAAKT,KAAL,CAAWG,IAAX,CAAgBuB,MAAlC;AACH;AACJ;;AA+BDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAE1B,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAGA,wBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,oBADJ,EAGY,GAHZ,CADJ;AASH;;AA1DkC;;AA6DvC,eAAeD,cAAf","sourcesContent":["import React, { Component } from 'react'\nimport {Menu,Icon} from \"semantic-ui-react\"\nimport firebase from \"../../Auth/firebase\"\nclass directMessages extends Component {\n\n    state = {\n        users: this.props.user,\n        userRef: firebase.database().ref('users'),\n        connectedRef:firebase.database().ref('.info/connected'),\n        presenceRef: firebase.database().ref('presence')\n    }\n\n    componentDidMount () {\n        if(this.state.user){\n            this.addListeners(this.state.user.userId)\n        }\n    }\n    addListeners = (currentUserUid) => {\n        const {userRef,user,connectedRef,presenceRef} = this.state\n        let loadedUsers = []\n        userRef.on('child_added', snap=> {\n            let user = snap.val()\n            user['uid'] = snap.key\n            user['status'] = 'offline'\n            loadedUsers.push(user)\n            this.setState({users: loadedUsers})\n        })\n        connectedRef.on(\"value\", snap=> {\n             if(snap.val()=== true){\n                 const ref = presenceRef.child(currentUserUid)\n                 ref.set(true)\n                 ref.onDisconnect().remove(err=> {\n                     if(err !== null){\n\n                        console.error(err)\n                     }\n                 })\n             }\n        })\n\n       presenceRef.on(\"child_added\",snap=> {\n           if(currentUserUid !== snap.key){\n               \n           }\n       })\n    }\n\n    render() {\n\n        const { users } = this.state\n\n\n        return (\n            <Menu.Menu className=\"menu\">\n                <span>\n                <Icon  name=\"mail\" />DIRECT MESSAGES\n                </span>{\" \"}\n                {/* ({users.length }) */}\n\n            </Menu.Menu>\n            )\n    }\n}\n\nexport default directMessages\n"]},"metadata":{},"sourceType":"module"}