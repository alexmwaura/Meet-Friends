{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/components/channels/Channels.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Menu, Icon, Modal, Form, Input, Button } from \"semantic-ui-react\";\nimport firebase from \"../../Auth/firebase\";\nimport Spinner from \"../spinner/spinner\";\nimport admin from \"firebase-admin\";\nimport Config from \"../../config/config.json\";\nadmin.initializeApp({\n  credential: admin.credential.cert(Config),\n  storageBucket: \"portfolio-alex-eb3ef.appspot.com\",\n  databaseURL: \"https://portfolio-alex-eb3ef.firebaseio.com\"\n});\nconst db = admin.firestore;\n\nclass Channels extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channels: [],\n      channelName: \"\",\n      channelDetails: \"\",\n      modal: false,\n      channelsRef: firebase.database().ref('channels')\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        modal: false\n      });\n    };\n\n    this.openModal = () => {\n      this.setState({\n        modal: true\n      });\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.addChannel = () => {\n      const {\n        channelsRef,\n        channelName,\n        channelDetails,\n        user\n      } = this.state;\n      const {\n        username,\n        email,\n        userId,\n        profileImage\n      } = this.props.authenticatedUser;\n      const key = channelsRef.push().key;\n      const newChannel = {\n        id: key,\n        name: channelName,\n        details: channelDetails,\n        createdBy: {\n          name: username,\n          email: email,\n          avatar: profileImage,\n          userId: userId\n        }\n      };\n      db. //    channelsRef.orderByKey().on(\"child_added\", snapshot=> {\n      //        console.log(snapshot.key)\n      //    })\n      console.log(newChannel);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.isformValid(this.state)) {\n        this.addChannel();\n      }\n    };\n\n    this.isformValid = ({\n      channelName,\n      channelDetails\n    }) => channelName && channelDetails;\n  }\n\n  render() {\n    const {\n      modal,\n      channels\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Menu, {\n      style: {\n        paddingBottom: \"2em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"exchange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }\n    }), \" CHANNELS \"), \" \", \" \", \"(\", channels.length, \") \", /*#__PURE__*/React.createElement(Icon, {\n      name: \"add\",\n      onClick: this.openModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 36\n      }\n    }))), /*#__PURE__*/React.createElement(Modal, {\n      basic: true,\n      open: modal,\n      onClose: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, this.props.authenticatedUser ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Add a Channel \"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      fluid: true,\n      label: \"Name of channel\",\n      name: \"channelName\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      fluid: true,\n      label: \"About the channel\",\n      name: \"channelDetails\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 34\n      }\n    })))), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      inverted: true,\n      color: \"green\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }), \" Add\"), /*#__PURE__*/React.createElement(Button, {\n      inverted: true,\n      color: \"red\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"remove\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }), \" Cancel\"))) : /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 20\n      }\n    })));\n  }\n\n}\n\nexport default Channels;","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/components/channels/Channels.js"],"names":["React","Component","Fragment","Menu","Icon","Modal","Form","Input","Button","firebase","Spinner","admin","Config","initializeApp","credential","cert","storageBucket","databaseURL","db","firestore","Channels","state","channels","channelName","channelDetails","modal","channelsRef","database","ref","closeModal","setState","openModal","handleChange","event","preventDefault","target","name","value","addChannel","user","username","email","userId","profileImage","props","authenticatedUser","key","push","newChannel","id","details","createdBy","avatar","console","log","handleSubmit","isformValid","render","paddingBottom","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAoBC,KAApB,EAA0BC,IAA1B,EAA+BC,KAA/B,EAAqCC,MAArC,QAAmD,mBAAnD;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACAD,KAAK,CAACE,aAAN,CAAoB;AAChBC,EAAAA,UAAU,EAAEH,KAAK,CAACG,UAAN,CAAiBC,IAAjB,CAAsBH,MAAtB,CADI;AAEhBI,EAAAA,aAAa,EAAE,kCAFC;AAGhBC,EAAAA,WAAW,EAAE;AAHG,CAApB;AAMA,MAAMC,EAAE,GAAGP,KAAK,CAACQ,SAAjB;;AAEA,MAAMC,QAAN,SAAuBnB,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BoB,KAD6B,GACrB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,cAAc,EAAE,EAHZ;AAIJC,MAAAA,KAAK,EAAE,KAJH;AAKJC,MAAAA,WAAW,EAAEjB,QAAQ,CAACkB,QAAT,GAAoBC,GAApB,CAAwB,UAAxB;AALT,KADqB;;AAAA,SAS7BC,UAT6B,GAShB,MAAM;AAAC,WAAKC,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAE;AAAR,OAAd;AAA8B,KATrB;;AAAA,SAW7BM,SAX6B,GAWjB,MAAM;AAAC,WAAKD,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAE;AAAR,OAAd;AAA8B,KAXpB;;AAAA,SAa7BO,YAb6B,GAadC,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKJ,QAAL,CAAc;AAAC,SAACG,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAAnC,OAAd;AACH,KAhB4B;;AAAA,SAkB7BC,UAlB6B,GAkBhB,MAAM;AACf,YAAM;AAACZ,QAAAA,WAAD;AAAaH,QAAAA,WAAb;AAAyBC,QAAAA,cAAzB;AAAwCe,QAAAA;AAAxC,UAAgD,KAAKlB,KAA3D;AACA,YAAM;AAACmB,QAAAA,QAAD;AAAUC,QAAAA,KAAV;AAAgBC,QAAAA,MAAhB;AAAuBC,QAAAA;AAAvB,UAAuC,KAAKC,KAAL,CAAWC,iBAAxD;AACA,YAAMC,GAAG,GAAGpB,WAAW,CAACqB,IAAZ,GAAmBD,GAA/B;AACA,YAAME,UAAU,GAAG;AAChBC,QAAAA,EAAE,EAAEH,GADY;AAEhBV,QAAAA,IAAI,EAACb,WAFW;AAGhB2B,QAAAA,OAAO,EAAE1B,cAHO;AAIhB2B,QAAAA,SAAS,EAAE;AACVf,UAAAA,IAAI,EAACI,QADK;AAEVC,UAAAA,KAAK,EAAEA,KAFG;AAGVW,UAAAA,MAAM,EAACT,YAHG;AAIVD,UAAAA,MAAM,EAAEA;AAJE;AAJK,OAAnB;AAWDxB,MAAAA,EAAE,EACL;AACA;AACA;AACGmC,MAAAA,OAJA,CAIQC,GAJR,CAIYN,UAJZ;AAKF,KAtC4B;;AAAA,SAuC7BO,YAvC6B,GAuCdtB,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAG,KAAKsB,WAAL,CAAiB,KAAKnC,KAAtB,CAAH,EAAgC;AAChC,aAAKiB,UAAL;AACC;AACJ,KA5C4B;;AAAA,SA6C7BkB,WA7C6B,GA6Cf,CAAC;AAACjC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,KAAD,KAAkCD,WAAW,IAAIC,cA7ClC;AAAA;;AAiD7BiC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEhC,MAAAA,KAAF;AAAQH,MAAAA;AAAR,QAAqB,KAAKD,KAAhC;AACA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEqC,QAAAA,aAAa,EAAE;AAAjB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAM,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,eADJ,OACqD,GADrD,OAECpC,QAAQ,CAACqC,MAFV,qBAEmB,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,KAAX;AAAiB,MAAA,OAAO,EAAE,KAAK5B,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFnB,CADA,CADJ,eAUA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAEN,KAAnB;AAA0B,MAAA,OAAO,EAAE,KAAKI,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKe,KAAL,CAAWC,iBAAX,gBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADN,eAEE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKU,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,KAAK,EAAC,iBAAnB;AAAqC,MAAA,IAAI,EAAC,aAA1C;AAAwD,MAAA,QAAQ,EAAE,KAAKvB,YAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,KAAK,EAAC,mBAAnB;AAAuC,MAAA,IAAI,EAAC,gBAA5C;AAA6D,MAAA,QAAQ,EAAE,KAAKA,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,CAJJ,CADJ,CAFF,eAYE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAA+B,MAAA,OAAO,EAAE,KAAKuB,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,SADJ,eAII,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAC,KAAvB;AAA6B,MAAA,OAAO,EAAE,KAAK1B,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,YAJJ,CAZF,CADD,gBAsBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBP,CAVA,CADJ;AAwCH;;AA3F4B;;AA+FjC,eAAeT,QAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { Menu, Icon,Modal,Form,Input,Button } from \"semantic-ui-react\"\nimport firebase from \"../../Auth/firebase\"\nimport Spinner from \"../spinner/spinner\"\nimport admin from \"firebase-admin\"\nimport Config from \"../../config/config.json\"\nadmin.initializeApp({\n    credential: admin.credential.cert(Config),\n    storageBucket: \"portfolio-alex-eb3ef.appspot.com\",\n    databaseURL: \"https://portfolio-alex-eb3ef.firebaseio.com\"\n\n})\nconst db = admin.firestore\n\nclass Channels extends Component {\n    state = {\n        channels: [],\n        channelName: \"\",\n        channelDetails: \"\",\n        modal: false,\n        channelsRef: firebase.database().ref('channels'),\n    \n    }\n    closeModal = () => {this.setState({modal: false})}\n\n    openModal = () => {this.setState({modal: true}) }\n\n    handleChange =(event) => {\n        event.preventDefault()\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    addChannel = () => {\n        const {channelsRef,channelName,channelDetails,user} = this.state\n        const {username,email,userId,profileImage} = this.props.authenticatedUser\n        const key = channelsRef.push().key\n        const newChannel = {\n           id: key,\n           name:channelName,\n           details: channelDetails,\n           createdBy: {\n            name:username,\n            email: email,\n            avatar:profileImage,\n            userId: userId\n           }\n       }\n       db.\n    //    channelsRef.orderByKey().on(\"child_added\", snapshot=> {\n    //        console.log(snapshot.key)\n    //    })\n       console.log(newChannel)\n    }\n    handleSubmit =(event) => {\n        event.preventDefault()\n        if(this.isformValid(this.state)){\n        this.addChannel()\n        }\n    }\n    isformValid = ({channelName,channelDetails}) => channelName && channelDetails;\n\n\n\n    render() {\n        const { modal,channels } = this.state\n        return (\n            <Fragment>\n                <Menu.Menu style={{ paddingBottom: \"2em\" }}>\n                <Menu.Item>\n                    <span><Icon name=\"exchange\" /> CHANNELS </span> {\" \"}\n               ({channels.length}) <Icon name=\"add\" onClick={this.openModal} />\n\n                </Menu.Item>\n\n            </Menu.Menu>\n\n            <Modal basic open={modal} onClose={this.closeModal}>\n                {this.props.authenticatedUser? (\n                  <Fragment>\n                        <Modal.Header>Add a Channel </Modal.Header>\n                    <Modal.Content>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Field>\n                                <Input fluid label=\"Name of channel\" name=\"channelName\" onChange={this.handleChange}/>\n                            </Form.Field>\n                            <Form.Field>\n                                 <Input fluid label=\"About the channel\" name=\"channelDetails\" onChange={this.handleChange}/>\n                            </Form.Field>\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button inverted color=\"green\" onClick={this.handleSubmit}>\n                            <Icon name=\"checkmark\" /> Add\n                        </Button>\n                        <Button inverted color=\"red\" onClick={this.closeModal}>\n                            <Icon name=\"remove\" /> Cancel\n                        </Button>\n                    </Modal.Actions>\n                  </Fragment>\n                ):(<Spinner/>)}\n                \n            </Modal>\n            </Fragment>\n\n        )\n    }\n}\n\n\nexport default Channels\n"]},"metadata":{},"sourceType":"module"}