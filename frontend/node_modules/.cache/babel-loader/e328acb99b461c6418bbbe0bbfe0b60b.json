{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/components/userPanel/userpanel.js\";\nimport React, { Component, Fragment } from 'react';\nimport firebase from \"../../Auth/firebase\";\nimport AvatarEditor from \"react-avatar-editor\"; // prettier-ignore\n\nimport { Grid, Header, Icon, Dropdown, Image, Modal, Input, Button } from \"semantic-ui-react\";\nimport store from \"../../redux/store/store\";\nimport { SET_UNAUTHENTICATED } from \"../../redux/store/types\"; // import Button from \"@material-ui/core/Button\"\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass userpanel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: this.props.currentUser,\n      modal: false,\n      previewImage: \"\",\n      croppedImage: \"\",\n      blob: null,\n      uploadedCroppedImage: \"\",\n      storageRef: firebase.storage().ref(),\n      userRef: firebase.auth().currentUser,\n      usersRef: firebase.database().ref(\"users\"),\n      metadata: {\n        contentType: \"image/jpeg\"\n      }\n    };\n\n    this.openModal = () => this.setState({\n      modal: true\n    });\n\n    this.closeModal = () => this.setState({\n      modal: false\n    });\n\n    this.dropdownOptions = () => [{\n      key: \"user\",\n      text: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, \"Signed in as \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 28\n        }\n      }, this.state.user.displayName)),\n      disabled: true\n    }, {\n      key: \"avatar\",\n      text: /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.openModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, \"Change Avatar\")\n    }, {\n      key: \"signout\",\n      text: /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.handleSignout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, \"Sign Out\")\n    }];\n\n    this.uploadCroppedImage = () => {\n      const {\n        storageRef,\n        userRef,\n        blob,\n        metadata\n      } = this.state;\n      storageRef.child(`avatars/users/${userRef.uid}`).put(blob, metadata).then(snap => {\n        snap.ref.getDownloadURL().then(downloadURL => {\n          this.setState({\n            uploadedCroppedImage: downloadURL\n          }, () => this.changeAvatar());\n        });\n      });\n    };\n\n    this.changeAvatar = () => {\n      this.state.userRef.updateProfile({\n        photoURL: this.state.uploadedCroppedImage\n      }).then(() => {\n        console.log(\"PhotoURL updated\");\n        this.closeModal();\n      }).catch(err => {\n        console.error(err);\n      });\n      this.state.usersRef.child(this.state.user.uid).update({\n        avatar: this.state.uploadedCroppedImage\n      }).then(() => {\n        console.log(\"User avatar updated\");\n      }).catch(err => {\n        console.error(err);\n      });\n    };\n\n    this.handleChange = event => {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n\n      if (file) {\n        reader.readAsDataURL(file);\n        reader.addEventListener(\"load\", () => {\n          this.setState({\n            previewImage: reader.result\n          });\n        });\n      }\n    };\n\n    this.handleCropImage = () => {\n      if (this.avatarEditor) {\n        this.avatarEditor.getImageScaledToCanvas().toBlob(blob => {\n          let imageUrl = URL.createObjectURL(blob);\n          this.setState({\n            croppedImage: imageUrl,\n            blob\n          });\n        });\n      }\n    };\n\n    this.handleSignout = () => {\n      firebase.auth().signOut().then(() => console.log(\"signed out!\"));\n    };\n  }\n\n  render() {\n    const {\n      user,\n      modal,\n      previewImage,\n      croppedImage\n    } = this.state;\n    const {\n      primaryColor\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Grid, {\n      style: {\n        background: primaryColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      style: {\n        padding: \"1.2em\",\n        margin: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      inverted: true,\n      floated: \"left\",\n      as: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Header.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, \"DevChat\")), /*#__PURE__*/React.createElement(Header, {\n      style: {\n        padding: \"0.25em\"\n      },\n      as: \"h4\",\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      className: \"dropdown\",\n      trigger: /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 32\n        }\n      }, user ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: user.profileImage,\n        spaced: \"right\",\n        avatar: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 33\n        }\n      }), user.username) : /*#__PURE__*/React.createElement(CircularProgress, {\n        size: 20,\n        disableShrink: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 37\n        }\n      })),\n      options: this.dropdownOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Modal, {\n      basic: true,\n      open: modal,\n      onClose: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, \"Change Avatar\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      fluid: true,\n      type: \"file\",\n      label: \"New Avatar\",\n      name: \"previewImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      centered: true,\n      stackable: true,\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      className: \"ui center aligned grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 23\n      }\n    }, previewImage && /*#__PURE__*/React.createElement(AvatarEditor, {\n      ref: node => this.avatarEditor = node,\n      image: previewImage,\n      width: 120,\n      height: 120,\n      border: 50,\n      scale: 1.2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 23\n      }\n    }, croppedImage && /*#__PURE__*/React.createElement(Image, {\n      style: {\n        margin: \"3.5em auto\"\n      },\n      width: 100,\n      height: 100,\n      src: croppedImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 27\n      }\n    }))))), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, croppedImage && /*#__PURE__*/React.createElement(Button, {\n      color: \"green\",\n      inverted: true,\n      onClick: this.uploadCroppedImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 23\n      }\n    }), \" Change Avatar\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"green\",\n      inverted: true,\n      onClick: this.handleCropImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }), \" Preview\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"red\",\n      inverted: true,\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"remove\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }), \" Cancel\")))));\n  }\n\n} // const mapStateToProps =(state) => ({\n//     user: state.user\n// })\n\n\nexport default userpanel;","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/components/userPanel/userpanel.js"],"names":["React","Component","Fragment","firebase","AvatarEditor","Grid","Header","Icon","Dropdown","Image","Modal","Input","Button","store","SET_UNAUTHENTICATED","CircularProgress","userpanel","state","user","props","currentUser","modal","previewImage","croppedImage","blob","uploadedCroppedImage","storageRef","storage","ref","userRef","auth","usersRef","database","metadata","contentType","openModal","setState","closeModal","dropdownOptions","key","text","displayName","disabled","handleSignout","uploadCroppedImage","child","uid","put","then","snap","getDownloadURL","downloadURL","changeAvatar","updateProfile","photoURL","console","log","catch","err","error","update","avatar","handleChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","result","handleCropImage","avatarEditor","getImageScaledToCanvas","toBlob","imageUrl","URL","createObjectURL","signOut","render","primaryColor","background","padding","margin","profileImage","username","node"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport firebase from \"../../Auth/firebase\"\nimport AvatarEditor from \"react-avatar-editor\";\n// prettier-ignore\nimport { Grid, Header, Icon, Dropdown, Image, Modal, Input, Button } from \"semantic-ui-react\";\nimport store from \"../../redux/store/store\"\nimport {SET_UNAUTHENTICATED} from \"../../redux/store/types\"\n// import Button from \"@material-ui/core/Button\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n\n\nclass userpanel extends Component {\n    state = {\n        user: this.props.currentUser,\n        modal: false,\n        previewImage: \"\",\n        croppedImage: \"\",\n        blob: null,\n        uploadedCroppedImage: \"\",\n        storageRef: firebase.storage().ref(),\n        userRef: firebase.auth().currentUser,\n        usersRef: firebase.database().ref(\"users\"),\n        metadata: {\n          contentType: \"image/jpeg\"\n        }\n      };\n    \n      openModal = () => this.setState({ modal: true });\n    \n      closeModal = () => this.setState({ modal: false });\n    \n      dropdownOptions = () => [\n        {\n          key: \"user\",\n          text: (\n            <span>\n              Signed in as <strong>{this.state.user.displayName}</strong>\n            </span>\n          ),\n          disabled: true\n        },\n        {\n          key: \"avatar\",\n          text: <span onClick={this.openModal}>Change Avatar</span>\n        },\n        {\n          key: \"signout\",\n          text: <span onClick={this.handleSignout}>Sign Out</span>\n        }\n      ];\n    \n      uploadCroppedImage = () => {\n        const { storageRef, userRef, blob, metadata } = this.state;\n    \n        storageRef\n          .child(`avatars/users/${userRef.uid}`)\n          .put(blob, metadata)\n          .then(snap => {\n            snap.ref.getDownloadURL().then(downloadURL => {\n              this.setState({ uploadedCroppedImage: downloadURL }, () =>\n                this.changeAvatar()\n              );\n            });\n          });\n      };\n    \n      changeAvatar = () => {\n        this.state.userRef\n          .updateProfile({\n            photoURL: this.state.uploadedCroppedImage\n          })\n          .then(() => {\n            console.log(\"PhotoURL updated\");\n            this.closeModal();\n          })\n          .catch(err => {\n            console.error(err);\n          });\n    \n        this.state.usersRef\n          .child(this.state.user.uid)\n          .update({ avatar: this.state.uploadedCroppedImage })\n          .then(() => {\n            console.log(\"User avatar updated\");\n          })\n          .catch(err => {\n            console.error(err);\n          });\n      };\n    \n      handleChange = event => {\n        const file = event.target.files[0];\n        const reader = new FileReader();\n    \n        if (file) {\n          reader.readAsDataURL(file);\n          reader.addEventListener(\"load\", () => {\n            this.setState({ previewImage: reader.result });\n          });\n        }\n      };\n    \n      handleCropImage = () => {\n        if (this.avatarEditor) {\n          this.avatarEditor.getImageScaledToCanvas().toBlob(blob => {\n            let imageUrl = URL.createObjectURL(blob);\n            this.setState({\n              croppedImage: imageUrl,\n              blob\n            });\n          });\n        }\n      };\n    \n      handleSignout = () => {\n        firebase\n          .auth()\n          .signOut()\n          .then(() => console.log(\"signed out!\"));\n      };\n    \n      render() {\n        const { user, modal, previewImage, croppedImage } = this.state;\n        const { primaryColor } = this.props;\n    \n        return (\n          <Grid style={{ background: primaryColor }}>\n            <Grid.Column>\n              <Grid.Row style={{ padding: \"1.2em\", margin: 0 }}>\n                {/* App Header */}\n                <Header inverted floated=\"left\" as=\"h2\">\n                  <Icon name=\"code\" />\n                  <Header.Content>DevChat</Header.Content>\n                </Header>\n    \n                {/* User Dropdown  */}\n                <Header style={{ padding: \"0.25em\" }} as=\"h4\" inverted>\n                <Dropdown \n                        className=\"dropdown\"\n                        trigger={\n\n                               <Fragment>\n                                {user ? (\n                                <span>\n                                <Image src={user.profileImage} spaced=\"right\" avatar />\n\n                                {user.username}\n                                </span> \n                                ):(\n                                    <CircularProgress size={20} disableShrink />\n                                )}\n                               </Fragment>\n                           \n                        }\n                            options={this.dropdownOptions()}\n                        />\n                </Header>\n              </Grid.Row>\n    \n              {/* Change User Avatar Modal   */}\n              <Modal basic open={modal} onClose={this.closeModal}>\n                <Modal.Header>Change Avatar</Modal.Header>\n                <Modal.Content>\n                  <Input\n                    onChange={this.handleChange}\n                    fluid\n                    type=\"file\"\n                    label=\"New Avatar\"\n                    name=\"previewImage\"\n                  />\n                  <Grid centered stackable columns={2}>\n                    <Grid.Row centered>\n                      <Grid.Column className=\"ui center aligned grid\">\n                        {previewImage && (\n                          <AvatarEditor\n                            ref={node => (this.avatarEditor = node)}\n                            image={previewImage}\n                            width={120}\n                            height={120}\n                            border={50}\n                            scale={1.2}\n                          />\n                        )}\n                      </Grid.Column>\n                      <Grid.Column>\n                        {croppedImage && (\n                          <Image\n                            style={{ margin: \"3.5em auto\" }}\n                            width={100}\n                            height={100}\n                            src={croppedImage}\n                          />\n                        )}\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Modal.Content>\n                <Modal.Actions>\n                  {croppedImage && (\n                    <Button\n                      color=\"green\"\n                      inverted\n                      onClick={this.uploadCroppedImage}\n                    >\n                      <Icon name=\"save\" /> Change Avatar\n                    </Button>\n                  )}\n                  <Button color=\"green\" inverted onClick={this.handleCropImage}>\n                    <Icon name=\"image\" /> Preview\n                  </Button>\n                  <Button color=\"red\" inverted onClick={this.closeModal}>\n                    <Icon name=\"remove\" /> Cancel\n                  </Button>\n                </Modal.Actions>\n              </Modal>\n            </Grid.Column>\n          </Grid>\n        );\n      }\n}\n\n// const mapStateToProps =(state) => ({\n//     user: state.user\n// })\n\nexport default  userpanel\n"]},"metadata":{},"sourceType":"module"}