{"ast":null,"code":"import { LOADING_USER, LOADING_UI, SET_GOOGLE_USER } from \"../store/types\";\nimport * as firebase from \"firebase\";\nimport Config from \"../../config/config\";\nimport axios from \"axios\";\nfirebase.initializeApp(Config);\nexport const authenticateGoogle = () => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.addScope('profile');\n  provider.addScope('email');\n  firebase.auth().signInWithPopup(provider).then(result => {\n    if (result.credential) {\n      const {\n        user\n      } = result;\n      let token;\n      console.log(user);\n      const {\n        displayName,\n        email,\n        uid,\n        getIdToken\n      } = user;\n      getIdToken().then(idToken => {\n        token = id;\n        console.log(idToken);\n      });\n      const userData = {\n        email: email,\n        username: displayName\n      };\n      dispatch(googleSignup(userData, uid));\n    }\n  }).catch(err => console.log(err));\n};\nexport const googleSignup = (userData, userId, user) => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.post(`/google/${userId}`, userData).then(res => {\n    dispatch({\n      type: SET_GOOGLE_USER,\n      payload: res.data\n    });\n    console.log(user); // window.location.href = \"/\"\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/redux/actions/userActions.js"],"names":["LOADING_USER","LOADING_UI","SET_GOOGLE_USER","firebase","Config","axios","initializeApp","authenticateGoogle","dispatch","type","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","credential","user","token","console","log","displayName","email","uid","getIdToken","idToken","id","userData","username","googleSignup","catch","err","userId","post","res","payload","data"],"mappings":"AAAA,SAAQA,YAAR,EAAqBC,UAArB,EAAiCC,eAAjC,QAAuD,gBAAvD;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAF,QAAQ,CAACG,aAAT,CAAuBF,MAAvB;AAGA,OAAO,MAAMG,kBAAkB,GAAG,MAAOC,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAER;AAAP,GAAD,CAAR;AACA,QAAMS,QAAQ,GAAG,IAAIP,QAAQ,CAACQ,IAAT,CAAcC,kBAAlB,EAAjB;AACAF,EAAAA,QAAQ,CAACG,QAAT,CAAkB,SAAlB;AACAH,EAAAA,QAAQ,CAACG,QAAT,CAAkB,OAAlB;AACAV,EAAAA,QAAQ,CAACQ,IAAT,GAAgBG,eAAhB,CAAgCJ,QAAhC,EACCK,IADD,CACOC,MAAD,IAAW;AACb,QAAIA,MAAM,CAACC,UAAX,EAAuB;AACvB,YAAM;AAACC,QAAAA;AAAD,UAASF,MAAf;AACA,UAAIG,KAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,YAAO;AAACI,QAAAA,WAAD;AAAcC,QAAAA,KAAd;AAAoBC,QAAAA,GAApB;AAAwBC,QAAAA;AAAxB,UAAsCP,IAA7C;AACAO,MAAAA,UAAU,GAAGV,IAAb,CAAkBW,OAAO,IAAG;AACxBP,QAAAA,KAAK,GAAGQ,EAAR;AACDP,QAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AAEF,OAJD;AAMA,YAAME,QAAQ,GAAG;AACZL,QAAAA,KAAK,EAAEA,KADK;AAEZM,QAAAA,QAAQ,EAAEP;AAFE,OAAjB;AAKAd,MAAAA,QAAQ,CAACsB,YAAY,CAACF,QAAD,EAAUJ,GAAV,CAAb,CAAR;AACC;AAGF,GAtBH,EAuBCO,KAvBD,CAuBQC,GAAD,IAASZ,OAAO,CAACC,GAAR,CAAYW,GAAZ,CAvBhB;AA0BH,CA/BM;AAkCP,OAAO,MAAMF,YAAY,GAAG,CAACF,QAAD,EAAUK,MAAV,EAAiBf,IAAjB,KAA2BV,QAAD,IAAc;AAChEA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAET;AAAP,GAAD,CAAR;AACAK,EAAAA,KAAK,CAAC6B,IAAN,CAAY,WAAUD,MAAO,EAA7B,EAA+BL,QAA/B,EACCb,IADD,CACMoB,GAAG,IAAG;AACR3B,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,eADD;AAELkC,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,KAAD,CAAR;AAKAjB,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EANQ,CAOR;AACH,GATD,EAUCa,KAVD,CAUQC,GAAD,IAASZ,OAAO,CAACC,GAAR,CAAYW,GAAZ,CAVhB;AAYH,CAdM","sourcesContent":["import {LOADING_USER,LOADING_UI, SET_GOOGLE_USER} from \"../store/types\"\nimport * as firebase from \"firebase\"\nimport Config from \"../../config/config\"\nimport axios from \"axios\"\n\nfirebase.initializeApp(Config)\n\n\nexport const authenticateGoogle = () => (dispatch) => {\n    dispatch({type: LOADING_UI})\n    const provider = new firebase.auth.GoogleAuthProvider()\n    provider.addScope('profile');\n    provider.addScope('email');\n    firebase.auth().signInWithPopup(provider)\n    .then((result) =>{\n        if (result.credential) {\n        const {user} = result\n        let token;   \n        console.log(user)   \n        const  {displayName, email,uid,getIdToken} = user\n        getIdToken().then(idToken=> {\n            token = id\n           console.log(idToken)\n\n        })\n\n        const userData = {\n             email: email,\n             username: displayName\n        }\n       \n        dispatch(googleSignup(userData,uid))\n        }\n        \n        \n      }) \n    .catch((err) => console.log(err));\n\n\n}\n\n\nexport const googleSignup = (userData,userId,user) => (dispatch) => {\n    dispatch({type: LOADING_USER})\n    axios.post(`/google/${userId}`,userData)\n    .then(res=> {\n        dispatch({\n            type: SET_GOOGLE_USER,\n            payload: res.data\n        })\n        \n        console.log(user)\n        // window.location.href = \"/\"\n    })\n    .catch((err) => console.log(err));\n\n}"]},"metadata":{},"sourceType":"module"}