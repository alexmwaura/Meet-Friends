{"ast":null,"code":"var _jsxFileName = \"/home/alexkhan/Documents/meet-friends/frontend/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport login from './pages/login/login';\nimport { Provider, connect } from \"react-redux\";\nimport AuthRoute from \"./Auth/AuthRoute\";\nimport store from \"./redux/store/store\";\nimport firebase from \"./Auth/firebase\";\nimport * as serviceWorker from './serviceWorker';\nimport { SET_AUTHENTICATED, SET_UNAUTHENTICATED } from './redux/store/types';\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { setAuthenticatedUser } from './redux/actions/userActions';\n\nclass Root extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      latitude: \"\",\n      longitude: \"\"\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.props.setAuthenticatedUser(user);\n        const {\n          xa\n        } = user;\n        store.dispatch({\n          type: SET_AUTHENTICATED,\n          payload: user\n        });\n        this.props.history.push(\"/\");\n        const token = `Bearer ${xa}`;\n\n        if (jwt_decode(xa)['exp'] * 1000 < Date.now()) {\n          store.dispatch({\n            type: SET_UNAUTHENTICATED\n          });\n          this.props.history.push(\"/login\");\n        }\n\n        axios.defaults.headers.common[\"Authorization\"] = token;\n      } else {\n        store.dispatch({\n          type: SET_UNAUTHENTICATED\n        });\n        this.props.history.push('/login');\n      }\n    });\n  }\n\n  getLocation() {\n    navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      }, () => {\n        console.log(this.state.latitude);\n      });\n    }, error => {//Handle error\n    }, {\n      enableHighAccuracy: false,\n      timeout: 200000,\n      maximumAge: 1000\n    });\n  }\n\n  watchUserPosition() {\n    this.watcher = navigator.geolocation.watchPosition(position => {\n      this.setState({\n        newLatitude: position.coords.latitude,\n        newLongitude: position.coords.longitude,\n        error: null\n      });\n    }, error => this.setState({\n      error: error.message\n    }), {\n      enableHighAccuracy: true,\n      timeout: 20000,\n      maximumAge: 1000,\n      distanceFilter: 10\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(AuthRoute, {\n      exact: true,\n      path: \"/login\",\n      component: login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: App,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 12\n      }\n    }));\n  }\n\n}\n\nconst RootWithAuth = withRouter(connect(null, {\n  setAuthenticatedUser\n})(Root));\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(RootWithAuth, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 4\n  }\n}))), document.getElementById('root'));\nserviceWorker.register();","map":{"version":3,"sources":["/home/alexkhan/Documents/meet-friends/frontend/src/index.js"],"names":["React","Component","ReactDOM","App","BrowserRouter","Router","Route","Switch","withRouter","login","Provider","connect","AuthRoute","store","firebase","serviceWorker","SET_AUTHENTICATED","SET_UNAUTHENTICATED","axios","jwt_decode","setAuthenticatedUser","Root","state","latitude","longitude","componentDidMount","auth","onAuthStateChanged","user","props","xa","dispatch","type","payload","history","push","token","Date","now","defaults","headers","common","getLocation","navigator","geolocation","getCurrentPosition","position","setState","coords","console","log","error","enableHighAccuracy","timeout","maximumAge","watchUserPosition","watcher","watchPosition","newLatitude","newLongitude","message","distanceFilter","render","RootWithAuth","document","getElementById","register"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport login from './pages/login/login'\nimport {Provider,connect} from \"react-redux\"\nimport AuthRoute from  \"./Auth/AuthRoute\"\nimport store from \"./redux/store/store\"\nimport firebase from \"./Auth/firebase\"\nimport * as serviceWorker from './serviceWorker';\nimport { SET_AUTHENTICATED, SET_UNAUTHENTICATED } from './redux/store/types';\nimport axios from \"axios\"\nimport jwt_decode from \"jwt-decode\"\nimport {setAuthenticatedUser} from './redux/actions/userActions'\n\nclass Root extends Component {\n  state = {\n    latitude: \"\",\n    longitude: \"\"\n  }\n  componentDidMount(){\n   \n\n\n    firebase.auth().onAuthStateChanged(user=> {\n      if(user){\n        this.props.setAuthenticatedUser(user)\n        const {xa} = user\n        store.dispatch({\n        type: SET_AUTHENTICATED,\n        payload: user\n        })\n        this.props.history.push(\"/\")\n        const token = `Bearer ${xa}`\n       if(jwt_decode(xa)['exp'] * 1000 < Date.now()){ \n         store.dispatch({type: SET_UNAUTHENTICATED})\n         this.props.history.push(\"/login\")\n       }\n        axios.defaults.headers.common[\"Authorization\"] = token\n      }\n      else{\n      store.dispatch({type: SET_UNAUTHENTICATED})\n      this.props.history.push( '/login')\n\n      }\n      \n    })\n  } \n  \n  getLocation() {\n    navigator.geolocation.getCurrentPosition((position) => {\n        this.setState({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n        }, () => {\n           console.log(this.state.latitude)\n        });\n    },\n    (error) => {\n        //Handle error\n    },\n    { enableHighAccuracy: false, timeout: 200000, maximumAge: 1000 },\n    );\n}\n\nwatchUserPosition() {\n    this.watcher = navigator.geolocation.watchPosition(\n      (position) => {\n        this.setState({\n          newLatitude: position.coords.latitude,\n          newLongitude: position.coords.longitude,\n          error: null,\n        });\n      },\n      (error) => this.setState({ error: error.message }),\n      { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000, distanceFilter: 10 },\n    );\n  }\n\n  render(){\n    return(\n   \n     \n         <Switch>\n           <AuthRoute exact path=\"/login\" component={login} />\n           <Route exact path=\"/\" component={App} />\n         </Switch>\n      \n      \n    )\n  }\n}\n\nconst RootWithAuth = withRouter(connect(null, {setAuthenticatedUser})(Root))\n\n\nReactDOM.render(\n  <Provider store={store}>\n <Router>\n   <RootWithAuth/>\n </Router>\n </Provider>,\n\n  document.getElementById('root')\n);\nserviceWorker.register()\n\n"]},"metadata":{},"sourceType":"module"}